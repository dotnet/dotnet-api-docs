<Type Name="Sve" FullName="System.Runtime.Intrinsics.Arm.Sve">
  <TypeSignature Language="C#" Value="public abstract class Sve : System.Runtime.Intrinsics.Arm.AdvSimd" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Sve extends System.Runtime.Intrinsics.Arm.AdvSimd" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Intrinsics.Arm.Sve" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Sve&#xA;Inherits AdvSimd" />
  <TypeSignature Language="F#" Value="type Sve = class&#xA;    inherit AdvSimd" />
  <TypeSignature Language="C++ CLI" Value="public ref class Sve abstract : System::Runtime::Intrinsics::Arm::AdvSimd" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Intrinsics.Arm.AdvSimd</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("SYSLIB5003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides access to the ARM SVE hardware instructions via intrinsics.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Abs (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Abs(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Abs(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Abs value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Abs(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svabs[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svabs[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svabs[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FABS Ztied.D, Pg/M, Zop.D</para>
          <para>  FABS Ztied.D, Pg/M, Ztied.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Abs (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Abs(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Abs(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Abs value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Abs(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svabs[_s16]_m(svint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svint16_t svabs[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svint16_t svabs[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  ABS Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Abs (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Abs(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Abs(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Abs value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Abs(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svabs[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svabs[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svabs[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  ABS Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Abs (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Abs(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Abs(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Abs value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Abs(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svabs[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svabs[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svabs[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  ABS Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Abs (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Abs(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Abs(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Abs value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Abs(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint8_t svabs[_s8]_m(svint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svint8_t svabs[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svint8_t svabs[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>  ABS Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Abs (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Abs(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Abs(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Abs value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Abs(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svabs[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svabs[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svabs[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FABS Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AbsoluteCompareGreaterThan (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AbsoluteCompareGreaterThan(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareGreaterThan (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareGreaterThan : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AbsoluteCompareGreaterThan(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svacgt[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FACGT Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AbsoluteCompareGreaterThan (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AbsoluteCompareGreaterThan(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareGreaterThan (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareGreaterThan : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AbsoluteCompareGreaterThan(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svacgt[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FACGT Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AbsoluteCompareGreaterThanOrEqual (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AbsoluteCompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareGreaterThanOrEqual (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareGreaterThanOrEqual : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AbsoluteCompareGreaterThanOrEqual(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svacge[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FACGE Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AbsoluteCompareGreaterThanOrEqual (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AbsoluteCompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareGreaterThanOrEqual (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareGreaterThanOrEqual : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AbsoluteCompareGreaterThanOrEqual(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svacge[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FACGE Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AbsoluteCompareLessThan (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AbsoluteCompareLessThan(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareLessThan (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareLessThan : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AbsoluteCompareLessThan(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svaclt[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FACLT Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AbsoluteCompareLessThan (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AbsoluteCompareLessThan(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareLessThan (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareLessThan : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AbsoluteCompareLessThan(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svaclt[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FACLT Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AbsoluteCompareLessThanOrEqual (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AbsoluteCompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareLessThanOrEqual (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareLessThanOrEqual : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AbsoluteCompareLessThanOrEqual(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svacle[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FACLE Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteCompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AbsoluteCompareLessThanOrEqual (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AbsoluteCompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteCompareLessThanOrEqual (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AbsoluteCompareLessThanOrEqual : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteCompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AbsoluteCompareLessThanOrEqual(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svacle[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FACLE Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; AbsoluteDifference (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; AbsoluteDifference(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svabd[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svabd[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  UABD Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AbsoluteDifference (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AbsoluteDifference(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svabd[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svabd[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svabd[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FABD Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; AbsoluteDifference (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; AbsoluteDifference(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svabd[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svabd[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svabd[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  SABD Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; AbsoluteDifference (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; AbsoluteDifference(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svabd[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svabd[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svabd[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  SABD Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; AbsoluteDifference (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; AbsoluteDifference(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svabd[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svabd[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svabd[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  SABD Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; AbsoluteDifference (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; AbsoluteDifference(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svabd[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svabd[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svabd[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  SABD Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AbsoluteDifference (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AbsoluteDifference(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svabd[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svabd[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svabd[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FABD Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; AbsoluteDifference (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; AbsoluteDifference(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svabd[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svabd[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svabd[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  UABD Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; AbsoluteDifference (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; AbsoluteDifference(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svabd[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svabd[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svabd[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  UABD Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteDifference">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; AbsoluteDifference (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; AbsoluteDifference(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbsoluteDifference (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member AbsoluteDifference : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AbsoluteDifference (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; AbsoluteDifference(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svabd[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svabd[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svabd[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  UABD Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Add (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Add(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Add(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svadd[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svadd[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svadd[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  ADD Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Add (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Add(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Add(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svadd[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svadd[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svadd[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FADD Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Add (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Add(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Add(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svadd[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svadd[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svadd[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  ADD Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Add (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Add(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Add(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svadd[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svadd[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svadd[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  ADD Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Add (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Add(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Add(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svadd[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svadd[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svadd[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  ADD Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Add (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Add(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Add(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svadd[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svadd[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svadd[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  ADD Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Add (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Add(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Add(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svadd[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svadd[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svadd[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FADD Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Add (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Add(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Add(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svadd[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svadd[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svadd[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  ADD Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Add (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Add(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Add(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svadd[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svadd[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svadd[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  ADD Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Add (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Add(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Add(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Add (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Add(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svadd[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svadd[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svadd[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  ADD Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; AddAcross (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of Byte)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; AddAcross(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svaddv[_u8](svbool_t pg, svuint8_t op)</para>
          <para>  UADDV Dresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AddAcross (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AddAcross(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float64_t svaddv[_f64](svbool_t pg, svfloat64_t op)</para>
          <para>  FADDV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; AddAcross (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of Short)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; AddAcross(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svaddv[_s16](svbool_t pg, svint16_t op)</para>
          <para>  SADDV Dresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; AddAcross (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of Integer)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; AddAcross(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svaddv[_s32](svbool_t pg, svint32_t op)</para>
          <para>  SADDV Dresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; AddAcross (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; AddAcross(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svaddv[_s64](svbool_t pg, svint64_t op)</para>
          <para>  UADDV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; AddAcross (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of SByte)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; AddAcross(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svaddv[_s8](svbool_t pg, svint8_t op)</para>
          <para>  SADDV Dresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AddAcross (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AddAcross(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float32_t svaddv[_f32](svbool_t pg, svfloat32_t op)</para>
          <para>  FADDV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; AddAcross (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of UShort)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; AddAcross(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svaddv[_u16](svbool_t pg, svuint16_t op)</para>
          <para>  UADDV Dresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; AddAcross (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of UInteger)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; AddAcross(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svaddv[_u32](svbool_t pg, svuint32_t op)</para>
          <para>  UADDV Dresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; AddAcross (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; AddAcross(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddAcross(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAcross (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member AddAcross : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; AddAcross(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svaddv[_u64](svbool_t pg, svuint64_t op)</para>
          <para>  UADDV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRotateComplex">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AddRotateComplex (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right, byte rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AddRotateComplex(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right, unsigned int8 rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddRotateComplex(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRotateComplex (left As Vector(Of Double), right As Vector(Of Double), rotation As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AddRotateComplex : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddRotateComplex (left, right, rotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AddRotateComplex(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right, System::Byte rotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="rotation" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=1, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=1, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
          <para>svfloat64_t svcadd[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2, uint64_t imm_rotation)</para>
          <para>svfloat64_t svcadd[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2, uint64_t imm_rotation)</para>
          <para>svfloat64_t svcadd[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2, uint64_t imm_rotation)</para>
          <para>  FCADD Ztied1.D, Pg/M, Ztied1.D, Zop2.D, #imm_rotation</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRotateComplex">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AddRotateComplex (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right, byte rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AddRotateComplex(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right, unsigned int8 rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddRotateComplex(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRotateComplex (left As Vector(Of Single), right As Vector(Of Single), rotation As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AddRotateComplex : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddRotateComplex (left, right, rotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AddRotateComplex(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right, System::Byte rotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="rotation" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=1, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=1, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
          <para>svfloat32_t svcadd[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2, uint64_t imm_rotation)</para>
          <para>svfloat32_t svcadd[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2, uint64_t imm_rotation)</para>
          <para>svfloat32_t svcadd[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2, uint64_t imm_rotation)</para>
          <para>  FCADD Ztied1.S, Pg/M, Ztied1.S, Zop2.S, #imm_rotation</para>
          <para>  FCADD Ztied1.S, Pg/M, Ztied1.S, Zop2.S, #imm_rotation</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; AddSaturate (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; AddSaturate(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svqadd[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>  UQADD Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; AddSaturate (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; AddSaturate(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svqadd[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  SQADD Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; AddSaturate (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; AddSaturate(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svqadd[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  SQADD Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; AddSaturate (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; AddSaturate(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svqadd[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  SQADD Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; AddSaturate (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; AddSaturate(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svqadd[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  SQADD Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; AddSaturate (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; AddSaturate(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svqadd[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  UQADD Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; AddSaturate (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; AddSaturate(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svqadd[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  UQADD Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; AddSaturate (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; AddSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSaturate(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSaturate (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member AddSaturate : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; AddSaturate(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svqadd[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  UQADD Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSequentialAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; AddSequentialAcross (System.Numerics.Vector&lt;double&gt; initial, System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; AddSequentialAcross(valuetype System.Numerics.Vector`1&lt;float64&gt; initial, valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSequentialAcross(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSequentialAcross (initial As Vector(Of Double), value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member AddSequentialAcross : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSequentialAcross (initial, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; AddSequentialAcross(System::Numerics::Vector&lt;double&gt; initial, System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initial" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="initial">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>float64_t svadda[_f64](svbool_t pg, float64_t initial, svfloat64_t op)</para>
          <para>  FADDA Dtied, Pg, Dtied, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSequentialAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; AddSequentialAcross (System.Numerics.Vector&lt;float&gt; initial, System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; AddSequentialAcross(valuetype System.Numerics.Vector`1&lt;float32&gt; initial, valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AddSequentialAcross(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddSequentialAcross (initial As Vector(Of Single), value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member AddSequentialAcross : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AddSequentialAcross (initial, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; AddSequentialAcross(System::Numerics::Vector&lt;float&gt; initial, System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initial" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="initial">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>float32_t svadda[_f32](svbool_t pg, float32_t initial, svfloat32_t op)</para>
          <para>  FADDA Stied, Pg, Stied, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; And (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; And(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; And(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svand[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svand[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svand[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; And (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; And(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; And(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svand[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svand[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svand[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; And (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; And(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; And(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svand[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svand[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svand[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; And (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; And(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; And(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svand[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svand[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svand[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; And (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; And(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; And(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svand[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svand[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svand[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; And (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; And(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; And(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svand[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svand[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svand[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; And (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; And(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; And(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svand[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svand[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svand[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; And (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; And(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.And(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member And : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.And (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; And(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svand[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svand[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svand[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  AND Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svand[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  AND Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; AndAcross (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; AndAcross(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint8_t svandv[_u8](svbool_t pg, svuint8_t op)</para>
          <para>  ANDV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; AndAcross (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; AndAcross(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int16_t svandv[_s16](svbool_t pg, svint16_t op)</para>
          <para>  ANDV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; AndAcross (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; AndAcross(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int32_t svandv[_s32](svbool_t pg, svint32_t op)</para>
          <para>  ANDV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; AndAcross (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; AndAcross(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svandv[_s64](svbool_t pg, svint64_t op)</para>
          <para>  ANDV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; AndAcross (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; AndAcross(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int8_t svandv[_s8](svbool_t pg, svint8_t op)</para>
          <para>  ANDV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; AndAcross (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; AndAcross(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint16_t svandv[_u16](svbool_t pg, svuint16_t op)</para>
          <para>  ANDV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; AndAcross (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; AndAcross(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint32_t svandv[_u32](svbool_t pg, svuint32_t op)</para>
          <para>  ANDV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; AndAcross (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; AndAcross(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.AndAcross(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAcross (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member AndAcross : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.AndAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; AndAcross(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svandv[_u64](svbool_t pg, svuint64_t op)</para>
          <para>  ANDV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; BitwiseClear (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; BitwiseClear(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svbic[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svbic[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svbic[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  BIC Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; BitwiseClear (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; BitwiseClear(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svbic[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svbic[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svbic[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  BIC Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; BitwiseClear (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; BitwiseClear(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svbic[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svbic[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svbic[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  BIC Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; BitwiseClear (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; BitwiseClear(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svbic[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svbic[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svbic[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  BIC Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; BitwiseClear (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; BitwiseClear(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svbic[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svbic[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svbic[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  BIC Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; BitwiseClear (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; BitwiseClear(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svbic[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svbic[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svbic[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  BIC Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; BitwiseClear (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; BitwiseClear(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svbic[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svbic[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svbic[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  BIC Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitwiseClear">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; BitwiseClear (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; BitwiseClear(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BitwiseClear(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitwiseClear (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member BitwiseClear : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BitwiseClear (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; BitwiseClear(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svbic[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svbic[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svbic[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  BIC Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  BIC Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svbic[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BIC Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; BooleanNot (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; BooleanNot(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svcnot[_u8]_m(svuint8_t inactive, svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svcnot[_u8]_x(svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svcnot[_u8]_z(svbool_t pg, svuint8_t op)</para>
          <para>  CNOT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; BooleanNot (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; BooleanNot(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svcnot[_s16]_m(svint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svint16_t svcnot[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svint16_t svcnot[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  CNOT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; BooleanNot (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; BooleanNot(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svcnot[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svcnot[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svcnot[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  CNOT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; BooleanNot (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; BooleanNot(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svcnot[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svcnot[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svcnot[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  CNOT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; BooleanNot (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; BooleanNot(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint8_t svcnot[_s8]_m(svint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svint8_t svcnot[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svint8_t svcnot[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>  CNOT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; BooleanNot (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; BooleanNot(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svcnot[_u16]_m(svuint16_t inactive, svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svcnot[_u16]_x(svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svcnot[_u16]_z(svbool_t pg, svuint16_t op)</para>
          <para>  CNOT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; BooleanNot (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; BooleanNot(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcnot[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svcnot[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svcnot[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  CNOT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BooleanNot">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; BooleanNot (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; BooleanNot(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.BooleanNot(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BooleanNot (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member BooleanNot : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.BooleanNot value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; BooleanNot(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcnot[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svcnot[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svcnot[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  CNOT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Compact (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Compact(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compact(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compact (mask As Vector(Of Double), value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Compact : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compact (mask, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Compact(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svcompact[_f64](svbool_t pg, svfloat64_t op)</para>
          <para>  COMPACT Zresult.D, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Compact (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Compact(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compact(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compact (mask As Vector(Of Integer), value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Compact : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compact (mask, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Compact(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svcompact[_s32](svbool_t pg, svint32_t op)</para>
          <para>  COMPACT Zresult.S, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Compact (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Compact(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compact(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compact (mask As Vector(Of Long), value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Compact : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compact (mask, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Compact(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svcompact[_s64](svbool_t pg, svint64_t op)</para>
          <para>  COMPACT Zresult.D, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Compact (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Compact(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compact(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compact (mask As Vector(Of Single), value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Compact : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compact (mask, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Compact(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svcompact[_f32](svbool_t pg, svfloat32_t op)</para>
          <para>  COMPACT Zresult.S, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compact (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compact(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compact(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compact (mask As Vector(Of UInteger), value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compact : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compact (mask, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compact(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcompact[_u32](svbool_t pg, svuint32_t op)</para>
          <para>  COMPACT Zresult.S, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compact (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compact(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compact(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compact (mask As Vector(Of ULong), value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compact : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compact (mask, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compact(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcompact[_u64](svbool_t pg, svuint64_t op)</para>
          <para>  COMPACT Zresult.D, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareEqual (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareEqual(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  CMPEQ Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CompareEqual (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CompareEqual(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FCMEQ Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareEqual (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareEqual(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  CMPEQ Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareEqual (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Short), right As Vector(Of Long)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareEqual(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq_wide[_s16](svbool_t pg, svint16_t op1, svint64_t op2)</para>
          <para>  CMPEQ Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareEqual (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareEqual(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  CMPEQ Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareEqual (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Integer), right As Vector(Of Long)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareEqual(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq_wide[_s32](svbool_t pg, svint32_t op1, svint64_t op2)</para>
          <para>  CMPEQ Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CompareEqual (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CompareEqual(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  CMPEQ Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareEqual (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of SByte), right As Vector(Of Long)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareEqual(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq_wide[_s8](svbool_t pg, svint8_t op1, svint64_t op2)</para>
          <para>  CMPEQ Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareEqual (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareEqual(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  CMPEQ Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CompareEqual (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CompareEqual(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FCMEQ Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareEqual (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareEqual(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  CMPEQ Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareEqual (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareEqual(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  CMPEQ Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CompareEqual (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CompareEqual(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareEqual(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareEqual (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CompareEqual : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CompareEqual(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpeq[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  CMPEQ Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareGreaterThan (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  CMPHI Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareGreaterThan (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Byte), right As Vector(Of ULong)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt_wide[_u8](svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>  CMPHI Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CompareGreaterThan (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CompareGreaterThan(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FCMGT Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareGreaterThan (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareGreaterThan(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  CMPGT Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareGreaterThan (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Short), right As Vector(Of Long)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareGreaterThan(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt_wide[_s16](svbool_t pg, svint16_t op1, svint64_t op2)</para>
          <para>  CMPGT Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareGreaterThan (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareGreaterThan(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  CMPGT Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareGreaterThan (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Integer), right As Vector(Of Long)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareGreaterThan(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt_wide[_s32](svbool_t pg, svint32_t op1, svint64_t op2)</para>
          <para>  CMPGT Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CompareGreaterThan (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CompareGreaterThan(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  CMPGT Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareGreaterThan (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of SByte), right As Vector(Of Long)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt_wide[_s8](svbool_t pg, svint8_t op1, svint64_t op2)</para>
          <para>  CMPGT Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareGreaterThan (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  CMPGT Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CompareGreaterThan (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CompareGreaterThan(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FCMGT Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareGreaterThan (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  CMPHI Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareGreaterThan (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of UShort), right As Vector(Of ULong)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt_wide[_u16](svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>  CMPHI Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareGreaterThan (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  CMPHI Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareGreaterThan (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of UInteger), right As Vector(Of ULong)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt_wide[_u32](svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>  CMPHI Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CompareGreaterThan (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CompareGreaterThan(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThan (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThan : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CompareGreaterThan(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpgt[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  CMPHI Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  CMPHS Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Byte), right As Vector(Of ULong)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge_wide[_u8](svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>  CMPHS Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FCMGE Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  CMPGE Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Short), right As Vector(Of Long)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge_wide[_s16](svbool_t pg, svint16_t op1, svint64_t op2)</para>
          <para>  CMPGE Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  CMPGE Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Integer), right As Vector(Of Long)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge_wide[_s32](svbool_t pg, svint32_t op1, svint64_t op2)</para>
          <para>  CMPGE Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  CMPGE Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of SByte), right As Vector(Of Long)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge_wide[_s8](svbool_t pg, svint8_t op1, svint64_t op2)</para>
          <para>  CMPGE Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  CMPGE Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FCMGE Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  CMPHS Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of UShort), right As Vector(Of ULong)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge_wide[_u16](svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>  CMPHS Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  CMPHS Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of UInteger), right As Vector(Of ULong)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge_wide[_u32](svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>  CMPHS Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareGreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CompareGreaterThanOrEqual (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CompareGreaterThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareGreaterThanOrEqual (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CompareGreaterThanOrEqual : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareGreaterThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CompareGreaterThanOrEqual(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpge[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  CMPHS Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareLessThan (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareLessThan(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  CMPHI Presult.B, Pg/Z, Zop2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareLessThan (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Byte), right As Vector(Of ULong)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareLessThan(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt_wide[_u8](svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>  CMPLO Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CompareLessThan (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CompareLessThan(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FCMGT Presult.D, Pg/Z, Zop2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareLessThan (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareLessThan(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  CMPGT Presult.H, Pg/Z, Zop2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareLessThan (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Short), right As Vector(Of Long)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareLessThan(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt_wide[_s16](svbool_t pg, svint16_t op1, svint64_t op2)</para>
          <para>  CMPLT Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareLessThan (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareLessThan(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  CMPGT Presult.S, Pg/Z, Zop2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareLessThan (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Integer), right As Vector(Of Long)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareLessThan(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt_wide[_s32](svbool_t pg, svint32_t op1, svint64_t op2)</para>
          <para>  CMPLT Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CompareLessThan (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CompareLessThan(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  CMPGT Presult.D, Pg/Z, Zop2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareLessThan (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of SByte), right As Vector(Of Long)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareLessThan(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt_wide[_s8](svbool_t pg, svint8_t op1, svint64_t op2)</para>
          <para>  CMPLT Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareLessThan (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareLessThan(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  CMPGT Presult.B, Pg/Z, Zop2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CompareLessThan (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CompareLessThan(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FCMGT Presult.S, Pg/Z, Zop2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareLessThan (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareLessThan(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  CMPHI Presult.H, Pg/Z, Zop2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareLessThan (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of UShort), right As Vector(Of ULong)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareLessThan(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt_wide[_u16](svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>  CMPLO Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareLessThan (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareLessThan(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  CMPHI Presult.S, Pg/Z, Zop2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareLessThan (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of UInteger), right As Vector(Of ULong)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareLessThan(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt_wide[_u32](svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>  CMPLO Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThan">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CompareLessThan (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CompareLessThan(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThan(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThan (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CompareLessThan : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThan (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CompareLessThan(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmplt[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  CMPHI Presult.D, Pg/Z, Zop2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  CMPHS Presult.B, Pg/Z, Zop2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Byte), right As Vector(Of ULong)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple_wide[_u8](svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>  CMPLS Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FCMGE Presult.D, Pg/Z, Zop2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  CMPGE Presult.H, Pg/Z, Zop2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Short), right As Vector(Of Long)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple_wide[_s16](svbool_t pg, svint16_t op1, svint64_t op2)</para>
          <para>  CMPLE Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  CMPGE Presult.S, Pg/Z, Zop2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Integer), right As Vector(Of Long)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple_wide[_s32](svbool_t pg, svint32_t op1, svint64_t op2)</para>
          <para>  CMPLE Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  CMPGE Presult.D, Pg/Z, Zop2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of SByte), right As Vector(Of Long)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple_wide[_s8](svbool_t pg, svint8_t op1, svint64_t op2)</para>
          <para>  CMPLE Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  CMPGE Presult.B, Pg/Z, Zop2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FCMGE Presult.S, Pg/Z, Zop2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  CMPHS Presult.H, Pg/Z, Zop2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of UShort), right As Vector(Of ULong)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple_wide[_u16](svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>  CMPLS Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  CMPHS Presult.S, Pg/Z, Zop2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of UInteger), right As Vector(Of ULong)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple_wide[_u32](svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>  CMPLS Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareLessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CompareLessThanOrEqual (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CompareLessThanOrEqual(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareLessThanOrEqual (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CompareLessThanOrEqual : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareLessThanOrEqual (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CompareLessThanOrEqual(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmple[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  CMPHS Presult.D, Pg/Z, Zop2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CompareNotEqualTo (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CompareNotEqualTo(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  CMPNE Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CompareNotEqualTo (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CompareNotEqualTo(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FCMNE Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareNotEqualTo (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareNotEqualTo(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  CMPNE Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CompareNotEqualTo (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Short), right As Vector(Of Long)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CompareNotEqualTo(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne_wide[_s16](svbool_t pg, svint16_t op1, svint64_t op2)</para>
          <para>  CMPNE Presult.H, Pg/Z, Zop1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareNotEqualTo (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareNotEqualTo(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  CMPNE Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CompareNotEqualTo (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Integer), right As Vector(Of Long)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CompareNotEqualTo(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne_wide[_s32](svbool_t pg, svint32_t op1, svint64_t op2)</para>
          <para>  CMPNE Presult.S, Pg/Z, Zop1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CompareNotEqualTo (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CompareNotEqualTo(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  CMPNE Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareNotEqualTo (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of SByte), right As Vector(Of Long)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareNotEqualTo(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne_wide[_s8](svbool_t pg, svint8_t op1, svint64_t op2)</para>
          <para>  CMPNE Presult.B, Pg/Z, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CompareNotEqualTo (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CompareNotEqualTo(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  CMPNE Presult.B, Pg/Z, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CompareNotEqualTo (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CompareNotEqualTo(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FCMNE Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CompareNotEqualTo (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CompareNotEqualTo(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  CMPNE Presult.H, Pg/Z, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CompareNotEqualTo (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CompareNotEqualTo(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  CMPNE Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareNotEqualTo">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CompareNotEqualTo (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CompareNotEqualTo(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareNotEqualTo (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CompareNotEqualTo : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareNotEqualTo (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CompareNotEqualTo(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpne[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  CMPNE Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnordered">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CompareUnordered (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CompareUnordered(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareUnordered(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnordered (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CompareUnordered : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareUnordered (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CompareUnordered(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpuo[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FCMUO Presult.D, Pg/Z, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnordered">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CompareUnordered (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CompareUnordered(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CompareUnordered(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnordered (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CompareUnordered : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CompareUnordered (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CompareUnordered(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svcmpuo[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FCMUO Presult.S, Pg/Z, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute16BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute16BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute16BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute16BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of Integer)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute16BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute16BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrh[_u32base]_[s32]index(svuint32_t bases, svint32_t indices)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zindices.S, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute16BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute16BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute16BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute16BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute16BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute16BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrh[_u32base]_[u32]index(svuint32_t bases, svuint32_t indices)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zindices.S, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute16BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute16BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute16BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute16BitAddresses (bases As Vector(Of ULong), indices As Vector(Of Long)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute16BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute16BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrh[_u64base]_[s64]index(svuint64_t bases, svint64_t indices)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute16BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute16BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute16BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute16BitAddresses (bases As Vector(Of ULong), indices As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute16BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute16BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute16BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrh[_u64base]_[u64]index(svuint64_t bases, svuint64_t indices)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute32BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute32BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute32BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute32BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of Integer)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute32BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute32BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrw[_u32base]_[s32]index(svuint32_t bases, svint32_t indices)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zindices.S, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute32BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute32BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute32BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute32BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute32BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute32BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrw[_u32base]_[u32]index(svuint32_t bases, svuint32_t indices)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zindices.S, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute32BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute32BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute32BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute32BitAddresses (bases As Vector(Of ULong), indices As Vector(Of Long)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute32BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute32BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrw[_u64base]_[s64]index(svuint64_t bases, svint64_t indices)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute32BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute32BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute32BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute32BitAddresses (bases As Vector(Of ULong), indices As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute32BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute32BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute32BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrw[_u64base]_[u64]index(svuint64_t bases, svuint64_t indices)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute64BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute64BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute64BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute64BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of Integer)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute64BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute64BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrd[_u32base]_[s32]index(svuint32_t bases, svint32_t indices)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zindices.S, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute64BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute64BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute64BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute64BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute64BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute64BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrd[_u32base]_[u32]index(svuint32_t bases, svuint32_t indices)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zindices.S, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute64BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute64BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute64BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute64BitAddresses (bases As Vector(Of ULong), indices As Vector(Of Long)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute64BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute64BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrd[_u64base]_[s64]index(svuint64_t bases, svint64_t indices)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute64BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute64BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute64BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute64BitAddresses (bases As Vector(Of ULong), indices As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute64BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute64BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute64BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrd[_u64base]_[u64]index(svuint64_t bases, svuint64_t indices)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute8BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute8BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute8BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute8BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of Integer)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute8BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute8BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrb[_u32base]_[s32]offset(svuint32_t bases, svint32_t offsets)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zoffsets.S]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute8BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Compute8BitAddresses (System.Numerics.Vector&lt;uint&gt; bases, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Compute8BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute8BitAddresses (bases As Vector(Of UInteger), indices As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Compute8BitAddresses : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Compute8BitAddresses(System::Numerics::Vector&lt;System::UInt32&gt; bases, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svadrb[_u32base]_[u32]offset(svuint32_t bases, svuint32_t offsets)</para>
          <para>  ADR Zresult.S, [Zbases.S, Zoffsets.S]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute8BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute8BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute8BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute8BitAddresses (bases As Vector(Of ULong), indices As Vector(Of Long)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute8BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute8BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrb[_u64base]_[s64]offset(svuint64_t bases, svint64_t offsets)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute8BitAddresses">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Compute8BitAddresses (System.Numerics.Vector&lt;ulong&gt; bases, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Compute8BitAddresses(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; bases, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compute8BitAddresses (bases As Vector(Of ULong), indices As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Compute8BitAddresses : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Compute8BitAddresses (bases, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Compute8BitAddresses(System::Numerics::Vector&lt;System::UInt64&gt; bases, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bases" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="bases">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svadrb[_u64base]_[u64]offset(svuint64_t bases, svuint64_t offsets)</para>
          <para>  ADR Zresult.D, [Zbases.D, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static byte ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;byte&gt; mask, byte defaultValues, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Byte},System.Byte,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Byte), defaultValues As Byte, data As Vector(Of Byte)) As Byte" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;byte&gt; * byte * System.Numerics.Vector&lt;byte&gt; -&gt; byte" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte defaultValues, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="defaultValues" Type="System.Byte" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint8_t svclasta[_n_u8](svbool_t pg, uint8_t fallback, svuint8_t data)</para>
          <para>  CLASTA Wtied, Pg, Wtied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; defaultValue, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Byte), defaultValue As Vector(Of Byte), data As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; defaultValue, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint8_t svclasta[_u8](svbool_t pg, svuint8_t fallback, svuint8_t data)</para>
          <para>  CLASTA Btied, Pg, Btied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static double ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;double&gt; mask, double defaultValues, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64 defaultValues, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Double},System.Double,System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Double), defaultValues As Double, data As Vector(Of Double)) As Double" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;double&gt; * double * System.Numerics.Vector&lt;double&gt; -&gt; double" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;double&gt; mask, double defaultValues, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="defaultValues" Type="System.Double" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>float64_t svclasta[_n_f64](svbool_t pg, float64_t fallback, svfloat64_t data)</para>
          <para>  CLASTA Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; defaultValue, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Double), defaultValue As Vector(Of Double), data As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; defaultValue, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat64_t svclasta[_f64](svbool_t pg, svfloat64_t fallback, svfloat64_t data)</para>
          <para>  CLASTA Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static short ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;short&gt; mask, short defaultValues, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16 defaultValues, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Int16},System.Int16,System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Short), defaultValues As Short, data As Vector(Of Short)) As Short" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;int16&gt; * int16 * System.Numerics.Vector&lt;int16&gt; -&gt; int16" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;short&gt; mask, short defaultValues, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="defaultValues" Type="System.Int16" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int16_t svclasta[_n_s16](svbool_t pg, int16_t fallback, svint16_t data)</para>
          <para>  CLASTA Wtied, Pg, Wtied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; defaultValue, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Short), defaultValue As Vector(Of Short), data As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; defaultValue, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint16_t svclasta[_s16](svbool_t pg, svint16_t fallback, svint16_t data)</para>
          <para>  CLASTA Htied, Pg, Htied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static int ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;int&gt; mask, int defaultValues, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32 defaultValues, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Integer), defaultValues As Integer, data As Vector(Of Integer)) As Integer" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;int&gt; * int * System.Numerics.Vector&lt;int&gt; -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;int&gt; mask, int defaultValues, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="defaultValues" Type="System.Int32" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int32_t svclasta[_n_s32](svbool_t pg, int32_t fallback, svint32_t data)</para>
          <para>  CLASTA Wtied, Pg, Wtied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; defaultValue, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Integer), defaultValue As Vector(Of Integer), data As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; defaultValue, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint32_t svclasta[_s32](svbool_t pg, svint32_t fallback, svint32_t data)</para>
          <para>  CLASTA Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static long ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;long&gt; mask, long defaultValues, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64 defaultValues, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Int64},System.Int64,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Long), defaultValues As Long, data As Vector(Of Long)) As Long" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;int64&gt; * int64 * System.Numerics.Vector&lt;int64&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;long&gt; mask, long defaultValues, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="defaultValues" Type="System.Int64" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int64_t svclasta[_n_s64](svbool_t pg, int64_t fallback, svint64_t data)</para>
          <para>  CLASTA Xtied, Pg, Xtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; defaultValue, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Long), defaultValue As Vector(Of Long), data As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; defaultValue, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint64_t svclasta[_s64](svbool_t pg, svint64_t fallback, svint64_t data)</para>
          <para>  CLASTA Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; defaultValue, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of SByte), defaultValue As Vector(Of SByte), data As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; defaultValue, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint8_t svclasta[_s8](svbool_t pg, svint8_t fallback, svint8_t data)</para>
          <para>  CLASTA Btied, Pg, Btied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static sbyte ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte defaultValues, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8 defaultValues, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.SByte},System.SByte,System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of SByte), defaultValues As SByte, data As Vector(Of SByte)) As SByte" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;sbyte&gt; * sbyte * System.Numerics.Vector&lt;sbyte&gt; -&gt; sbyte" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte defaultValues, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="defaultValues" Type="System.SByte" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int8_t svclasta[_n_s8](svbool_t pg, int8_t fallback, svint8_t data)</para>
          <para>  CLASTA Wtied, Pg, Wtied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; defaultValue, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Single), defaultValue As Vector(Of Single), data As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; defaultValue, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat32_t svclasta[_f32](svbool_t pg, svfloat32_t fallback, svfloat32_t data)</para>
          <para>  CLASTA Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static float ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;float&gt; mask, float defaultValues, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32 defaultValues, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.Single},System.Single,System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of Single), defaultValues As Single, data As Vector(Of Single)) As Single" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;single&gt; * single * System.Numerics.Vector&lt;single&gt; -&gt; single" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;float&gt; mask, float defaultValues, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="defaultValues" Type="System.Single" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>float32_t svclasta[_n_f32](svbool_t pg, float32_t fallback, svfloat32_t data)</para>
          <para>  CLASTA Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; defaultValue, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of UShort), defaultValue As Vector(Of UShort), data As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; defaultValue, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint16_t svclasta[_u16](svbool_t pg, svuint16_t fallback, svuint16_t data)</para>
          <para>  CLASTA Htied, Pg, Htied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static ushort ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;ushort&gt; mask, ushort defaultValues, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.UInt16},System.UInt16,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of UShort), defaultValues As UShort, data As Vector(Of UShort)) As UShort" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;uint16&gt; * uint16 * System.Numerics.Vector&lt;uint16&gt; -&gt; uint16" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16 defaultValues, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="defaultValues" Type="System.UInt16" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint16_t svclasta[_n_u16](svbool_t pg, uint16_t fallback, svuint16_t data)</para>
          <para>  CLASTA Wtied, Pg, Wtied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; defaultValue, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of UInteger), defaultValue As Vector(Of UInteger), data As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; defaultValue, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint32_t svclasta[_u32](svbool_t pg, svuint32_t fallback, svuint32_t data)</para>
          <para>  CLASTA Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static uint ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;uint&gt; mask, uint defaultValues, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.UInt32},System.UInt32,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of UInteger), defaultValues As UInteger, data As Vector(Of UInteger)) As UInteger" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;uint32&gt; * uint32 * System.Numerics.Vector&lt;uint32&gt; -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32 defaultValues, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="defaultValues" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint32_t svclasta[_n_u32](svbool_t pg, uint32_t fallback, svuint32_t data)</para>
          <para>  CLASTA Wtied, Pg, Wtied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; defaultValue, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of ULong), defaultValue As Vector(Of ULong), data As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; defaultValue, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint64_t svclasta[_u64](svbool_t pg, svuint64_t fallback, svuint64_t data)</para>
          <para>  CLASTA Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElement">
      <MemberSignature Language="C#" Value="public static ulong ConditionalExtractAfterLastActiveElement (System.Numerics.Vector&lt;ulong&gt; mask, ulong defaultValues, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ConditionalExtractAfterLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement(System.Numerics.Vector{System.UInt64},System.UInt64,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElement (mask As Vector(Of ULong), defaultValues As ULong, data As Vector(Of ULong)) As ULong" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElement : System.Numerics.Vector&lt;uint64&gt; * uint64 * System.Numerics.Vector&lt;uint64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ConditionalExtractAfterLastActiveElement(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64 defaultValues, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="defaultValues" Type="System.UInt64" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint64_t svclasta[_n_u64](svbool_t pg, uint64_t fallback, svuint64_t data)</para>
          <para>  CLASTA Xtied, Pg, Xtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; defaultScalar, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of Byte), defaultScalar As Vector(Of Byte), data As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; defaultScalar, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint8_t svclasta[_u8](svbool_t pg, svuint8_t fallback, svuint8_t data)</para>
          <para>  CLASTA Ztied.B, Pg, Ztied.B, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; defaultScalar, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of Double), defaultScalar As Vector(Of Double), data As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; defaultScalar, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat64_t svclasta[_f64](svbool_t pg, svfloat64_t fallback, svfloat64_t data)</para>
          <para>  CLASTA Ztied.D, Pg, Ztied.D, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; defaultScalar, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of Short), defaultScalar As Vector(Of Short), data As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; defaultScalar, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint16_t svclasta[_s16](svbool_t pg, svint16_t fallback, svint16_t data)</para>
          <para>  CLASTA Ztied.H, Pg, Ztied.H, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; defaultScalar, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of Integer), defaultScalar As Vector(Of Integer), data As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; defaultScalar, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint32_t svclasta[_s32](svbool_t pg, svint32_t fallback, svint32_t data)</para>
          <para>  CLASTA Ztied.S, Pg, Ztied.S, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; defaultScalar, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of Long), defaultScalar As Vector(Of Long), data As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; defaultScalar, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint64_t svclasta[_s64](svbool_t pg, svint64_t fallback, svint64_t data)</para>
          <para>  CLASTA Ztied.D, Pg, Ztied.D, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; defaultScalar, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of SByte), defaultScalar As Vector(Of SByte), data As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; defaultScalar, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint8_t svclasta[_s8](svbool_t pg, svint8_t fallback, svint8_t data)</para>
          <para>  CLASTA Ztied.B, Pg, Ztied.B, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; defaultScalar, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of Single), defaultScalar As Vector(Of Single), data As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; defaultScalar, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat32_t svclasta[_f32](svbool_t pg, svfloat32_t fallback, svfloat32_t data)</para>
          <para>  CLASTA Ztied.S, Pg, Ztied.S, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; defaultScalar, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of UShort), defaultScalar As Vector(Of UShort), data As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; defaultScalar, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint16_t svclasta[_u16](svbool_t pg, svuint16_t fallback, svuint16_t data)</para>
          <para>  CLASTA Ztied.H, Pg, Ztied.H, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; defaultScalar, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of UInteger), defaultScalar As Vector(Of UInteger), data As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; defaultScalar, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint32_t svclasta[_u32](svbool_t pg, svuint32_t fallback, svuint32_t data)</para>
          <para>  CLASTA Ztied.S, Pg, Ztied.S, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractAfterLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ConditionalExtractAfterLastActiveElementAndReplicate (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; defaultScalar, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ConditionalExtractAfterLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; defaultScalar, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractAfterLastActiveElementAndReplicate (mask As Vector(Of ULong), defaultScalar As Vector(Of ULong), data As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractAfterLastActiveElementAndReplicate : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractAfterLastActiveElementAndReplicate (mask, defaultScalar, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ConditionalExtractAfterLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; defaultScalar, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="defaultScalar" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultScalar">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint64_t svclasta[_u64](svbool_t pg, svuint64_t fallback, svuint64_t data)</para>
          <para>  CLASTA Ztied.D, Pg, Ztied.D, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static byte ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;byte&gt; mask, byte defaultValues, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Byte},System.Byte,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Byte), defaultValues As Byte, data As Vector(Of Byte)) As Byte" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;byte&gt; * byte * System.Numerics.Vector&lt;byte&gt; -&gt; byte" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte defaultValues, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="defaultValues" Type="System.Byte" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint8_t svclastb[_n_u8](svbool_t pg, uint8_t fallback, svuint8_t data)</para>
          <para>  CLASTB Wtied, Pg, Wtied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; defaultValue, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Byte), defaultValue As Vector(Of Byte), data As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; defaultValue, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint8_t svclastb[_u8](svbool_t pg, svuint8_t fallback, svuint8_t data)</para>
          <para>  CLASTB Btied, Pg, Btied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static double ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;double&gt; mask, double defaultValues, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64 defaultValues, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Double},System.Double,System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Double), defaultValues As Double, data As Vector(Of Double)) As Double" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;double&gt; * double * System.Numerics.Vector&lt;double&gt; -&gt; double" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;double&gt; mask, double defaultValues, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="defaultValues" Type="System.Double" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>float64_t svclastb[_n_f64](svbool_t pg, float64_t fallback, svfloat64_t data)</para>
          <para>  CLASTB Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; defaultValue, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Double), defaultValue As Vector(Of Double), data As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; defaultValue, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat64_t svclastb[_f64](svbool_t pg, svfloat64_t fallback, svfloat64_t data)</para>
          <para>  CLASTB Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static short ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;short&gt; mask, short defaultValues, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16 defaultValues, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Int16},System.Int16,System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Short), defaultValues As Short, data As Vector(Of Short)) As Short" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;int16&gt; * int16 * System.Numerics.Vector&lt;int16&gt; -&gt; int16" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;short&gt; mask, short defaultValues, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="defaultValues" Type="System.Int16" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int16_t svclastb[_n_s16](svbool_t pg, int16_t fallback, svint16_t data)</para>
          <para>  CLASTB Wtied, Pg, Wtied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; defaultValue, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Short), defaultValue As Vector(Of Short), data As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; defaultValue, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint16_t svclastb[_s16](svbool_t pg, svint16_t fallback, svint16_t data)</para>
          <para>  CLASTB Htied, Pg, Htied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static int ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;int&gt; mask, int defaultValues, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32 defaultValues, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Int32},System.Int32,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Integer), defaultValues As Integer, data As Vector(Of Integer)) As Integer" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;int&gt; * int * System.Numerics.Vector&lt;int&gt; -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;int&gt; mask, int defaultValues, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="defaultValues" Type="System.Int32" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int32_t svclastb[_n_s32](svbool_t pg, int32_t fallback, svint32_t data)</para>
          <para>  CLASTB Wtied, Pg, Wtied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; defaultValue, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Integer), defaultValue As Vector(Of Integer), data As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; defaultValue, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint32_t svclastb[_s32](svbool_t pg, svint32_t fallback, svint32_t data)</para>
          <para>  CLASTB Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static long ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;long&gt; mask, long defaultValues, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64 defaultValues, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Int64},System.Int64,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Long), defaultValues As Long, data As Vector(Of Long)) As Long" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;int64&gt; * int64 * System.Numerics.Vector&lt;int64&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;long&gt; mask, long defaultValues, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="defaultValues" Type="System.Int64" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int64_t svclastb[_n_s64](svbool_t pg, int64_t fallback, svint64_t data)</para>
          <para>  CLASTB Xtied, Pg, Xtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; defaultValue, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Long), defaultValue As Vector(Of Long), data As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; defaultValue, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint64_t svclastb[_s64](svbool_t pg, svint64_t fallback, svint64_t data)</para>
          <para>  CLASTB Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; defaultValue, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of SByte), defaultValue As Vector(Of SByte), data As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; defaultValue, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint8_t svclastb[_s8](svbool_t pg, svint8_t fallback, svint8_t data)</para>
          <para>  CLASTB Btied, Pg, Btied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static sbyte ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte defaultValues, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8 defaultValues, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.SByte},System.SByte,System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of SByte), defaultValues As SByte, data As Vector(Of SByte)) As SByte" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;sbyte&gt; * sbyte * System.Numerics.Vector&lt;sbyte&gt; -&gt; sbyte" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte defaultValues, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="defaultValues" Type="System.SByte" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>int8_t svclastb[_n_s8](svbool_t pg, int8_t fallback, svint8_t data)</para>
          <para>  CLASTB Wtied, Pg, Wtied, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; defaultValue, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Single), defaultValue As Vector(Of Single), data As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; defaultValue, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat32_t svclastb[_f32](svbool_t pg, svfloat32_t fallback, svfloat32_t data)</para>
          <para>  CLASTB Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static float ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;float&gt; mask, float defaultValues, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32 defaultValues, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.Single},System.Single,System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of Single), defaultValues As Single, data As Vector(Of Single)) As Single" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;single&gt; * single * System.Numerics.Vector&lt;single&gt; -&gt; single" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;float&gt; mask, float defaultValues, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="defaultValues" Type="System.Single" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>float32_t svclastb[_n_f32](svbool_t pg, float32_t fallback, svfloat32_t data)</para>
          <para>  CLASTB Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; defaultValue, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of UShort), defaultValue As Vector(Of UShort), data As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; defaultValue, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint16_t svclastb[_u16](svbool_t pg, svuint16_t fallback, svuint16_t data)</para>
          <para>  CLASTB Htied, Pg, Htied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static ushort ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;ushort&gt; mask, ushort defaultValues, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.UInt16},System.UInt16,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of UShort), defaultValues As UShort, data As Vector(Of UShort)) As UShort" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;uint16&gt; * uint16 * System.Numerics.Vector&lt;uint16&gt; -&gt; uint16" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16 defaultValues, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="defaultValues" Type="System.UInt16" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint16_t svclastb[_n_u16](svbool_t pg, uint16_t fallback, svuint16_t data)</para>
          <para>  CLASTB Wtied, Pg, Wtied, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; defaultValue, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of UInteger), defaultValue As Vector(Of UInteger), data As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; defaultValue, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint32_t svclastb[_u32](svbool_t pg, svuint32_t fallback, svuint32_t data)</para>
          <para>  CLASTB Stied, Pg, Stied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static uint ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;uint&gt; mask, uint defaultValues, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.UInt32},System.UInt32,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of UInteger), defaultValues As UInteger, data As Vector(Of UInteger)) As UInteger" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;uint32&gt; * uint32 * System.Numerics.Vector&lt;uint32&gt; -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32 defaultValues, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="defaultValues" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint32_t svclastb[_n_u32](svbool_t pg, uint32_t fallback, svuint32_t data)</para>
          <para>  CLASTB Wtied, Pg, Wtied, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; defaultValue, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; defaultValue, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of ULong), defaultValue As Vector(Of ULong), data As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValue, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; defaultValue, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="defaultValue" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint64_t svclastb[_u64](svbool_t pg, svuint64_t fallback, svuint64_t data)</para>
          <para>  CLASTB Dtied, Pg, Dtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElement">
      <MemberSignature Language="C#" Value="public static ulong ConditionalExtractLastActiveElement (System.Numerics.Vector&lt;ulong&gt; mask, ulong defaultValues, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ConditionalExtractLastActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64 defaultValues, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement(System.Numerics.Vector{System.UInt64},System.UInt64,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElement (mask As Vector(Of ULong), defaultValues As ULong, data As Vector(Of ULong)) As ULong" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElement : System.Numerics.Vector&lt;uint64&gt; * uint64 * System.Numerics.Vector&lt;uint64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElement (mask, defaultValues, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ConditionalExtractLastActiveElement(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64 defaultValues, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="defaultValues" Type="System.UInt64" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="defaultValues">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>uint64_t svclastb[_n_u64](svbool_t pg, uint64_t fallback, svuint64_t data)</para>
          <para>  CLASTB Xtied, Pg, Xtied, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; fallback, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; fallback, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of Byte), fallback As Vector(Of Byte), data As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; fallback, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint8_t svclastb[_u8](svbool_t pg, svuint8_t fallback, svuint8_t data)</para>
          <para>  CLASTB Ztied.B, Pg, Ztied.B, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; fallback, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; fallback, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of Double), fallback As Vector(Of Double), data As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; fallback, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat64_t svclastb[_f64](svbool_t pg, svfloat64_t fallback, svfloat64_t data)</para>
          <para>  CLASTB Ztied.D, Pg, Ztied.D, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; fallback, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; fallback, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of Short), fallback As Vector(Of Short), data As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; fallback, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint16_t svclastb[_s16](svbool_t pg, svint16_t fallback, svint16_t data)</para>
          <para>  CLASTB Ztied.H, Pg, Ztied.H, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; fallback, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; fallback, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of Integer), fallback As Vector(Of Integer), data As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; fallback, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint32_t svclastb[_s32](svbool_t pg, svint32_t fallback, svint32_t data)</para>
          <para>  CLASTB Ztied.S, Pg, Ztied.S, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; fallback, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; fallback, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of Long), fallback As Vector(Of Long), data As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; fallback, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint64_t svclastb[_s64](svbool_t pg, svint64_t fallback, svint64_t data)</para>
          <para>  CLASTB Ztied.D, Pg, Ztied.D, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; fallback, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; fallback, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of SByte), fallback As Vector(Of SByte), data As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; fallback, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svint8_t svclastb[_s8](svbool_t pg, svint8_t fallback, svint8_t data)</para>
          <para>  CLASTB Ztied.B, Pg, Ztied.B, Zdata.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; fallback, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; fallback, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of Single), fallback As Vector(Of Single), data As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; fallback, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svfloat32_t svclastb[_f32](svbool_t pg, svfloat32_t fallback, svfloat32_t data)</para>
          <para>  CLASTB Ztied.S, Pg, Ztied.S, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; fallback, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; fallback, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of UShort), fallback As Vector(Of UShort), data As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; fallback, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint16_t svclastb[_u16](svbool_t pg, svuint16_t fallback, svuint16_t data)</para>
          <para>  CLASTB Ztied.H, Pg, Ztied.H, Zdata.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; fallback, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; fallback, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of UInteger), fallback As Vector(Of UInteger), data As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; fallback, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint32_t svclastb[_u32](svbool_t pg, svuint32_t fallback, svuint32_t data)</para>
          <para>  CLASTB Ztied.S, Pg, Ztied.S, Zdata.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalExtractLastActiveElementAndReplicate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ConditionalExtractLastActiveElementAndReplicate (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; fallback, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ConditionalExtractLastActiveElementAndReplicate(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; fallback, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalExtractLastActiveElementAndReplicate (mask As Vector(Of ULong), fallback As Vector(Of ULong), data As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConditionalExtractLastActiveElementAndReplicate : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalExtractLastActiveElementAndReplicate (mask, fallback, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ConditionalExtractLastActiveElementAndReplicate(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; fallback, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="fallback" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="fallback">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>svuint64_t svclastb[_u64](svbool_t pg, svuint64_t fallback, svuint64_t data)</para>
          <para>  CLASTB Ztied.D, Pg, Ztied.D, Zdata.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ConditionalSelect (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of Byte), left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ConditionalSelect(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svsel[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.B, Pg, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConditionalSelect (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConditionalSelect(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svsel[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  SEL Zresult.D, Pg, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ConditionalSelect (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of Short), left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ConditionalSelect(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svsel[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.H, Pg, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ConditionalSelect (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of Integer), left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ConditionalSelect(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svsel[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.S, Pg, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ConditionalSelect (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of Long), left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ConditionalSelect(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svsel[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.D, Pg, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ConditionalSelect (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of SByte), left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ConditionalSelect(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svsel[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.B, Pg, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConditionalSelect (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConditionalSelect(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svsel[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  SEL Zresult.S, Pg, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ConditionalSelect (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of UShort), left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ConditionalSelect(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svsel[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.H, Pg, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ConditionalSelect (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of UInteger), left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ConditionalSelect(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svsel[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.S, Pg, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalSelect">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ConditionalSelect (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ConditionalSelect(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalSelect (mask As Vector(Of ULong), left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConditionalSelect : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConditionalSelect (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ConditionalSelect(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svsel[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svbool_t svsel[_b](svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  SEL Zresult.D, Pg, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToDouble">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConvertToDouble (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConvertToDouble(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToDouble (value As Vector(Of Integer)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConvertToDouble : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConvertToDouble(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svcvt_f64[_s32]_m(svfloat64_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svfloat64_t svcvt_f64[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svfloat64_t svcvt_f64[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  SCVTF Zresult.D, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToDouble">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConvertToDouble (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConvertToDouble(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToDouble (value As Vector(Of Long)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConvertToDouble : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConvertToDouble(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svcvt_f64[_s64]_m(svfloat64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svfloat64_t svcvt_f64[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svfloat64_t svcvt_f64[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  SCVTF Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToDouble">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConvertToDouble (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConvertToDouble(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToDouble (value As Vector(Of Single)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConvertToDouble : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConvertToDouble(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svcvt_f64[_f32]_m(svfloat64_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat64_t svcvt_f64[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat64_t svcvt_f64[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FCVT Zresult.D, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToDouble">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConvertToDouble (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConvertToDouble(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToDouble (value As Vector(Of UInteger)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConvertToDouble : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConvertToDouble(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svcvt_f64[_u32]_m(svfloat64_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svfloat64_t svcvt_f64[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svfloat64_t svcvt_f64[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  UCVTF Zresult.D, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToDouble">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ConvertToDouble (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ConvertToDouble(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToDouble (value As Vector(Of ULong)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ConvertToDouble : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToDouble value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ConvertToDouble(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svcvt_f64[_u64]_m(svfloat64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svfloat64_t svcvt_f64[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svfloat64_t svcvt_f64[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  UCVTF Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ConvertToInt32 (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ConvertToInt32(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToInt32(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToInt32 (value As Vector(Of Double)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConvertToInt32 : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToInt32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ConvertToInt32(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svcvt_s32[_f64]_m(svint32_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svint32_t svcvt_s32[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svint32_t svcvt_s32[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FCVTZS Zresult.S, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ConvertToInt32 (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ConvertToInt32(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToInt32(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToInt32 (value As Vector(Of Single)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ConvertToInt32 : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToInt32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ConvertToInt32(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svcvt_s32[_f32]_m(svint32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svint32_t svcvt_s32[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svint32_t svcvt_s32[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FCVTZS Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ConvertToInt64 (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ConvertToInt64(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToInt64(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToInt64 (value As Vector(Of Double)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConvertToInt64 : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToInt64 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ConvertToInt64(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svcvt_s64[_f64]_m(svint64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svint64_t svcvt_s64[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svint64_t svcvt_s64[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FCVTZS Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ConvertToInt64 (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ConvertToInt64(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToInt64(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToInt64 (value As Vector(Of Single)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ConvertToInt64 : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToInt64 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ConvertToInt64(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svcvt_s64[_f32]_m(svint64_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svint64_t svcvt_s64[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svint64_t svcvt_s64[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FCVTZS Zresult.D, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToSingle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConvertToSingle (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConvertToSingle(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToSingle (value As Vector(Of Double)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConvertToSingle : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConvertToSingle(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svcvt_f32[_f64]_m(svfloat32_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat32_t svcvt_f32[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat32_t svcvt_f32[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FCVT Zresult.S, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToSingle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConvertToSingle (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConvertToSingle(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToSingle (value As Vector(Of Integer)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConvertToSingle : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConvertToSingle(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svcvt_f32[_s32]_m(svfloat32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svfloat32_t svcvt_f32[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svfloat32_t svcvt_f32[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  SCVTF Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToSingle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConvertToSingle (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConvertToSingle(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToSingle (value As Vector(Of Long)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConvertToSingle : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConvertToSingle(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svcvt_f32[_s64]_m(svfloat32_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svfloat32_t svcvt_f32[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svfloat32_t svcvt_f32[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  SCVTF Zresult.S, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToSingle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConvertToSingle (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConvertToSingle(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToSingle (value As Vector(Of UInteger)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConvertToSingle : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConvertToSingle(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svcvt_f32[_u32]_m(svfloat32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svfloat32_t svcvt_f32[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svfloat32_t svcvt_f32[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  UCVTF Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToSingle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ConvertToSingle (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ConvertToSingle(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToSingle (value As Vector(Of ULong)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ConvertToSingle : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToSingle value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ConvertToSingle(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svcvt_f32[_u64]_m(svfloat32_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svfloat32_t svcvt_f32[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svfloat32_t svcvt_f32[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  UCVTF Zresult.S, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ConvertToUInt32 (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ConvertToUInt32(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt32(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUInt32 (value As Vector(Of Double)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConvertToUInt32 : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ConvertToUInt32(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcvt_u32[_f64]_m(svuint32_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svuint32_t svcvt_u32[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svuint32_t svcvt_u32[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FCVTZU Zresult.S, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ConvertToUInt32 (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ConvertToUInt32(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt32(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUInt32 (value As Vector(Of Single)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ConvertToUInt32 : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ConvertToUInt32(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcvt_u32[_f32]_m(svuint32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svuint32_t svcvt_u32[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svuint32_t svcvt_u32[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FCVTZU Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ConvertToUInt64 (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ConvertToUInt64(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt64(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUInt64 (value As Vector(Of Double)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConvertToUInt64 : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt64 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ConvertToUInt64(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcvt_u64[_f64]_m(svuint64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svuint64_t svcvt_u64[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svuint64_t svcvt_u64[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FCVTZU Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ConvertToUInt64 (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ConvertToUInt64(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt64(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUInt64 (value As Vector(Of Single)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ConvertToUInt64 : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ConvertToUInt64 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ConvertToUInt64(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcvt_u64[_f32]_m(svuint64_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svuint64_t svcvt_u64[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svuint64_t svcvt_u64[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FCVTZU Zresult.D, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count16BitElements">
      <MemberSignature Language="C#" Value="public static ulong Count16BitElements (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Count16BitElements(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Count16BitElements(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Count16BitElements (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member Count16BitElements : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.Count16BitElements pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svcnth_pat(enum svpattern pattern)</para>
          <para>  CNTH Xresult, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count32BitElements">
      <MemberSignature Language="C#" Value="public static ulong Count32BitElements (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Count32BitElements(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Count32BitElements(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Count32BitElements (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member Count32BitElements : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.Count32BitElements pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svcntw_pat(enum svpattern pattern)</para>
          <para>  CNTW Xresult, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count64BitElements">
      <MemberSignature Language="C#" Value="public static ulong Count64BitElements (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Count64BitElements(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Count64BitElements(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Count64BitElements (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member Count64BitElements : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.Count64BitElements pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svcntd_pat(enum svpattern pattern)</para>
          <para>  CNTD Xresult, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count8BitElements">
      <MemberSignature Language="C#" Value="public static ulong Count8BitElements (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Count8BitElements(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Count8BitElements(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Count8BitElements (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member Count8BitElements : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.Count8BitElements pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svcntb_pat(enum svpattern pattern)</para>
          <para>  CNTB Xresult, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of Byte), srcMask As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of Short), srcMask As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of Integer), srcMask As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of Long), srcMask As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of SByte), srcMask As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of UShort), srcMask As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of UInteger), srcMask As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateBreakAfterMask (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateBreakAfterMask(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterMask (mask As Vector(Of ULong), srcMask As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterMask : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateBreakAfterMask(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrka[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKA Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of Byte), left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of Short), left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of Integer), left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of Long), left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of SByte), left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of UShort), left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of UInteger), left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakAfterPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateBreakAfterPropagateMask (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateBreakAfterPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakAfterPropagateMask (mask As Vector(Of ULong), left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateBreakAfterPropagateMask : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakAfterPropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateBreakAfterPropagateMask(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpa[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPA Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of Byte), srcMask As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of Short), srcMask As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of Integer), srcMask As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of Long), srcMask As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of SByte), srcMask As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of UShort), srcMask As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of UInteger), srcMask As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforeMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateBreakBeforeMask (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateBreakBeforeMask(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforeMask (mask As Vector(Of ULong), srcMask As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforeMask : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforeMask (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateBreakBeforeMask(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkb[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  BRKB Presult.B, Pg/Z, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of Byte), left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of Short), left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of Integer), left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of Long), left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of SByte), left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of UShort), left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of UInteger), left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakBeforePropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateBreakBeforePropagateMask (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateBreakBeforePropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakBeforePropagateMask (mask As Vector(Of ULong), left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateBreakBeforePropagateMask : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakBeforePropagateMask (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateBreakBeforePropagateMask(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svbrkpb[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKPB Presult.B, Pg/Z, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;byte&gt; totalMask, System.Numerics.Vector&lt;byte&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; totalMask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of Byte), fromMask As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;System::Byte&gt; totalMask, System::Numerics::Vector&lt;System::Byte&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;short&gt; totalMask, System.Numerics.Vector&lt;short&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;int16&gt; totalMask, valuetype System.Numerics.Vector`1&lt;int16&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of Short), fromMask As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;short&gt; totalMask, System::Numerics::Vector&lt;short&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;int&gt; totalMask, System.Numerics.Vector&lt;int&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;int32&gt; totalMask, valuetype System.Numerics.Vector`1&lt;int32&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of Integer), fromMask As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;int&gt; totalMask, System::Numerics::Vector&lt;int&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;long&gt; totalMask, System.Numerics.Vector&lt;long&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;int64&gt; totalMask, valuetype System.Numerics.Vector`1&lt;int64&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of Long), fromMask As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;long&gt; totalMask, System::Numerics::Vector&lt;long&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;sbyte&gt; totalMask, System.Numerics.Vector&lt;sbyte&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;int8&gt; totalMask, valuetype System.Numerics.Vector`1&lt;int8&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of SByte), fromMask As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;System::SByte&gt; totalMask, System::Numerics::Vector&lt;System::SByte&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;ushort&gt; totalMask, System.Numerics.Vector&lt;ushort&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; totalMask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of UShort), fromMask As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;System::UInt16&gt; totalMask, System::Numerics::Vector&lt;System::UInt16&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;uint&gt; totalMask, System.Numerics.Vector&lt;uint&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; totalMask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of UInteger), fromMask As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;System::UInt32&gt; totalMask, System::Numerics::Vector&lt;System::UInt32&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBreakPropagateMask">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateBreakPropagateMask (System.Numerics.Vector&lt;ulong&gt; totalMask, System.Numerics.Vector&lt;ulong&gt; fromMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateBreakPropagateMask(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; totalMask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; fromMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBreakPropagateMask (totalMask As Vector(Of ULong), fromMask As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateBreakPropagateMask : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateBreakPropagateMask (totalMask, fromMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateBreakPropagateMask(System::Numerics::Vector&lt;System::UInt64&gt; totalMask, System::Numerics::Vector&lt;System::UInt64&gt; fromMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="fromMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="totalMask">To be added.</param>
        <param name="fromMask">To be added.</param>
        <summary>
          <para>svbool_t svbrkn[_b]_z(svbool_t pg, svbool_t op1, svbool_t op2)</para>
          <para>  BRKN Ptied2.B, Pg/Z, Pop1.B, Ptied2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskByte">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateFalseMaskByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateFalseMaskByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskByte () As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskByte : unit -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskByte " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateFalseMaskByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskDouble">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CreateFalseMaskDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CreateFalseMaskDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskDouble" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskDouble () As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskDouble : unit -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskDouble " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; CreateFalseMaskDouble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateFalseMaskInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateFalseMaskInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskInt16 () As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskInt16 : unit -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskInt16 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CreateFalseMaskInt16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateFalseMaskInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateFalseMaskInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskInt32 () As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskInt32 : unit -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskInt32 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CreateFalseMaskInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateFalseMaskInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateFalseMaskInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskInt64 () As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskInt64 : unit -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskInt64 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CreateFalseMaskInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskSByte">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateFalseMaskSByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateFalseMaskSByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskSByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskSByte () As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskSByte : unit -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskSByte " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CreateFalseMaskSByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskSingle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CreateFalseMaskSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CreateFalseMaskSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskSingle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskSingle () As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskSingle : unit -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskSingle " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; CreateFalseMaskSingle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskUInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateFalseMaskUInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateFalseMaskUInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskUInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskUInt16 () As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskUInt16 : unit -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskUInt16 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateFalseMaskUInt16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateFalseMaskUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateFalseMaskUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskUInt32 () As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskUInt32 : unit -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskUInt32 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateFalseMaskUInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFalseMaskUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateFalseMaskUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateFalseMaskUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFalseMaskUInt64 () As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateFalseMaskUInt64 : unit -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateFalseMaskUInt64 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateFalseMaskUInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>svbool_t svpfalse[_b]()</para>
          <para>  PFALSE Presult.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of Byte), srcMask As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of Short), srcMask As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of Integer), srcMask As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of Long), srcMask As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of SByte), srcMask As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of UShort), srcMask As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of UInteger), srcMask As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForFirstActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateMaskForFirstActiveElement (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateMaskForFirstActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForFirstActiveElement (mask As Vector(Of ULong), srcMask As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForFirstActiveElement : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForFirstActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateMaskForFirstActiveElement(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpfirst[_b](svbool_t pg, svbool_t op)</para>
          <para>  PFIRST Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForNextActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateMaskForNextActiveElement (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateMaskForNextActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForNextActiveElement (mask As Vector(Of Byte), srcMask As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForNextActiveElement : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateMaskForNextActiveElement(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpnext_b8(svbool_t pg, svbool_t op)</para>
          <para>  PNEXT Ptied.B, Pg, Ptied.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForNextActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateMaskForNextActiveElement (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateMaskForNextActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForNextActiveElement (mask As Vector(Of UShort), srcMask As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForNextActiveElement : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateMaskForNextActiveElement(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpnext_b16(svbool_t pg, svbool_t op)</para>
          <para>  PNEXT Ptied.H, Pg, Ptied.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForNextActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateMaskForNextActiveElement (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateMaskForNextActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForNextActiveElement (mask As Vector(Of UInteger), srcMask As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForNextActiveElement : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateMaskForNextActiveElement(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpnext_b32(svbool_t pg, svbool_t op)</para>
          <para>  PNEXT Ptied.S, Pg, Ptied.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaskForNextActiveElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateMaskForNextActiveElement (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateMaskForNextActiveElement(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMaskForNextActiveElement (mask As Vector(Of ULong), srcMask As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateMaskForNextActiveElement : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateMaskForNextActiveElement (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateMaskForNextActiveElement(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>svbool_t svpnext_b64(svbool_t pg, svbool_t op)</para>
          <para>  PNEXT Ptied.D, Pg, Ptied.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskByte">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateTrueMaskByte (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateTrueMaskByte(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskByte(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskByte (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskByte : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskByte pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b8(enum svpattern pattern)</para>
          <para>  PTRUE Presult.B, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskDouble">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; CreateTrueMaskDouble (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; CreateTrueMaskDouble(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskDouble(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskDouble (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskDouble : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskDouble pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b8(enum svpattern pattern)</para>
          <para>  PTRUE Presult.B, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; CreateTrueMaskInt16 (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; CreateTrueMaskInt16(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskInt16(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskInt16 (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskInt16 : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskInt16 pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b8(enum svpattern pattern)</para>
          <para>  PTRUE Presult.B, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; CreateTrueMaskInt32 (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; CreateTrueMaskInt32(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskInt32(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskInt32 (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskInt32 : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskInt32 pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b8(enum svpattern pattern)</para>
          <para>  PTRUE Presult.B, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; CreateTrueMaskInt64 (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; CreateTrueMaskInt64(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskInt64(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskInt64 (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskInt64 : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskInt64 pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b8(enum svpattern pattern)</para>
          <para>  PTRUE Presult.B, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskSByte">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; CreateTrueMaskSByte (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; CreateTrueMaskSByte(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskSByte(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskSByte (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskSByte : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskSByte pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b8(enum svpattern pattern)</para>
          <para>  PTRUE Presult.B, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskSingle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; CreateTrueMaskSingle (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; CreateTrueMaskSingle(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskSingle(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskSingle (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskSingle : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskSingle pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b8(enum svpattern pattern)</para>
          <para>  PTRUE Presult.B, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskUInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateTrueMaskUInt16 (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateTrueMaskUInt16(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskUInt16(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskUInt16 (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskUInt16 : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskUInt16 pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b16(enum svpattern pattern)</para>
          <para>  PTRUE Presult.H, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateTrueMaskUInt32 (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateTrueMaskUInt32(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskUInt32(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskUInt32 (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskUInt32 : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskUInt32 pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b32(enum svpattern pattern)</para>
          <para>  PTRUE Presult.S, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrueMaskUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateTrueMaskUInt64 (System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateTrueMaskUInt64(valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskUInt64(System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTrueMaskUInt64 (Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateTrueMaskUInt64 : System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateTrueMaskUInt64 pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svbool_t svptrue_pat_b64(enum svpattern pattern)</para>
          <para>  PTRUE Presult.D, pattern</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanMask16Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanMask16Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask16Bit (left As Integer, right As Integer) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask16Bit : int * int -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanMask16Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b16[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELT Presult.H, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanMask16Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanMask16Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask16Bit (left As Long, right As Long) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask16Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanMask16Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b16[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELT Presult.H, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanMask16Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanMask16Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask16Bit (left As UInteger, right As UInteger) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask16Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanMask16Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b16[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELO Presult.H, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanMask16Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanMask16Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask16Bit (left As ULong, right As ULong) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask16Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanMask16Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b16[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELO Presult.H, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanMask32Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanMask32Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask32Bit (left As Integer, right As Integer) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask32Bit : int * int -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanMask32Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b32[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELT Presult.S, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanMask32Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanMask32Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask32Bit (left As Long, right As Long) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask32Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanMask32Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b32[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELT Presult.S, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanMask32Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanMask32Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask32Bit (left As UInteger, right As UInteger) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask32Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanMask32Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b32[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELO Presult.S, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanMask32Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanMask32Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask32Bit (left As ULong, right As ULong) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask32Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanMask32Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b32[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELO Presult.S, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanMask64Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanMask64Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask64Bit (left As Integer, right As Integer) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask64Bit : int * int -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanMask64Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b64[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELT Presult.D, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanMask64Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanMask64Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask64Bit (left As Long, right As Long) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask64Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanMask64Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b64[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELT Presult.D, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanMask64Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanMask64Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask64Bit (left As UInteger, right As UInteger) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask64Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanMask64Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b64[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELO Presult.D, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanMask64Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanMask64Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask64Bit (left As ULong, right As ULong) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask64Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanMask64Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b64[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELO Presult.D, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanMask8Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanMask8Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask8Bit (left As Integer, right As Integer) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask8Bit : int * int -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanMask8Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b8[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELT Presult.B, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanMask8Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanMask8Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask8Bit (left As Long, right As Long) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask8Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanMask8Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b8[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELT Presult.B, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanMask8Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanMask8Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask8Bit (left As UInteger, right As UInteger) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask8Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanMask8Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b8[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELO Presult.B, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanMask8Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanMask8Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanMask8Bit (left As ULong, right As ULong) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanMask8Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanMask8Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilelt_b8[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELO Presult.B, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanOrEqualMask16Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanOrEqualMask16Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask16Bit (left As Integer, right As Integer) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask16Bit : int * int -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanOrEqualMask16Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b16[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELE Presult.H, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanOrEqualMask16Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanOrEqualMask16Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask16Bit (left As Long, right As Long) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask16Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanOrEqualMask16Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b16[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELE Presult.H, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanOrEqualMask16Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanOrEqualMask16Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask16Bit (left As UInteger, right As UInteger) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask16Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanOrEqualMask16Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b16[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELS Presult.H, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask16Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; CreateWhileLessThanOrEqualMask16Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; CreateWhileLessThanOrEqualMask16Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask16Bit (left As ULong, right As ULong) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask16Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask16Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; CreateWhileLessThanOrEqualMask16Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b16[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELS Presult.H, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanOrEqualMask32Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanOrEqualMask32Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask32Bit (left As Integer, right As Integer) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask32Bit : int * int -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanOrEqualMask32Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b32[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELE Presult.S, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanOrEqualMask32Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanOrEqualMask32Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask32Bit (left As Long, right As Long) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask32Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanOrEqualMask32Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b32[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELE Presult.S, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanOrEqualMask32Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanOrEqualMask32Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask32Bit (left As UInteger, right As UInteger) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask32Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanOrEqualMask32Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b32[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELS Presult.S, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask32Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; CreateWhileLessThanOrEqualMask32Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; CreateWhileLessThanOrEqualMask32Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask32Bit (left As ULong, right As ULong) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask32Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask32Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; CreateWhileLessThanOrEqualMask32Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b32[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELS Presult.S, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanOrEqualMask64Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanOrEqualMask64Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask64Bit (left As Integer, right As Integer) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask64Bit : int * int -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanOrEqualMask64Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b64[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELE Presult.D, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanOrEqualMask64Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanOrEqualMask64Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask64Bit (left As Long, right As Long) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask64Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanOrEqualMask64Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b64[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELE Presult.D, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanOrEqualMask64Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanOrEqualMask64Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask64Bit (left As UInteger, right As UInteger) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask64Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanOrEqualMask64Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b64[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELS Presult.D, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask64Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; CreateWhileLessThanOrEqualMask64Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; CreateWhileLessThanOrEqualMask64Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask64Bit (left As ULong, right As ULong) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask64Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask64Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; CreateWhileLessThanOrEqualMask64Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b64[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELS Presult.D, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanOrEqualMask8Bit (int left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanOrEqualMask8Bit(int32 left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask8Bit (left As Integer, right As Integer) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask8Bit : int * int -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanOrEqualMask8Bit(int left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b8[_s32](int32_t op1, int32_t op2)</para>
          <para>  WHILELE Presult.B, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanOrEqualMask8Bit (long left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanOrEqualMask8Bit(int64 left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask8Bit (left As Long, right As Long) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask8Bit : int64 * int64 -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanOrEqualMask8Bit(long left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b8[_s64](int64_t op1, int64_t op2)</para>
          <para>  WHILELE Presult.B, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanOrEqualMask8Bit (uint left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanOrEqualMask8Bit(unsigned int32 left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask8Bit (left As UInteger, right As UInteger) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask8Bit : uint32 * uint32 -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanOrEqualMask8Bit(System::UInt32 left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt32" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b8[_u32](uint32_t op1, uint32_t op2)</para>
          <para>  WHILELS Presult.B, Wop1, Wop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhileLessThanOrEqualMask8Bit">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; CreateWhileLessThanOrEqualMask8Bit (ulong left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; CreateWhileLessThanOrEqualMask8Bit(unsigned int64 left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWhileLessThanOrEqualMask8Bit (left As ULong, right As ULong) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member CreateWhileLessThanOrEqualMask8Bit : uint64 * uint64 -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.CreateWhileLessThanOrEqualMask8Bit (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; CreateWhileLessThanOrEqualMask8Bit(System::UInt64 left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svbool_t svwhilele_b8[_u64](uint64_t op1, uint64_t op2)</para>
          <para>  WHILELS Presult.B, Xop1, Xop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Divide (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Divide(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Divide(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Divide (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Divide(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svdiv[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svdiv[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svdiv[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FDIV Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Divide (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Divide(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Divide(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Divide (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Divide(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svdiv[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svdiv[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svdiv[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FDIV Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProduct">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; DotProduct (System.Numerics.Vector&lt;int&gt; addend, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; DotProduct(valuetype System.Numerics.Vector`1&lt;int32&gt; addend, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProduct(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProduct (addend As Vector(Of Integer), left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member DotProduct : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProduct (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; DotProduct(System::Numerics::Vector&lt;int&gt; addend, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svdot[_s32](svint32_t op1, svint8_t op2, svint8_t op3)</para>
          <para>  SDOT Ztied1.S, Zop2.B, Zop3.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProduct">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; DotProduct (System.Numerics.Vector&lt;long&gt; addend, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; DotProduct(valuetype System.Numerics.Vector`1&lt;int64&gt; addend, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProduct(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProduct (addend As Vector(Of Long), left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member DotProduct : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProduct (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; DotProduct(System::Numerics::Vector&lt;long&gt; addend, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svdot[_s64](svint64_t op1, svint16_t op2, svint16_t op3)</para>
          <para>  SDOT Ztied1.D, Zop2.H, Zop3.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProduct">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; DotProduct (System.Numerics.Vector&lt;uint&gt; addend, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; DotProduct(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProduct(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProduct (addend As Vector(Of UInteger), left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member DotProduct : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProduct (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; DotProduct(System::Numerics::Vector&lt;System::UInt32&gt; addend, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svdot[_u32](svuint32_t op1, svuint8_t op2, svuint8_t op3)</para>
          <para>  UDOT Ztied1.S, Zop2.B, Zop3.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProduct">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; DotProduct (System.Numerics.Vector&lt;ulong&gt; addend, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; DotProduct(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProduct(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProduct (addend As Vector(Of ULong), left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member DotProduct : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProduct (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; DotProduct(System::Numerics::Vector&lt;System::UInt64&gt; addend, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svdot[_u64](svuint64_t op1, svuint16_t op2, svuint16_t op3)</para>
          <para>  UDOT Ztied1.D, Zop2.H, Zop3.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProductBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; DotProductBySelectedScalar (System.Numerics.Vector&lt;int&gt; addend, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; DotProductBySelectedScalar(valuetype System.Numerics.Vector`1&lt;int32&gt; addend, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProductBySelectedScalar (addend As Vector(Of Integer), left As Vector(Of SByte), right As Vector(Of SByte), rightIndex As Byte) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member DotProductBySelectedScalar : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * byte -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar (addend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; DotProductBySelectedScalar(System::Numerics::Vector&lt;int&gt; addend, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svint32_t svdot_lane[_s32](svint32_t op1, svint8_t op2, svint8_t op3, uint64_t imm_index)</para>
          <para>  SDOT Ztied1.S, Zop2.B, Zop3.B[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProductBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; DotProductBySelectedScalar (System.Numerics.Vector&lt;long&gt; addend, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; DotProductBySelectedScalar(valuetype System.Numerics.Vector`1&lt;int64&gt; addend, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProductBySelectedScalar (addend As Vector(Of Long), left As Vector(Of Short), right As Vector(Of Short), rightIndex As Byte) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member DotProductBySelectedScalar : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * byte -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar (addend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; DotProductBySelectedScalar(System::Numerics::Vector&lt;long&gt; addend, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svint64_t svdot_lane[_s64](svint64_t op1, svint16_t op2, svint16_t op3, uint64_t imm_index)</para>
          <para>  SDOT Ztied1.D, Zop2.H, Zop3.H[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProductBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; DotProductBySelectedScalar (System.Numerics.Vector&lt;uint&gt; addend, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; DotProductBySelectedScalar(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProductBySelectedScalar (addend As Vector(Of UInteger), left As Vector(Of Byte), right As Vector(Of Byte), rightIndex As Byte) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member DotProductBySelectedScalar : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * byte -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar (addend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; DotProductBySelectedScalar(System::Numerics::Vector&lt;System::UInt32&gt; addend, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svuint32_t svdot_lane[_u32](svuint32_t op1, svuint8_t op2, svuint8_t op3, uint64_t imm_index)</para>
          <para>  UDOT Ztied1.S, Zop2.B, Zop3.B[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DotProductBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; DotProductBySelectedScalar (System.Numerics.Vector&lt;ulong&gt; addend, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; DotProductBySelectedScalar(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DotProductBySelectedScalar (addend As Vector(Of ULong), left As Vector(Of UShort), right As Vector(Of UShort), rightIndex As Byte) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member DotProductBySelectedScalar : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * byte -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DotProductBySelectedScalar (addend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; DotProductBySelectedScalar(System::Numerics::Vector&lt;System::UInt64&gt; addend, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svuint64_t svdot_lane[_u64](svuint64_t op1, svuint16_t op2, svuint16_t op3, uint64_t imm_index)</para>
          <para>  UDOT Ztied1.D, Zop2.H, Zop3.H[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;byte&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.Byte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of Byte), index As Byte) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;byte&gt; * byte -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;System::Byte&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=63, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=63, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint8_t svdup_lane[_u8](svuint8_t data, uint8_t index)</para>
          <para>  DUP Zresult.B, Zdata.B[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;double&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;float64&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of Double), index As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;double&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svfloat64_t svdup_lane[_f64](svfloat64_t data, uint64_t index)</para>
          <para>  DUP Zresult.D, Zdata.D[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;short&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;int16&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.Int16},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of Short), index As Byte) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;int16&gt; * byte -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;short&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=31, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=31, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint16_t svdup_lane[_s16](svint16_t data, uint16_t index)</para>
          <para>  DUP Zresult.H, Zdata.H[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;int&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;int32&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.Int32},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of Integer), index As Byte) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;int&gt; * byte -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;int&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=15, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=15, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint32_t svdup_lane[_s32](svint32_t data, uint32_t index)</para>
          <para>  DUP Zresult.S, Zdata.S[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;long&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;int64&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.Int64},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of Long), index As Byte) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;int64&gt; * byte -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;long&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint64_t svdup_lane[_s64](svint64_t data, uint64_t index)</para>
          <para>  DUP Zresult.D, Zdata.D[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;sbyte&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;int8&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.SByte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of SByte), index As Byte) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;sbyte&gt; * byte -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;System::SByte&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=63, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=63, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint8_t svdup_lane[_s8](svint8_t data, uint8_t index)</para>
          <para>  DUP Zresult.B, Zdata.B[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;float&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;float32&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of Single), index As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;float&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=15, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=15, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svfloat32_t svdup_lane[_f32](svfloat32_t data, uint32_t index)</para>
          <para>  DUP Zresult.S, Zdata.S[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;ushort&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.UInt16},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of UShort), index As Byte) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;uint16&gt; * byte -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;System::UInt16&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=31, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=31, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint16_t svdup_lane[_u16](svuint16_t data, uint16_t index)</para>
          <para>  DUP Zresult.H, Zdata.H[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;uint&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.UInt32},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of UInteger), index As Byte) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;uint32&gt; * byte -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;System::UInt32&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=15, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=15, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint32_t svdup_lane[_u32](svuint32_t data, uint32_t index)</para>
          <para>  DUP Zresult.S, Zdata.S[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateSelectedScalarToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; DuplicateSelectedScalarToVector (System.Numerics.Vector&lt;ulong&gt; data, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; DuplicateSelectedScalarToVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector(System.Numerics.Vector{System.UInt64},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateSelectedScalarToVector (data As Vector(Of ULong), index As Byte) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member DuplicateSelectedScalarToVector : System.Numerics.Vector&lt;uint64&gt; * byte -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.DuplicateSelectedScalarToVector (data, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; DuplicateSelectedScalarToVector(System::Numerics::Vector&lt;System::UInt64&gt; data, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint64_t svdup_lane[_u64](svuint64_t data, uint64_t index)</para>
          <para>  DUP Zresult.D, Zdata.D[index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ExtractVector (System.Numerics.Vector&lt;byte&gt; upper, System.Numerics.Vector&lt;byte&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; upper, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of Byte), lower As Vector(Of Byte), index As Byte) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * byte -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ExtractVector(System::Numerics::Vector&lt;System::Byte&gt; upper, System::Numerics::Vector&lt;System::Byte&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint8_t svext[_u8](svuint8_t op1, svuint8_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ExtractVector (System.Numerics.Vector&lt;double&gt; upper, System.Numerics.Vector&lt;double&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;float64&gt; upper, valuetype System.Numerics.Vector`1&lt;float64&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of Double), lower As Vector(Of Double), index As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ExtractVector(System::Numerics::Vector&lt;double&gt; upper, System::Numerics::Vector&lt;double&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svfloat64_t svext[_f64](svfloat64_t op1, svfloat64_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 8</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ExtractVector (System.Numerics.Vector&lt;short&gt; upper, System.Numerics.Vector&lt;short&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;int16&gt; upper, valuetype System.Numerics.Vector`1&lt;int16&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of Short), lower As Vector(Of Short), index As Byte) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * byte -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ExtractVector(System::Numerics::Vector&lt;short&gt; upper, System::Numerics::Vector&lt;short&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint16_t svext[_s16](svint16_t op1, svint16_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ExtractVector (System.Numerics.Vector&lt;int&gt; upper, System.Numerics.Vector&lt;int&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;int32&gt; upper, valuetype System.Numerics.Vector`1&lt;int32&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of Integer), lower As Vector(Of Integer), index As Byte) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * byte -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ExtractVector(System::Numerics::Vector&lt;int&gt; upper, System::Numerics::Vector&lt;int&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint32_t svext[_s32](svint32_t op1, svint32_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 4</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ExtractVector (System.Numerics.Vector&lt;long&gt; upper, System.Numerics.Vector&lt;long&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;int64&gt; upper, valuetype System.Numerics.Vector`1&lt;int64&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of Long), lower As Vector(Of Long), index As Byte) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * byte -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ExtractVector(System::Numerics::Vector&lt;long&gt; upper, System::Numerics::Vector&lt;long&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint64_t svext[_s64](svint64_t op1, svint64_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 8</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ExtractVector (System.Numerics.Vector&lt;sbyte&gt; upper, System.Numerics.Vector&lt;sbyte&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;int8&gt; upper, valuetype System.Numerics.Vector`1&lt;int8&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of SByte), lower As Vector(Of SByte), index As Byte) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * byte -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ExtractVector(System::Numerics::Vector&lt;System::SByte&gt; upper, System::Numerics::Vector&lt;System::SByte&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svint8_t svext[_s8](svint8_t op1, svint8_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ExtractVector (System.Numerics.Vector&lt;float&gt; upper, System.Numerics.Vector&lt;float&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;float32&gt; upper, valuetype System.Numerics.Vector`1&lt;float32&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of Single), lower As Vector(Of Single), index As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ExtractVector(System::Numerics::Vector&lt;float&gt; upper, System::Numerics::Vector&lt;float&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svfloat32_t svext[_f32](svfloat32_t op1, svfloat32_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 4</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ExtractVector (System.Numerics.Vector&lt;ushort&gt; upper, System.Numerics.Vector&lt;ushort&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; upper, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of UShort), lower As Vector(Of UShort), index As Byte) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * byte -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ExtractVector(System::Numerics::Vector&lt;System::UInt16&gt; upper, System::Numerics::Vector&lt;System::UInt16&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint16_t svext[_u16](svuint16_t op1, svuint16_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ExtractVector (System.Numerics.Vector&lt;uint&gt; upper, System.Numerics.Vector&lt;uint&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; upper, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of UInteger), lower As Vector(Of UInteger), index As Byte) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * byte -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ExtractVector(System::Numerics::Vector&lt;System::UInt32&gt; upper, System::Numerics::Vector&lt;System::UInt32&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint32_t svext[_u32](svuint32_t op1, svuint32_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 4</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ExtractVector (System.Numerics.Vector&lt;ulong&gt; upper, System.Numerics.Vector&lt;ulong&gt; lower, byte index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ExtractVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; upper, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; lower, unsigned int8 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ExtractVector(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtractVector (upper As Vector(Of ULong), lower As Vector(Of ULong), index As Byte) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ExtractVector : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * byte -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ExtractVector (upper, lower, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ExtractVector(System::Numerics::Vector&lt;System::UInt64&gt; upper, System::Numerics::Vector&lt;System::UInt64&gt; lower, System::Byte index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upper" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="lower" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="index" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="upper">To be added.</param>
        <param name="lower">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <para>svuint64_t svext[_u64](svuint64_t op1, svuint64_t op2, uint64_t imm3)</para>
          <para>  EXT Ztied1.B, Ztied1.B, Zop2.B, #imm3 * 8</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatingPointExponentialAccelerator">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; FloatingPointExponentialAccelerator (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; FloatingPointExponentialAccelerator(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FloatingPointExponentialAccelerator(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FloatingPointExponentialAccelerator (value As Vector(Of UInteger)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member FloatingPointExponentialAccelerator : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FloatingPointExponentialAccelerator value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; FloatingPointExponentialAccelerator(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svexpa[_f32](svuint32_t op)</para>
          <para>  FEXPA Zresult.S, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatingPointExponentialAccelerator">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; FloatingPointExponentialAccelerator (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; FloatingPointExponentialAccelerator(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FloatingPointExponentialAccelerator(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FloatingPointExponentialAccelerator (value As Vector(Of ULong)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member FloatingPointExponentialAccelerator : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FloatingPointExponentialAccelerator value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; FloatingPointExponentialAccelerator(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svexpa[_f64](svuint64_t op)</para>
          <para>  FEXPA Zresult.D, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; FusedMultiplyAdd (System.Numerics.Vector&lt;double&gt; addend, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; FusedMultiplyAdd(valuetype System.Numerics.Vector`1&lt;float64&gt; addend, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAdd(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (addend As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; FusedMultiplyAdd(System::Numerics::Vector&lt;double&gt; addend, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svmla[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svmla[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svmla[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>  FMLA Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; FusedMultiplyAdd (System.Numerics.Vector&lt;float&gt; addend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; FusedMultiplyAdd(valuetype System.Numerics.Vector`1&lt;float32&gt; addend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAdd(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (addend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; FusedMultiplyAdd(System::Numerics::Vector&lt;float&gt; addend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svmla[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svmla[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svmla[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>  FMLA Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAddBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; FusedMultiplyAddBySelectedScalar (System.Numerics.Vector&lt;double&gt; addend, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; FusedMultiplyAddBySelectedScalar(valuetype System.Numerics.Vector`1&lt;float64&gt; addend, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddBySelectedScalar(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAddBySelectedScalar (addend As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double), rightIndex As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAddBySelectedScalar : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddBySelectedScalar (addend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; FusedMultiplyAddBySelectedScalar(System::Numerics::Vector&lt;double&gt; addend, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svfloat64_t svmla_lane[_f64](svfloat64_t op1, svfloat64_t op2, svfloat64_t op3, uint64_t imm_index)</para>
          <para>  FMLA Ztied1.D, Zop2.D, Zop3.D[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAddBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; FusedMultiplyAddBySelectedScalar (System.Numerics.Vector&lt;float&gt; addend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; FusedMultiplyAddBySelectedScalar(valuetype System.Numerics.Vector`1&lt;float32&gt; addend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddBySelectedScalar(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAddBySelectedScalar (addend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single), rightIndex As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAddBySelectedScalar : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddBySelectedScalar (addend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; FusedMultiplyAddBySelectedScalar(System::Numerics::Vector&lt;float&gt; addend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svfloat32_t svmla_lane[_f32](svfloat32_t op1, svfloat32_t op2, svfloat32_t op3, uint64_t imm_index)</para>
          <para>  FMLA Ztied1.S, Zop2.S, Zop3.S[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAddNegated">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; FusedMultiplyAddNegated (System.Numerics.Vector&lt;double&gt; addend, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; FusedMultiplyAddNegated(valuetype System.Numerics.Vector`1&lt;float64&gt; addend, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddNegated(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAddNegated (addend As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAddNegated : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddNegated (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; FusedMultiplyAddNegated(System::Numerics::Vector&lt;double&gt; addend, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svnmla[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svnmla[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svnmla[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>  FNMLA Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAddNegated">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; FusedMultiplyAddNegated (System.Numerics.Vector&lt;float&gt; addend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; FusedMultiplyAddNegated(valuetype System.Numerics.Vector`1&lt;float32&gt; addend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddNegated(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAddNegated (addend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAddNegated : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplyAddNegated (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; FusedMultiplyAddNegated(System::Numerics::Vector&lt;float&gt; addend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svnmla[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svnmla[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svnmla[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>  FNMLA Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; FusedMultiplySubtract (System.Numerics.Vector&lt;double&gt; minuend, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; FusedMultiplySubtract(valuetype System.Numerics.Vector`1&lt;float64&gt; minuend, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtract(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplySubtract (minuend As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplySubtract : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; FusedMultiplySubtract(System::Numerics::Vector&lt;double&gt; minuend, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svmls[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svmls[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svmls[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>  FMLS Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; FusedMultiplySubtract (System.Numerics.Vector&lt;float&gt; minuend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; FusedMultiplySubtract(valuetype System.Numerics.Vector`1&lt;float32&gt; minuend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtract(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplySubtract (minuend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplySubtract : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; FusedMultiplySubtract(System::Numerics::Vector&lt;float&gt; minuend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svmls[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svmls[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svmls[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>  FMLS Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplySubtractBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; FusedMultiplySubtractBySelectedScalar (System.Numerics.Vector&lt;double&gt; minuend, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; FusedMultiplySubtractBySelectedScalar(valuetype System.Numerics.Vector`1&lt;float64&gt; minuend, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractBySelectedScalar(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplySubtractBySelectedScalar (minuend As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double), rightIndex As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplySubtractBySelectedScalar : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractBySelectedScalar (minuend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; FusedMultiplySubtractBySelectedScalar(System::Numerics::Vector&lt;double&gt; minuend, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svfloat64_t svmls_lane[_f64](svfloat64_t op1, svfloat64_t op2, svfloat64_t op3, uint64_t imm_index)</para>
          <para>  FMLS Ztied1.D, Zop2.D, Zop3.D[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplySubtractBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; FusedMultiplySubtractBySelectedScalar (System.Numerics.Vector&lt;float&gt; minuend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; FusedMultiplySubtractBySelectedScalar(valuetype System.Numerics.Vector`1&lt;float32&gt; minuend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractBySelectedScalar(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplySubtractBySelectedScalar (minuend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single), rightIndex As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplySubtractBySelectedScalar : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractBySelectedScalar (minuend, left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; FusedMultiplySubtractBySelectedScalar(System::Numerics::Vector&lt;float&gt; minuend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svfloat32_t svmls_lane[_f32](svfloat32_t op1, svfloat32_t op2, svfloat32_t op3, uint64_t imm_index)</para>
          <para>  FMLS Ztied1.S, Zop2.S, Zop3.S[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplySubtractNegated">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; FusedMultiplySubtractNegated (System.Numerics.Vector&lt;double&gt; minuend, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; FusedMultiplySubtractNegated(valuetype System.Numerics.Vector`1&lt;float64&gt; minuend, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractNegated(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplySubtractNegated (minuend As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplySubtractNegated : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractNegated (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; FusedMultiplySubtractNegated(System::Numerics::Vector&lt;double&gt; minuend, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svnmls[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svnmls[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>svfloat64_t svnmls[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3)</para>
          <para>  FNMLS Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplySubtractNegated">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; FusedMultiplySubtractNegated (System.Numerics.Vector&lt;float&gt; minuend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; FusedMultiplySubtractNegated(valuetype System.Numerics.Vector`1&lt;float32&gt; minuend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractNegated(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplySubtractNegated (minuend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member FusedMultiplySubtractNegated : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.FusedMultiplySubtractNegated (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; FusedMultiplySubtractNegated(System::Numerics::Vector&lt;float&gt; minuend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svnmls[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svnmls[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>svfloat32_t svnmls[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3)</para>
          <para>  FNMLS Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch16Bit (mask As Vector(Of Short), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch16Bit (mask As Vector(Of Short), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch16Bit (mask As Vector(Of UShort), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch16Bit (mask As Vector(Of UShort), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;short&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.Int16},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;short&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[s32]index(svbool_t pg, const void *base, svint32_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.S, SXTW #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;short&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.Int16},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;short&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[s64]index(svbool_t pg, const void *base, svint64_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;short&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.Int16},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;short&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[u32]index(svbool_t pg, const void *base, svuint32_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.S, UXTW #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;short&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.Int16},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;short&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[u64]index(svbool_t pg, const void *base, svuint64_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;ushort&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.UInt16},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;System::UInt16&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[s32]index(svbool_t pg, const void *base, svint32_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.S, SXTW #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;ushort&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.UInt16},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;System::UInt16&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[s64]index(svbool_t pg, const void *base, svint64_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;ushort&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.UInt16},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;System::UInt16&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[u32]index(svbool_t pg, const void *base, svuint32_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.S, UXTW #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch16Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch16Bit (System.Numerics.Vector&lt;ushort&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch16Bit(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit(System.Numerics.Vector{System.UInt16},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch16Bit : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch16Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch16Bit(System::Numerics::Vector&lt;System::UInt16&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh_gather_[u64]index(svbool_t pg, const void *base, svuint64_t indices, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch32Bit (mask As Vector(Of Integer), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch32Bit (mask As Vector(Of Integer), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch32Bit (mask As Vector(Of UInteger), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch32Bit (mask As Vector(Of UInteger), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;int&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.Int32},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;int&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[s32]index(svbool_t pg, const void *base, svint32_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.S, SXTW #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;int&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.Int32},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;int&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[s64]index(svbool_t pg, const void *base, svint64_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;int&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.Int32},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;int&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[u32]index(svbool_t pg, const void *base, svuint32_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.S, UXTW #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;int&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.Int32},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;int&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[u64]index(svbool_t pg, const void *base, svuint64_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;uint&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.UInt32},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;System::UInt32&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[s32]index(svbool_t pg, const void *base, svint32_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.S, SXTW #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;uint&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.UInt32},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;System::UInt32&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[s64]index(svbool_t pg, const void *base, svint64_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;uint&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.UInt32},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;System::UInt32&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[u32]index(svbool_t pg, const void *base, svuint32_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.S, UXTW #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch32Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch32Bit (System.Numerics.Vector&lt;uint&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch32Bit(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit(System.Numerics.Vector{System.UInt32},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch32Bit : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch32Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch32Bit(System::Numerics::Vector&lt;System::UInt32&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw_gather_[u64]index(svbool_t pg, const void *base, svuint64_t indices, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch64Bit (mask As Vector(Of Long), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch64Bit (mask As Vector(Of Long), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch64Bit (mask As Vector(Of ULong), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch64Bit (mask As Vector(Of ULong), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;long&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.Int64},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;long&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[s32]index(svbool_t pg, const void *base, svint32_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.S, SXTW #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;long&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.Int64},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;long&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[s64]index(svbool_t pg, const void *base, svint64_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;long&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.Int64},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;long&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[u32]index(svbool_t pg, const void *base, svuint32_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.S, UXTW #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;long&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.Int64},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;long&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[u64]index(svbool_t pg, const void *base, svuint64_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;ulong&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.UInt64},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;System::UInt64&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[s32]index(svbool_t pg, const void *base, svint32_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.S, SXTW #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;ulong&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.UInt64},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;System::UInt64&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[s64]index(svbool_t pg, const void *base, svint64_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;ulong&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.UInt64},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;System::UInt64&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[u32]index(svbool_t pg, const void *base, svuint32_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.S, UXTW #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch64Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch64Bit (System.Numerics.Vector&lt;ulong&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; indices, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch64Bit(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit(System.Numerics.Vector{System.UInt64},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch64Bit : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch64Bit (mask, address, indices, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch64Bit(System::Numerics::Vector&lt;System::UInt64&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; indices, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd_gather_[u64]index(svbool_t pg, const void *base, svuint64_t indices, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch8Bit (mask As Vector(Of Byte), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch8Bit (mask As Vector(Of Byte), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch8Bit (mask As Vector(Of SByte), addresses As Vector(Of UInteger), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather[_u32base](svbool_t pg, svuint32_t bases, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Zbases.S, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GatherPrefetch8Bit (mask As Vector(Of SByte), addresses As Vector(Of ULong), prefetchType As SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, addresses, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather[_u64base](svbool_t pg, svuint64_t bases, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;byte&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.Byte},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::Byte&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[s32]offset(svbool_t pg, const void *base, svint32_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;byte&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.Byte},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::Byte&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[s64]offset(svbool_t pg, const void *base, svint64_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;byte&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.Byte},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::Byte&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[u32]offset(svbool_t pg, const void *base, svuint32_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;byte&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.Byte},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::Byte&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[u64]offset(svbool_t pg, const void *base, svuint64_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;sbyte&gt; mask, void* address, System.Numerics.Vector&lt;int&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.SByte},System.Void*,System.Numerics.Vector{System.Int32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::SByte&gt; mask, void* address, System::Numerics::Vector&lt;int&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[s32]offset(svbool_t pg, const void *base, svint32_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;sbyte&gt; mask, void* address, System.Numerics.Vector&lt;long&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.SByte},System.Void*,System.Numerics.Vector{System.Int64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;int64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::SByte&gt; mask, void* address, System::Numerics::Vector&lt;long&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[s64]offset(svbool_t pg, const void *base, svint64_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;sbyte&gt; mask, void* address, System.Numerics.Vector&lt;uint&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.SByte},System.Void*,System.Numerics.Vector{System.UInt32},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::SByte&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[u32]offset(svbool_t pg, const void *base, svuint32_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherPrefetch8Bit">
      <MemberSignature Language="C#" Value="public static void GatherPrefetch8Bit (System.Numerics.Vector&lt;sbyte&gt; mask, void* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GatherPrefetch8Bit(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, void* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit(System.Numerics.Vector{System.SByte},System.Void*,System.Numerics.Vector{System.UInt64},System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member GatherPrefetch8Bit : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;unit&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherPrefetch8Bit (mask, address, offsets, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GatherPrefetch8Bit(System::Numerics::Vector&lt;System::SByte&gt; mask, void* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb_gather_[u64]offset(svbool_t pg, const void *base, svuint64_t offsets, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVector (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVector (mask As Vector(Of Double), addresses As Vector(Of ULong)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVector(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svfloat64_t svld1_gather[_u64base]_f64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVector (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVector (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVector(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svint64_t svld1_gather[_u64base]_s64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVector (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVector (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVector(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svuint64_t svld1_gather[_u64base]_u64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVector (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVector(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svfloat64_t svld1_gather_[s64]index[_f64](svbool_t pg, const float64_t *base, svint64_t indices)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVector (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVector(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svfloat64_t svld1_gather_[u64]index[_f64](svbool_t pg, const float64_t *base, svuint64_t indices)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVector (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVector(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1_gather_[s32]index[_s32](svbool_t pg, const int32_t *base, svint32_t indices)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zindices.S, SXTW #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVector (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVector(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1_gather_[u32]index[_s32](svbool_t pg, const int32_t *base, svuint32_t indices)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zindices.S, UXTW #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVector (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVector(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1_gather_[s64]index[_s64](svbool_t pg, const int64_t *base, svint64_t indices)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVector (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVector(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1_gather_[u64]index[_s64](svbool_t pg, const int64_t *base, svuint64_t indices)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVector (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVector(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svfloat32_t svld1_gather_[s32]index[_f32](svbool_t pg, const float32_t *base, svint32_t indices)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zindices.S, SXTW #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVector (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVector(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svfloat32_t svld1_gather_[u32]index[_f32](svbool_t pg, const float32_t *base, svuint32_t indices)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zindices.S, UXTW #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVector (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVector(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1_gather_[s32]index[_u32](svbool_t pg, const uint32_t *base, svint32_t indices)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zindices.S, SXTW #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVector (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVector(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1_gather_[u32]index[_u32](svbool_t pg, const uint32_t *base, svuint32_t indices)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zindices.S, UXTW #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVector (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVector(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1_gather_[s64]index[_u64](svbool_t pg, const uint64_t *base, svint64_t indices)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVector (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVector(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVector : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVector (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVector(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1_gather_[u64]index[_u64](svbool_t pg, const uint64_t *base, svuint64_t indices)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #3]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorByteZeroExtend (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svint64_t svld1ub_gather[_u64base]_s64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorByteZeroExtend (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svuint64_t svld1ub_gather[_u64base]_u64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;int&gt; mask, byte* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.Int32},System.Byte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::Byte* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1ub_gather_[s32]offset_s32(svbool_t pg, const uint8_t *base, svint32_t offsets)</para>
          <para>  LD1B Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;int&gt; mask, byte* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.Int32},System.Byte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1ub_gather_[u32]offset_s32(svbool_t pg, const uint8_t *base, svuint32_t offsets)</para>
          <para>  LD1B Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;long&gt; mask, byte* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.Int64},System.Byte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::Byte* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1ub_gather_[s64]offset_s64(svbool_t pg, const uint8_t *base, svint64_t offsets)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;long&gt; mask, byte* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.Int64},System.Byte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1ub_gather_[u64]offset_s64(svbool_t pg, const uint8_t *base, svuint64_t offsets)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, byte* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.UInt32},System.Byte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1ub_gather_[s32]offset_u32(svbool_t pg, const uint8_t *base, svint32_t offsets)</para>
          <para>  LD1B Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, byte* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.UInt32},System.Byte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1ub_gather_[u32]offset_u32(svbool_t pg, const uint8_t *base, svuint32_t offsets)</para>
          <para>  LD1B Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, byte* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.UInt64},System.Byte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1ub_gather_[s64]offset_u64(svbool_t pg, const uint8_t *base, svint64_t offsets)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorByteZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, byte* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorByteZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend(System.Numerics.Vector{System.UInt64},System.Byte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorByteZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1ub_gather_[u64]offset_u64(svbool_t pg, const uint8_t *base, svuint64_t offsets)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorByteZeroExtendFirstFaulting (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorByteZeroExtendFirstFaulting (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, byte* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Byte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::Byte* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, byte* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Byte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, byte* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Byte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Byte* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, byte* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Byte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, byte* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Byte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, byte* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Byte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, byte* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Byte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, byte* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Byte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorByteZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorFirstFaulting (mask As Vector(Of Double), addresses As Vector(Of ULong)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorFirstFaulting (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorFirstFaulting (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt16SignExtend (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svint64_t svld1sh_gather[_u64base]_s64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt16SignExtend (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svuint64_t svld1sh_gather[_u64base]_u64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1sh_gather_[s32]index_s32(svbool_t pg, const int16_t *base, svint32_t indices)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zindices.S, SXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1sh_gather_[u32]index_s32(svbool_t pg, const int16_t *base, svuint32_t indices)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zindices.S, UXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1sh_gather_[s64]index_s64(svbool_t pg, const int16_t *base, svint64_t indices)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1sh_gather_[u64]index_s64(svbool_t pg, const int16_t *base, svuint64_t indices)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1sh_gather_[s32]index_u32(svbool_t pg, const int16_t *base, svint32_t indices)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zindices.S, SXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1sh_gather_[u32]index_u32(svbool_t pg, const int16_t *base, svuint32_t indices)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zindices.S, UXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1sh_gather_[s64]index_u64(svbool_t pg, const int16_t *base, svint64_t indices)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16SignExtend (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16SignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1sh_gather_[u64]index_u64(svbool_t pg, const int16_t *base, svuint64_t indices)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt16SignExtendFirstFaulting (mask As Vector(Of Integer), addresses As Vector(Of UInteger)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt16SignExtendFirstFaulting (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt16SignExtendFirstFaulting (mask As Vector(Of UInteger), addresses As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt16SignExtendFirstFaulting (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint32_t svld1sh_gather_[s32]offset_s32(svbool_t pg, const int16_t *base, svint32_t offsets)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint32_t svld1sh_gather_[u32]offset_s32(svbool_t pg, const int16_t *base, svuint32_t offsets)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1sh_gather_[s64]offset_s64(svbool_t pg, const int16_t *base, svint64_t offsets)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1sh_gather_[u64]offset_s64(svbool_t pg, const int16_t *base, svuint64_t offsets)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint32_t svld1sh_gather_[s32]offset_u32(svbool_t pg, const int16_t *base, svint32_t offsets)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint32_t svld1sh_gather_[u32]offset_u32(svbool_t pg, const int16_t *base, svuint32_t offsets)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1sh_gather_[s64]offset_u64(svbool_t pg, const int16_t *base, svint64_t offsets)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16WithByteOffsetsSignExtend (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16WithByteOffsetsSignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1sh_gather_[u64]offset_u64(svbool_t pg, const int16_t *base, svuint64_t offsets)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Int16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt16WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32SignExtend (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32SignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt32SignExtend (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtend : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32SignExtend(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svint64_t svld1sw_gather[_u64base]_s64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32SignExtend (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt32SignExtend (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtend : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32SignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svuint64_t svld1sw_gather[_u64base]_u64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32SignExtend (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32SignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32SignExtend(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1sw_gather_[s64]index_s64(svbool_t pg, const int32_t *base, svint64_t indices)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32SignExtend (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32SignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32SignExtend(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1sw_gather_[u64]index_s64(svbool_t pg, const int32_t *base, svuint64_t indices)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32SignExtend (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32SignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1sw_gather_[s64]index_u64(svbool_t pg, const int32_t *base, svint64_t indices)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32SignExtend (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32SignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32SignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1sw_gather_[u64]index_u64(svbool_t pg, const int32_t *base, svuint64_t indices)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt32SignExtendFirstFaulting (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorInt32SignExtendFirstFaulting (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32SignExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtend (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtend(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1sw_gather_[s64]offset_s64(svbool_t pg, const int32_t *base, svint64_t offsets)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtend (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtend(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1sw_gather_[u64]offset_s64(svbool_t pg, const int32_t *base, svuint64_t offsets)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32WithByteOffsetsSignExtend (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32WithByteOffsetsSignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1sw_gather_[s64]offset_u64(svbool_t pg, const int32_t *base, svint64_t offsets)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32WithByteOffsetsSignExtend (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32WithByteOffsetsSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32WithByteOffsetsSignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1sw_gather_[u64]offset_u64(svbool_t pg, const int32_t *base, svuint64_t offsets)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorInt32WithByteOffsetsSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorSByteSignExtend (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svint64_t svld1sb_gather[_u64base]_s64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorSByteSignExtend (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svuint64_t svld1sb_gather[_u64base]_u64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;int&gt; mask, sbyte* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.Int32},System.SByte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1sb_gather_[s32]offset_s32(svbool_t pg, const int8_t *base, svint32_t offsets)</para>
          <para>  LD1SB Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;int&gt; mask, sbyte* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.Int32},System.SByte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1sb_gather_[u32]offset_s32(svbool_t pg, const int8_t *base, svuint32_t offsets)</para>
          <para>  LD1SB Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;long&gt; mask, sbyte* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.Int64},System.SByte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1sb_gather_[s64]offset_s64(svbool_t pg, const int8_t *base, svint64_t offsets)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;long&gt; mask, sbyte* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.Int64},System.SByte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1sb_gather_[u64]offset_s64(svbool_t pg, const int8_t *base, svuint64_t offsets)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;uint&gt; mask, sbyte* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.UInt32},System.SByte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::SByte* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1sb_gather_[s32]offset_u32(svbool_t pg, const int8_t *base, svint32_t offsets)</para>
          <para>  LD1SB Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;uint&gt; mask, sbyte* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.UInt32},System.SByte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1sb_gather_[u32]offset_u32(svbool_t pg, const int8_t *base, svuint32_t offsets)</para>
          <para>  LD1SB Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;ulong&gt; mask, sbyte* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.UInt64},System.SByte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::SByte* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1sb_gather_[s64]offset_u64(svbool_t pg, const int8_t *base, svint64_t offsets)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorSByteSignExtend (System.Numerics.Vector&lt;ulong&gt; mask, sbyte* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorSByteSignExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend(System.Numerics.Vector{System.UInt64},System.SByte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorSByteSignExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1sb_gather_[u64]offset_u64(svbool_t pg, const int8_t *base, svuint64_t offsets)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorSByteSignExtendFirstFaulting (mask As Vector(Of Integer), addresses As Vector(Of UInteger)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorSByteSignExtendFirstFaulting (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorSByteSignExtendFirstFaulting (mask As Vector(Of UInteger), addresses As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorSByteSignExtendFirstFaulting (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, sbyte* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.SByte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, sbyte* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.SByte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, sbyte* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.SByte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, sbyte* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.SByte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, sbyte* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.SByte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::SByte* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, sbyte* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.SByte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, sbyte* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.SByte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::SByte* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, sbyte* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.SByte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorSByteSignExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint32_t svld1uh_gather_[s32]offset_s32(svbool_t pg, const uint16_t *base, svint32_t offsets)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint32_t svld1uh_gather_[u32]offset_s32(svbool_t pg, const uint16_t *base, svuint32_t offsets)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1uh_gather_[s64]offset_s64(svbool_t pg, const uint16_t *base, svint64_t offsets)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1uh_gather_[u64]offset_s64(svbool_t pg, const uint16_t *base, svuint64_t offsets)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint32_t svld1uh_gather_[s32]offset_u32(svbool_t pg, const uint16_t *base, svint32_t offsets)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint32_t svld1uh_gather_[u32]offset_u32(svbool_t pg, const uint16_t *base, svuint32_t offsets)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1uh_gather_[s64]offset_u64(svbool_t pg, const uint16_t *base, svint64_t offsets)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1uh_gather_[u64]offset_u64(svbool_t pg, const uint16_t *base, svuint64_t offsets)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt16ZeroExtend (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svint64_t svld1uh_gather[_u64base]_s64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt16ZeroExtend (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svuint64_t svld1uh_gather[_u64base]_u64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1uh_gather_[s32]index_s32(svbool_t pg, const uint16_t *base, svint32_t indices)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zindices.S, SXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svld1uh_gather_[u32]index_s32(svbool_t pg, const uint16_t *base, svuint32_t indices)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zindices.S, UXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1uh_gather_[s64]index_s64(svbool_t pg, const uint16_t *base, svint64_t indices)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1uh_gather_[u64]index_s64(svbool_t pg, const uint16_t *base, svuint64_t indices)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1uh_gather_[s32]index_u32(svbool_t pg, const uint16_t *base, svint32_t indices)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zindices.S, SXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svld1uh_gather_[u32]index_u32(svbool_t pg, const uint16_t *base, svuint32_t indices)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, Zindices.S, UXTW #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1uh_gather_[s64]index_u64(svbool_t pg, const uint16_t *base, svint64_t indices)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16ZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16ZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1uh_gather_[u64]index_u64(svbool_t pg, const uint16_t *base, svuint64_t indices)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #1]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt16ZeroExtendFirstFaulting (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt16ZeroExtendFirstFaulting (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt16ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[s64]offset_s64(svbool_t pg, const uint32_t *base, svint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[u64]offset_s64(svbool_t pg, const uint32_t *base, svuint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[s64]offset_s64(svbool_t pg, const uint32_t *base, svint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[u64]offset_s64(svbool_t pg, const uint32_t *base, svuint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[s64]offset_u64(svbool_t pg, const uint32_t *base, svint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[u64]offset_u64(svbool_t pg, const uint32_t *base, svuint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[s64]offset_u64(svbool_t pg, const uint32_t *base, svint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32WithByteOffsetsZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtend (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32WithByteOffsetsZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[u64]offset_u64(svbool_t pg, const uint32_t *base, svuint64_t offsets)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32WithByteOffsetsZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt32ZeroExtend (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather[_u64base]_s64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt32ZeroExtend (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather[_u64base]_u64(svbool_t pg, svuint64_t bases)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Zbases.D, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[s64]index_s64(svbool_t pg, const uint32_t *base, svint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[u64]index_s64(svbool_t pg, const uint32_t *base, svuint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[s64]index_s64(svbool_t pg, const uint32_t *base, svint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_gather_[u64]index_s64(svbool_t pg, const uint32_t *base, svuint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[s64]index_u64(svbool_t pg, const uint32_t *base, svint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[u64]index_u64(svbool_t pg, const uint32_t *base, svuint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[s64]index_u64(svbool_t pg, const uint32_t *base, svint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtend">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32ZeroExtend (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32ZeroExtend(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtend : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtend (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32ZeroExtend(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_gather_[u64]index_u64(svbool_t pg, const uint32_t *base, svuint64_t indices)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, Zindices.D, LSL #2]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt32ZeroExtendFirstFaulting (mask As Vector(Of Long), addresses As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GatherVectorUInt32ZeroExtendFirstFaulting (mask As Vector(Of ULong), addresses As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, addresses)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorUInt32ZeroExtendFirstFaulting (mask, address, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsetFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorWithByteOffsetFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorWithByteOffsetFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsetFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsetFirstFaulting (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorWithByteOffsetFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svfloat64_t svld1_gather_[s64]offset[_f64](svbool_t pg, const float64_t *base, svint64_t offsets)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svfloat64_t svld1_gather_[u64]offset[_f64](svbool_t pg, const float64_t *base, svuint64_t offsets)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint32_t svld1_gather_[s32]offset[_s32](svbool_t pg, const int32_t *base, svint32_t offsets)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint32_t svld1_gather_[u32]offset[_s32](svbool_t pg, const int32_t *base, svuint32_t offsets)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1_gather_[s64]offset[_s64](svbool_t pg, const int64_t *base, svint64_t offsets)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svint64_t svld1_gather_[u64]offset[_s64](svbool_t pg, const int64_t *base, svuint64_t offsets)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svfloat32_t svld1_gather_[s32]offset[_f32](svbool_t pg, const float32_t *base, svint32_t offsets)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svfloat32_t svld1_gather_[u32]offset[_f32](svbool_t pg, const float32_t *base, svuint32_t offsets)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint32_t svld1_gather_[s32]offset[_u32](svbool_t pg, const uint32_t *base, svint32_t offsets)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint32_t svld1_gather_[u32]offset[_u32](svbool_t pg, const uint32_t *base, svuint32_t offsets)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;long&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;long&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1_gather_[s64]offset[_u64](svbool_t pg, const uint64_t *base, svint64_t offsets)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherVectorWithByteOffsets">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GatherVectorWithByteOffsets (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;ulong&gt; offsets);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GatherVectorWithByteOffsets(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member GatherVectorWithByteOffsets : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GatherVectorWithByteOffsets (mask, address, offsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GatherVectorWithByteOffsets(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <summary>
          <para>svuint64_t svld1_gather_[u64]offset[_u64](svbool_t pg, const uint64_t *base, svuint64_t offsets)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, Zoffsets.D]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of Byte), from As Vector(Of Byte)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b8(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of Double), from As Vector(Of Double)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b8(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of Short), from As Vector(Of Short)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b8(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of Integer), from As Vector(Of Integer)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b8(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of Long), from As Vector(Of Long)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b8(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of SByte), from As Vector(Of SByte)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b8(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of Single), from As Vector(Of Single)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b8(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of UShort), from As Vector(Of UShort)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b16(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of UInteger), from As Vector(Of UInteger)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b32(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong GetActiveElementCount (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveElementCount (mask As Vector(Of ULong), from As Vector(Of ULong)) As ULong" />
      <MemberSignature Language="F#" Value="static member GetActiveElementCount : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.GetActiveElementCount (mask, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 GetActiveElementCount(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svcntp_b64(svbool_t pg, svbool_t op)</para>
          <para>  CNTP Xresult, Pg, Pop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrByte">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; GetFfrByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; GetFfrByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrByte () As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member GetFfrByte : unit -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrByte " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; GetFfrByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; GetFfrInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; GetFfrInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrInt16 () As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member GetFfrInt16 : unit -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrInt16 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; GetFfrInt16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; GetFfrInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; GetFfrInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrInt32 () As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetFfrInt32 : unit -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrInt32 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; GetFfrInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; GetFfrInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; GetFfrInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrInt64 () As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member GetFfrInt64 : unit -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrInt64 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; GetFfrInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrSByte">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; GetFfrSByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; GetFfrSByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrSByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrSByte () As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member GetFfrSByte : unit -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrSByte " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; GetFfrSByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrUInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; GetFfrUInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; GetFfrUInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrUInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrUInt16 () As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member GetFfrUInt16 : unit -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrUInt16 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; GetFfrUInt16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; GetFfrUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; GetFfrUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrUInt32 () As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member GetFfrUInt32 : unit -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrUInt32 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; GetFfrUInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFfrUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; GetFfrUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; GetFfrUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.GetFfrUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFfrUInt64 () As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member GetFfrUInt64 : unit -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.GetFfrUInt64 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; GetFfrUInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;byte&gt; left, byte right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, unsigned int8 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.Byte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of Byte), right As Byte) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;byte&gt; * byte -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;System::Byte&gt; left, System::Byte right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svinsr[_n_u8](svuint8_t op1, uint8_t op2)</para>
          <para>  INSR Ztied1.B, Wop2</para>
          <para>  INSR Ztied1.B, Bop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;double&gt; left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;float64&gt; left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.Double},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of Double), right As Double) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;double&gt; * double -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;double&gt; left, double right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svinsr[_n_f64](svfloat64_t op1, float64_t op2)</para>
          <para>  INSR Ztied1.D, Xop2</para>
          <para>  INSR Ztied1.D, Dop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;short&gt; left, short right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;int16&gt; left, int16 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.Int16},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of Short), right As Short) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;int16&gt; * int16 -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;short&gt; left, short right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svinsr[_n_s16](svint16_t op1, int16_t op2)</para>
          <para>  INSR Ztied1.H, Wop2</para>
          <para>  INSR Ztied1.H, Hop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;int&gt; left, int right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;int32&gt; left, int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.Int32},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of Integer), right As Integer) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;int&gt; * int -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;int&gt; left, int right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svinsr[_n_s32](svint32_t op1, int32_t op2)</para>
          <para>  INSR Ztied1.S, Wop2</para>
          <para>  INSR Ztied1.S, Sop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;long&gt; left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;int64&gt; left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.Int64},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of Long), right As Long) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;int64&gt; * int64 -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;long&gt; left, long right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svinsr[_n_s64](svint64_t op1, int64_t op2)</para>
          <para>  INSR Ztied1.D, Xop2</para>
          <para>  INSR Ztied1.D, Dop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;sbyte&gt; left, sbyte right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;int8&gt; left, int8 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.SByte},System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of SByte), right As SByte) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;sbyte&gt; * sbyte -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;System::SByte&gt; left, System::SByte right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svinsr[_n_s8](svint8_t op1, int8_t op2)</para>
          <para>  INSR Ztied1.B, Wop2</para>
          <para>  INSR Ztied1.B, Bop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;float&gt; left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;float32&gt; left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.Single},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of Single), right As Single) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;single&gt; * single -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;float&gt; left, float right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svinsr[_n_f32](svfloat32_t op1, float32_t op2)</para>
          <para>  INSR Ztied1.S, Wop2</para>
          <para>  INSR Ztied1.S, Sop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;ushort&gt; left, ushort right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, unsigned int16 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.UInt16},System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of UShort), right As UShort) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;uint16&gt; * uint16 -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;System::UInt16&gt; left, System::UInt16 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svinsr[_n_u16](svuint16_t op1, uint16_t op2)</para>
          <para>  INSR Ztied1.H, Wop2</para>
          <para>  INSR Ztied1.H, Hop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;uint&gt; left, uint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, unsigned int32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.UInt32},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of UInteger), right As UInteger) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;uint32&gt; * uint32 -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;System::UInt32&gt; left, System::UInt32 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svinsr[_n_u32](svuint32_t op1, uint32_t op2)</para>
          <para>  INSR Ztied1.S, Wop2</para>
          <para>  INSR Ztied1.S, Sop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIntoShiftedVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; InsertIntoShiftedVector (System.Numerics.Vector&lt;ulong&gt; left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; InsertIntoShiftedVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector(System.Numerics.Vector{System.UInt64},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InsertIntoShiftedVector (left As Vector(Of ULong), right As ULong) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member InsertIntoShiftedVector : System.Numerics.Vector&lt;uint64&gt; * uint64 -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.InsertIntoShiftedVector (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; InsertIntoShiftedVector(System::Numerics::Vector&lt;System::UInt64&gt; left, System::UInt64 right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svinsr[_n_u64](svuint64_t op1, uint64_t op2)</para>
          <para>  INSR Ztied1.D, Xop2</para>
          <para>  INSR Ztied1.D, Dop2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Intrinsics.Arm.Sve.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSupported : bool" Usage="System.Runtime.Intrinsics.Arm.Sve.IsSupported" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the APIs in this class are supported.</summary>
        <value>
          <see langword="true" /> if the APIs are supported; otherwise, <see langword="false" />.</value>
        <remarks>A value of <see langword="false" /> indicates that the APIs will throw <see cref="T:System.PlatformNotSupportedException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingSignCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LeadingSignCount (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LeadingSignCount(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingSignCount (value As Vector(Of Short)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member LeadingSignCount : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LeadingSignCount(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svcls[_s16]_m(svuint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svuint16_t svcls[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svuint16_t svcls[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  CLS Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingSignCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LeadingSignCount (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LeadingSignCount(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingSignCount (value As Vector(Of Integer)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member LeadingSignCount : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LeadingSignCount(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcls[_s32]_m(svuint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svuint32_t svcls[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svuint32_t svcls[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  CLS Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingSignCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LeadingSignCount (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LeadingSignCount(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingSignCount (value As Vector(Of Long)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member LeadingSignCount : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LeadingSignCount(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcls[_s64]_m(svuint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svuint64_t svcls[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svuint64_t svcls[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  CLS Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingSignCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LeadingSignCount (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LeadingSignCount(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingSignCount (value As Vector(Of SByte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member LeadingSignCount : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingSignCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LeadingSignCount(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svcls[_s8]_m(svuint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svuint8_t svcls[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svuint8_t svcls[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>  CLS Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LeadingZeroCount (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LeadingZeroCount(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svclz[_u8]_m(svuint8_t inactive, svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svclz[_u8]_x(svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svclz[_u8]_z(svbool_t pg, svuint8_t op)</para>
          <para>  CLZ Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LeadingZeroCount (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of Short)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LeadingZeroCount(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svclz[_s16]_m(svuint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svuint16_t svclz[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svuint16_t svclz[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  CLZ Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LeadingZeroCount (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of Integer)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LeadingZeroCount(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svclz[_s32]_m(svuint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svuint32_t svclz[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svuint32_t svclz[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  CLZ Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LeadingZeroCount (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of Long)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LeadingZeroCount(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svclz[_s64]_m(svuint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svuint64_t svclz[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svuint64_t svclz[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  CLZ Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LeadingZeroCount (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of SByte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LeadingZeroCount(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svclz[_s8]_m(svuint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svuint8_t svclz[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svuint8_t svclz[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>  CLZ Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LeadingZeroCount (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LeadingZeroCount(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svclz[_u16]_m(svuint16_t inactive, svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svclz[_u16]_x(svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svclz[_u16]_z(svbool_t pg, svuint16_t op)</para>
          <para>  CLZ Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LeadingZeroCount (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LeadingZeroCount(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svclz[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svclz[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svclz[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  CLZ Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LeadingZeroCount (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LeadingZeroCount(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LeadingZeroCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LeadingZeroCount(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svclz[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svclz[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svclz[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  CLZ Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;byte&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.Byte},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint8x2_t svld2[_u8](svbool_t pg, const uint8_t *base)</para>
          <para>  LD2B {Zresult0.B, Zresult1.B}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;double&gt; mask, double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.Double},System.Double*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;double&gt; mask, double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat64x2_t svld2[_f64](svbool_t pg, const float64_t *base)</para>
          <para>  LD2D {Zresult0.D, Zresult1.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;short&gt;, System.Numerics.Vector&lt;short&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;short&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.Int16},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;short&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16x2_t svld2[_s16](svbool_t pg, const int16_t *base)</para>
          <para>  LD2H {Zresult0.H, Zresult1.H}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;int&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.Int32},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;int&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32x2_t svld2[_s32](svbool_t pg, const int32_t *base)</para>
          <para>  LD2W {Zresult0.S, Zresult1.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;long&gt;, System.Numerics.Vector&lt;long&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;long&gt; mask, long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.Int64},System.Int64*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;long&gt; mask, long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64x2_t svld2[_s64](svbool_t pg, const int64_t *base)</para>
          <para>  LD2D {Zresult0.D, Zresult1.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.SByte},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint8x2_t svld2[_s8](svbool_t pg, const int8_t *base)</para>
          <para>  LD2B {Zresult0.B, Zresult1.B}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;float&gt;, System.Numerics.Vector&lt;float&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;float&gt; mask, float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.Single},System.Single*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;float&gt; mask, float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat32x2_t svld2[_f32](svbool_t pg, const float32_t *base)</para>
          <para>  LD2W {Zresult0.S, Zresult1.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;ushort&gt;, System.Numerics.Vector&lt;ushort&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.UInt16},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16x2_t svld2[_u16](svbool_t pg, const uint16_t *base)</para>
          <para>  LD2H {Zresult0.H, Zresult1.H}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;uint&gt;, System.Numerics.Vector&lt;uint&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;uint&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.UInt32},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32x2_t svld2[_u32](svbool_t pg, const uint32_t *base)</para>
          <para>  LD2W {Zresult0.S, Zresult1.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load2xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;ulong&gt;, System.Numerics.Vector&lt;ulong&gt;) Load2xVectorAndUnzip (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;&gt; Load2xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip(System.Numerics.Vector{System.UInt64},System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member Load2xVectorAndUnzip : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load2xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;&gt; Load2xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64x2_t svld2[_u64](svbool_t pg, const uint64_t *base)</para>
          <para>  LD2D {Zresult0.D, Zresult1.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;byte&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.Byte},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint8x3_t svld3[_u8](svbool_t pg, const uint8_t *base)</para>
          <para>  LD3B {Zresult0.B - Zresult2.B}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;double&gt; mask, double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.Double},System.Double*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;double&gt; mask, double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat64x3_t svld3[_f64](svbool_t pg, const float64_t *base)</para>
          <para>  LD3D {Zresult0.D - Zresult2.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;short&gt;, System.Numerics.Vector&lt;short&gt;, System.Numerics.Vector&lt;short&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;short&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.Int16},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;short&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16x3_t svld3[_s16](svbool_t pg, const int16_t *base)</para>
          <para>  LD3H {Zresult0.H - Zresult2.H}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;int&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.Int32},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;int&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32x3_t svld3[_s32](svbool_t pg, const int32_t *base)</para>
          <para>  LD3W {Zresult0.S - Zresult2.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;long&gt;, System.Numerics.Vector&lt;long&gt;, System.Numerics.Vector&lt;long&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;long&gt; mask, long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.Int64},System.Int64*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;long&gt; mask, long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64x3_t svld3[_s64](svbool_t pg, const int64_t *base)</para>
          <para>  LD3D {Zresult0.D - Zresult2.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.SByte},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint8x3_t svld3[_s8](svbool_t pg, const int8_t *base)</para>
          <para>  LD3B {Zresult0.B - Zresult2.B}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;float&gt;, System.Numerics.Vector&lt;float&gt;, System.Numerics.Vector&lt;float&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;float&gt; mask, float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.Single},System.Single*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;float&gt; mask, float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat32x3_t svld3[_f32](svbool_t pg, const float32_t *base)</para>
          <para>  LD3W {Zresult0.S - Zresult2.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;ushort&gt;, System.Numerics.Vector&lt;ushort&gt;, System.Numerics.Vector&lt;ushort&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.UInt16},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16x3_t svld3[_u16](svbool_t pg, const uint16_t *base)</para>
          <para>  LD3H {Zresult0.H - Zresult2.H}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;uint&gt;, System.Numerics.Vector&lt;uint&gt;, System.Numerics.Vector&lt;uint&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;uint&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.UInt32},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32x3_t svld3[_u32](svbool_t pg, const uint32_t *base)</para>
          <para>  LD3W {Zresult0.S - Zresult2.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load3xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;ulong&gt;, System.Numerics.Vector&lt;ulong&gt;, System.Numerics.Vector&lt;ulong&gt;) Load3xVectorAndUnzip (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;&gt; Load3xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip(System.Numerics.Vector{System.UInt64},System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member Load3xVectorAndUnzip : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load3xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;&gt; Load3xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64x3_t svld3[_u64](svbool_t pg, const uint64_t *base)</para>
          <para>  LD3D {Zresult0.D - Zresult2.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;byte&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.Byte},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint8x4_t svld4[_u8](svbool_t pg, const uint8_t *base)</para>
          <para>  LD4B {Zresult0.B - Zresult3.B}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;double&gt; mask, double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.Double},System.Double*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;double&gt; mask, double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat64x4_t svld4[_f64](svbool_t pg, const float64_t *base)</para>
          <para>  LD4D {Zresult0.D - Zresult3.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;short&gt;, System.Numerics.Vector&lt;short&gt;, System.Numerics.Vector&lt;short&gt;, System.Numerics.Vector&lt;short&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;short&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.Int16},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;short&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16x4_t svld4[_s16](svbool_t pg, const int16_t *base)</para>
          <para>  LD4H {Zresult0.H - Zresult3.H}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;int&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.Int32},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;int&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32x4_t svld4[_s32](svbool_t pg, const int32_t *base)</para>
          <para>  LD4W {Zresult0.S - Zresult3.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;long&gt;, System.Numerics.Vector&lt;long&gt;, System.Numerics.Vector&lt;long&gt;, System.Numerics.Vector&lt;long&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;long&gt; mask, long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.Int64},System.Int64*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;long&gt; mask, long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64x4_t svld4[_s64](svbool_t pg, const int64_t *base)</para>
          <para>  LD4D {Zresult0.D - Zresult3.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.SByte},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint8x4_t svld4[_s8](svbool_t pg, const int8_t *base)</para>
          <para>  LD4B {Zresult0.B - Zresult3.B}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;float&gt;, System.Numerics.Vector&lt;float&gt;, System.Numerics.Vector&lt;float&gt;, System.Numerics.Vector&lt;float&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;float&gt; mask, float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.Single},System.Single*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;float&gt; mask, float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat32x4_t svld4[_f32](svbool_t pg, const float32_t *base)</para>
          <para>  LD4W {Zresult0.S - Zresult3.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;ushort&gt;, System.Numerics.Vector&lt;ushort&gt;, System.Numerics.Vector&lt;ushort&gt;, System.Numerics.Vector&lt;ushort&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.UInt16},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16x4_t svld4[_u16](svbool_t pg, const uint16_t *base)</para>
          <para>  LD4H {Zresult0.H - Zresult3.H}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;uint&gt;, System.Numerics.Vector&lt;uint&gt;, System.Numerics.Vector&lt;uint&gt;, System.Numerics.Vector&lt;uint&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;uint&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.UInt32},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32x4_t svld4[_u32](svbool_t pg, const uint32_t *base)</para>
          <para>  LD4W {Zresult0.S - Zresult3.S}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load4xVectorAndUnzip">
      <MemberSignature Language="C#" Value="public static (System.Numerics.Vector&lt;ulong&gt;, System.Numerics.Vector&lt;ulong&gt;, System.Numerics.Vector&lt;ulong&gt;, System.Numerics.Vector&lt;ulong&gt;) Load4xVectorAndUnzip (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;&gt; Load4xVectorAndUnzip(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip(System.Numerics.Vector{System.UInt64},System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member Load4xVectorAndUnzip : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; -&gt; ValueTuple&lt;System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Load4xVectorAndUnzip (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;&gt; Load4xVectorAndUnzip(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64x4_t svld4[_u64](svbool_t pg, const uint64_t *base)</para>
          <para>  LD4D {Zresult0.D - Zresult3.D}, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LoadVector (System.Numerics.Vector&lt;byte&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.Byte},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LoadVector(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint8_t svld1[_u8](svbool_t pg, const uint8_t *base)</para>
          <para>  LD1B Zresult.B, Pg/Z, [Xarray, Xindex]</para>
          <para>  LD1B Zresult.B, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; LoadVector (System.Numerics.Vector&lt;double&gt; mask, double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.Double},System.Double*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; LoadVector(System::Numerics::Vector&lt;double&gt; mask, double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat64_t svld1[_f64](svbool_t pg, const float64_t *base)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xarray, Xindex, LSL #3]</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVector (System.Numerics.Vector&lt;short&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.Int16},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVector(System::Numerics::Vector&lt;short&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svld1[_s16](svbool_t pg, const int16_t *base)</para>
          <para>  LD1H Zresult.H, Pg/Z, [Xarray, Xindex, LSL #1]</para>
          <para>  LD1H Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVector (System.Numerics.Vector&lt;int&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.Int32},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVector(System::Numerics::Vector&lt;int&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svld1[_s32](svbool_t pg, const int32_t *base)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xarray, Xindex, LSL #2]</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVector (System.Numerics.Vector&lt;long&gt; mask, long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.Int64},System.Int64*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVector(System::Numerics::Vector&lt;long&gt; mask, long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1[_s64](svbool_t pg, const int64_t *base)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xarray, Xindex, LSL #3]</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; LoadVector (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.SByte},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; LoadVector(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint8_t svld1[_s8](svbool_t pg, const int8_t *base)</para>
          <para>  LD1B Zresult.B, Pg/Z, [Xarray, Xindex]</para>
          <para>  LD1B Zresult.B, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; LoadVector (System.Numerics.Vector&lt;float&gt; mask, float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.Single},System.Single*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; LoadVector(System::Numerics::Vector&lt;float&gt; mask, float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat32_t svld1[_f32](svbool_t pg, const float32_t *base)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xarray, Xindex, LSL #2]</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVector (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.UInt16},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVector(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svld1[_u16](svbool_t pg, const uint16_t *base)</para>
          <para>  LD1H Zresult.H, Pg/Z, [Xarray, Xindex, LSL #1]</para>
          <para>  LD1H Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVector (System.Numerics.Vector&lt;uint&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.UInt32},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVector(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svld1[_u32](svbool_t pg, const uint32_t *base)</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xarray, Xindex, LSL #2]</para>
          <para>  LD1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVector (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector(System.Numerics.Vector{System.UInt64},System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member LoadVector : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVector(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1[_u64](svbool_t pg, const uint64_t *base)</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xarray, Xindex, LSL #3]</para>
          <para>  LD1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;byte&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.Byte},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint8_t svld1rq[_u8](svbool_t pg, const uint8_t *base)</para>
          <para>  LD1RQB Zresult.B, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;double&gt; mask, double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.Double},System.Double*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;double&gt; mask, double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat64_t svld1rq[_f64](svbool_t pg, const float64_t *base)</para>
          <para>  LD1RQD Zresult.D, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;short&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.Int16},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;short&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svld1rq[_s16](svbool_t pg, const int16_t *base)</para>
          <para>  LD1RQH Zresult.H, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;int&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.Int32},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;int&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svld1rq[_s32](svbool_t pg, const int32_t *base)</para>
          <para>  LD1RQW Zresult.S, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;long&gt; mask, long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.Int64},System.Int64*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;long&gt; mask, long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1rq[_s64](svbool_t pg, const int64_t *base)</para>
          <para>  LD1RQD Zresult.D, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.SByte},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint8_t svld1rq[_s8](svbool_t pg, const int8_t *base)</para>
          <para>  LD1RQB Zresult.B, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;float&gt; mask, float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.Single},System.Single*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;float&gt; mask, float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat32_t svld1rq[_f32](svbool_t pg, const float32_t *base)</para>
          <para>  LD1RQW Zresult.S, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.UInt16},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svld1rq[_u16](svbool_t pg, const uint16_t *base)</para>
          <para>  LD1RQH Zresult.H, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;uint&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.UInt32},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svld1rq[_u32](svbool_t pg, const uint32_t *base)</para>
          <para>  LD1RQW Zresult.S, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVector128AndReplicateToVector">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVector128AndReplicateToVector (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVector128AndReplicateToVector(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector(System.Numerics.Vector{System.UInt64},System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member LoadVector128AndReplicateToVector : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVector128AndReplicateToVector (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVector128AndReplicateToVector(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1rq[_u64](svbool_t pg, const uint64_t *base)</para>
          <para>  LD1RQD Zresult.D, Pg/Z, [Xbase, #0]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteNonFaultingZeroExtendToInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorByteNonFaultingZeroExtendToInt16 (byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorByteNonFaultingZeroExtendToInt16(unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToInt16(System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteNonFaultingZeroExtendToInt16 : nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToInt16 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorByteNonFaultingZeroExtendToInt16(System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svldnf1ub_s16(svbool_t pg, const uint8_t *base)</para>
          <para>  LDNF1B Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteNonFaultingZeroExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorByteNonFaultingZeroExtendToInt32 (byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorByteNonFaultingZeroExtendToInt32(unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToInt32(System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteNonFaultingZeroExtendToInt32 : nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorByteNonFaultingZeroExtendToInt32(System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svldnf1ub_s32(svbool_t pg, const uint8_t *base)</para>
          <para>  LDNF1B Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteNonFaultingZeroExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorByteNonFaultingZeroExtendToInt64 (byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorByteNonFaultingZeroExtendToInt64(unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToInt64(System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteNonFaultingZeroExtendToInt64 : nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorByteNonFaultingZeroExtendToInt64(System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnf1ub_s64(svbool_t pg, const uint8_t *base)</para>
          <para>  LDNF1B Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteNonFaultingZeroExtendToUInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorByteNonFaultingZeroExtendToUInt16 (byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorByteNonFaultingZeroExtendToUInt16(unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToUInt16(System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteNonFaultingZeroExtendToUInt16 : nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToUInt16 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorByteNonFaultingZeroExtendToUInt16(System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svldnf1ub_u16(svbool_t pg, const uint8_t *base)</para>
          <para>  LDNF1B Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteNonFaultingZeroExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorByteNonFaultingZeroExtendToUInt32 (byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorByteNonFaultingZeroExtendToUInt32(unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToUInt32(System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteNonFaultingZeroExtendToUInt32 : nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToUInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorByteNonFaultingZeroExtendToUInt32(System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svldnf1ub_u32(svbool_t pg, const uint8_t *base)</para>
          <para>  LDNF1B Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteNonFaultingZeroExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorByteNonFaultingZeroExtendToUInt64 (byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorByteNonFaultingZeroExtendToUInt64(unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToUInt64(System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteNonFaultingZeroExtendToUInt64 : nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteNonFaultingZeroExtendToUInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorByteNonFaultingZeroExtendToUInt64(System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnf1ub_u64(svbool_t pg, const uint8_t *base)</para>
          <para>  LDNF1B Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;short&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int16},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;short&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;ushort&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt16},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorByteZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorByteZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorByteZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendToInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorByteZeroExtendToInt16 (System.Numerics.Vector&lt;short&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorByteZeroExtendToInt16(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToInt16(System.Numerics.Vector{System.Int16},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendToInt16 : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToInt16 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorByteZeroExtendToInt16(System::Numerics::Vector&lt;short&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svld1ub_s16(svbool_t pg, const uint8_t *base)</para>
          <para>  LD1B Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorByteZeroExtendToInt32 (System.Numerics.Vector&lt;int&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorByteZeroExtendToInt32(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToInt32(System.Numerics.Vector{System.Int32},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendToInt32 : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorByteZeroExtendToInt32(System::Numerics::Vector&lt;int&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svld1ub_s32(svbool_t pg, const uint8_t *base)</para>
          <para>  LD1B Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorByteZeroExtendToInt64 (System.Numerics.Vector&lt;long&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorByteZeroExtendToInt64(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToInt64(System.Numerics.Vector{System.Int64},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendToInt64 : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorByteZeroExtendToInt64(System::Numerics::Vector&lt;long&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1ub_s64(svbool_t pg, const uint8_t *base)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendToUInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorByteZeroExtendToUInt16 (System.Numerics.Vector&lt;ushort&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorByteZeroExtendToUInt16(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToUInt16(System.Numerics.Vector{System.UInt16},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendToUInt16 : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToUInt16 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorByteZeroExtendToUInt16(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svld1ub_u16(svbool_t pg, const uint8_t *base)</para>
          <para>  LD1B Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorByteZeroExtendToUInt32 (System.Numerics.Vector&lt;uint&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorByteZeroExtendToUInt32(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToUInt32(System.Numerics.Vector{System.UInt32},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendToUInt32 : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToUInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorByteZeroExtendToUInt32(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svld1ub_u32(svbool_t pg, const uint8_t *base)</para>
          <para>  LD1B Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorByteZeroExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorByteZeroExtendToUInt64 (System.Numerics.Vector&lt;ulong&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorByteZeroExtendToUInt64(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToUInt64(System.Numerics.Vector{System.UInt64},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorByteZeroExtendToUInt64 : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorByteZeroExtendToUInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorByteZeroExtendToUInt64(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1ub_u64(svbool_t pg, const uint8_t *base)</para>
          <para>  LD1B Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;byte&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.Byte},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;double&gt; mask, double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.Double},System.Double*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;double&gt; mask, double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;short&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.Int16},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;short&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.Int32},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.Int64},System.Int64*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.SByte},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;float&gt; mask, float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.Single},System.Single*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;float&gt; mask, float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.UInt16},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16NonFaultingSignExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorInt16NonFaultingSignExtendToInt32 (short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorInt16NonFaultingSignExtendToInt32(int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToInt32(System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16NonFaultingSignExtendToInt32 : nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorInt16NonFaultingSignExtendToInt32(short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svldnf1sh_s32(svbool_t pg, const int16_t *base)</para>
          <para>  LDNF1SH Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16NonFaultingSignExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorInt16NonFaultingSignExtendToInt64 (short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorInt16NonFaultingSignExtendToInt64(int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToInt64(System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16NonFaultingSignExtendToInt64 : nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorInt16NonFaultingSignExtendToInt64(short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnf1sh_s64(svbool_t pg, const int16_t *base)</para>
          <para>  LDNF1SH Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16NonFaultingSignExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorInt16NonFaultingSignExtendToUInt32 (short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorInt16NonFaultingSignExtendToUInt32(int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToUInt32(System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16NonFaultingSignExtendToUInt32 : nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToUInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorInt16NonFaultingSignExtendToUInt32(short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svldnf1sh_u32(svbool_t pg, const int16_t *base)</para>
          <para>  LDNF1SH Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16NonFaultingSignExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorInt16NonFaultingSignExtendToUInt64 (short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorInt16NonFaultingSignExtendToUInt64(int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToUInt64(System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16NonFaultingSignExtendToUInt64 : nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16NonFaultingSignExtendToUInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorInt16NonFaultingSignExtendToUInt64(short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnf1sh_u64(svbool_t pg, const int16_t *base)</para>
          <para>  LDNF1SH Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorInt16SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorInt16SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorInt16SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorInt16SignExtendToInt32 (System.Numerics.Vector&lt;int&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorInt16SignExtendToInt32(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToInt32(System.Numerics.Vector{System.Int32},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendToInt32 : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorInt16SignExtendToInt32(System::Numerics::Vector&lt;int&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svld1sh_s32(svbool_t pg, const int16_t *base)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorInt16SignExtendToInt64 (System.Numerics.Vector&lt;long&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorInt16SignExtendToInt64(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToInt64(System.Numerics.Vector{System.Int64},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendToInt64 : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorInt16SignExtendToInt64(System::Numerics::Vector&lt;long&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1sh_s64(svbool_t pg, const int16_t *base)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorInt16SignExtendToUInt32 (System.Numerics.Vector&lt;uint&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorInt16SignExtendToUInt32(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToUInt32(System.Numerics.Vector{System.UInt32},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendToUInt32 : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToUInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorInt16SignExtendToUInt32(System::Numerics::Vector&lt;System::UInt32&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svld1sh_u32(svbool_t pg, const int16_t *base)</para>
          <para>  LD1SH Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt16SignExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorInt16SignExtendToUInt64 (System.Numerics.Vector&lt;ulong&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorInt16SignExtendToUInt64(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToUInt64(System.Numerics.Vector{System.UInt64},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt16SignExtendToUInt64 : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt16SignExtendToUInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorInt16SignExtendToUInt64(System::Numerics::Vector&lt;System::UInt64&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1sh_u64(svbool_t pg, const int16_t *base)</para>
          <para>  LD1SH Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt32NonFaultingSignExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorInt32NonFaultingSignExtendToInt64 (int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorInt32NonFaultingSignExtendToInt64(int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32NonFaultingSignExtendToInt64(System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt32NonFaultingSignExtendToInt64 : nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32NonFaultingSignExtendToInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorInt32NonFaultingSignExtendToInt64(int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnf1sw_s64(svbool_t pg, const int32_t *base)</para>
          <para>  LDNF1SW Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt32NonFaultingSignExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorInt32NonFaultingSignExtendToUInt64 (int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorInt32NonFaultingSignExtendToUInt64(int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32NonFaultingSignExtendToUInt64(System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt32NonFaultingSignExtendToUInt64 : nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32NonFaultingSignExtendToUInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorInt32NonFaultingSignExtendToUInt64(int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnf1sw_u64(svbool_t pg, const int32_t *base)</para>
          <para>  LDNF1SW Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt32SignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorInt32SignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorInt32SignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt32SignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorInt32SignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt32SignExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorInt32SignExtendToInt64 (System.Numerics.Vector&lt;long&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorInt32SignExtendToInt64(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendToInt64(System.Numerics.Vector{System.Int64},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt32SignExtendToInt64 : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendToInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorInt32SignExtendToInt64(System::Numerics::Vector&lt;long&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1sw_s64(svbool_t pg, const int32_t *base)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorInt32SignExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorInt32SignExtendToUInt64 (System.Numerics.Vector&lt;ulong&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorInt32SignExtendToUInt64(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendToUInt64(System.Numerics.Vector{System.UInt64},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorInt32SignExtendToUInt64 : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorInt32SignExtendToUInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorInt32SignExtendToUInt64(System::Numerics::Vector&lt;System::UInt64&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1sw_u64(svbool_t pg, const int32_t *base)</para>
          <para>  LD1SW Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LoadVectorNonFaulting (byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LoadVectorNonFaulting(unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LoadVectorNonFaulting(System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint8_t svldnf1[_u8](svbool_t pg, const uint8_t *base)</para>
          <para>  LDNF1B Zresult.B, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; LoadVectorNonFaulting (double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; LoadVectorNonFaulting(float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.Double*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; LoadVectorNonFaulting(double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat64_t svldnf1[_f64](svbool_t pg, const float64_t *base)</para>
          <para>  LDNF1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorNonFaulting (short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorNonFaulting(int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorNonFaulting(short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svldnf1[_s16](svbool_t pg, const int16_t *base)</para>
          <para>  LDNF1H Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorNonFaulting (int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorNonFaulting(int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorNonFaulting(int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svldnf1[_s32](svbool_t pg, const int32_t *base)</para>
          <para>  LDNF1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorNonFaulting (long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorNonFaulting(int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.Int64*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorNonFaulting(long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnf1[_s64](svbool_t pg, const int64_t *base)</para>
          <para>  LDNF1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; LoadVectorNonFaulting (sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; LoadVectorNonFaulting(int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; LoadVectorNonFaulting(System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint8_t svldnf1[_s8](svbool_t pg, const int8_t *base)</para>
          <para>  LDNF1B Zresult.B, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; LoadVectorNonFaulting (float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; LoadVectorNonFaulting(float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.Single*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; LoadVectorNonFaulting(float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat32_t svldnf1[_f32](svbool_t pg, const float32_t *base)</para>
          <para>  LDNF1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorNonFaulting (ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorNonFaulting(unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorNonFaulting(System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svldnf1[_u16](svbool_t pg, const uint16_t *base)</para>
          <para>  LDNF1H Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorNonFaulting (uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorNonFaulting(unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorNonFaulting(System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svldnf1[_u32](svbool_t pg, const uint32_t *base)</para>
          <para>  LDNF1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorNonFaulting (ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorNonFaulting(unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting(System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonFaulting : nativeptr&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonFaulting address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorNonFaulting(System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnf1[_u64](svbool_t pg, const uint64_t *base)</para>
          <para>  LDNF1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;byte&gt; mask, byte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.Byte},System.Byte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint8_t svldnt1[_u8](svbool_t pg, const uint8_t *base)</para>
          <para>  LDNT1B Zresult.B, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;double&gt; mask, double* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.Double},System.Double*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;double&gt; mask, double* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat64_t svldnt1[_f64](svbool_t pg, const float64_t *base)</para>
          <para>  LDNT1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;short&gt; mask, short* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.Int16},System.Int16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;short&gt; mask, short* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svldnt1[_s16](svbool_t pg, const int16_t *base)</para>
          <para>  LDNT1H Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;int&gt; mask, int* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.Int32},System.Int32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;int&gt; mask, int* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svldnt1[_s32](svbool_t pg, const int32_t *base)</para>
          <para>  LDNT1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;long&gt; mask, long* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.Int64},System.Int64*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;long&gt; mask, long* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnt1[_s64](svbool_t pg, const int64_t *base)</para>
          <para>  LDNT1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.SByte},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint8_t svldnt1[_s8](svbool_t pg, const int8_t *base)</para>
          <para>  LDNT1B Zresult.B, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;float&gt; mask, float* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.Single},System.Single*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;float&gt; mask, float* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svfloat32_t svldnt1[_f32](svbool_t pg, const float32_t *base)</para>
          <para>  LDNT1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.UInt16},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svldnt1[_u16](svbool_t pg, const uint16_t *base)</para>
          <para>  LDNT1H Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;uint&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.UInt32},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svldnt1[_u32](svbool_t pg, const uint32_t *base)</para>
          <para>  LDNT1W Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorNonTemporal">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorNonTemporal (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal(System.Numerics.Vector{System.UInt64},System.UInt64*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorNonTemporal : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorNonTemporal (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorNonTemporal(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnt1[_u64](svbool_t pg, const uint64_t *base)</para>
          <para>  LDNT1D Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteNonFaultingSignExtendToInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorSByteNonFaultingSignExtendToInt16 (sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorSByteNonFaultingSignExtendToInt16(int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToInt16(System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteNonFaultingSignExtendToInt16 : nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToInt16 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorSByteNonFaultingSignExtendToInt16(System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svldnf1sb_s16(svbool_t pg, const int8_t *base)</para>
          <para>  LDNF1SB Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteNonFaultingSignExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorSByteNonFaultingSignExtendToInt32 (sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorSByteNonFaultingSignExtendToInt32(int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToInt32(System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteNonFaultingSignExtendToInt32 : nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorSByteNonFaultingSignExtendToInt32(System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svldnf1sb_s32(svbool_t pg, const int8_t *base)</para>
          <para>  LDNF1SB Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteNonFaultingSignExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorSByteNonFaultingSignExtendToInt64 (sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorSByteNonFaultingSignExtendToInt64(int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToInt64(System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteNonFaultingSignExtendToInt64 : nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorSByteNonFaultingSignExtendToInt64(System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnf1sb_s64(svbool_t pg, const int8_t *base)</para>
          <para>  LDNF1SB Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteNonFaultingSignExtendToUInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorSByteNonFaultingSignExtendToUInt16 (sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorSByteNonFaultingSignExtendToUInt16(int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToUInt16(System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteNonFaultingSignExtendToUInt16 : nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToUInt16 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorSByteNonFaultingSignExtendToUInt16(System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svldnf1sb_u16(svbool_t pg, const int8_t *base)</para>
          <para>  LDNF1SB Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteNonFaultingSignExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorSByteNonFaultingSignExtendToUInt32 (sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorSByteNonFaultingSignExtendToUInt32(int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToUInt32(System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteNonFaultingSignExtendToUInt32 : nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToUInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorSByteNonFaultingSignExtendToUInt32(System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svldnf1sb_u32(svbool_t pg, const int8_t *base)</para>
          <para>  LDNF1SB Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteNonFaultingSignExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorSByteNonFaultingSignExtendToUInt64 (sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorSByteNonFaultingSignExtendToUInt64(int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToUInt64(System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteNonFaultingSignExtendToUInt64 : nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteNonFaultingSignExtendToUInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorSByteNonFaultingSignExtendToUInt64(System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnf1sb_u64(svbool_t pg, const int8_t *base)</para>
          <para>  LDNF1SB Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;short&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int16},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;short&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;ushort&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt16},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorSByteSignExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorSByteSignExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorSByteSignExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendToInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; LoadVectorSByteSignExtendToInt16 (System.Numerics.Vector&lt;short&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; LoadVectorSByteSignExtendToInt16(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToInt16(System.Numerics.Vector{System.Int16},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendToInt16 : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToInt16 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; LoadVectorSByteSignExtendToInt16(System::Numerics::Vector&lt;short&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint16_t svld1sb_s16(svbool_t pg, const int8_t *base)</para>
          <para>  LD1SB Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorSByteSignExtendToInt32 (System.Numerics.Vector&lt;int&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorSByteSignExtendToInt32(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToInt32(System.Numerics.Vector{System.Int32},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendToInt32 : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorSByteSignExtendToInt32(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svld1sb_s32(svbool_t pg, const int8_t *base)</para>
          <para>  LD1SB Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorSByteSignExtendToInt64 (System.Numerics.Vector&lt;long&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorSByteSignExtendToInt64(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToInt64(System.Numerics.Vector{System.Int64},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendToInt64 : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorSByteSignExtendToInt64(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1sb_s64(svbool_t pg, const int8_t *base)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendToUInt16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; LoadVectorSByteSignExtendToUInt16 (System.Numerics.Vector&lt;ushort&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; LoadVectorSByteSignExtendToUInt16(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToUInt16(System.Numerics.Vector{System.UInt16},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendToUInt16 : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToUInt16 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; LoadVectorSByteSignExtendToUInt16(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint16_t svld1sb_u16(svbool_t pg, const int8_t *base)</para>
          <para>  LD1SB Zresult.H, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorSByteSignExtendToUInt32 (System.Numerics.Vector&lt;uint&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorSByteSignExtendToUInt32(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToUInt32(System.Numerics.Vector{System.UInt32},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendToUInt32 : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToUInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorSByteSignExtendToUInt32(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svld1sb_u32(svbool_t pg, const int8_t *base)</para>
          <para>  LD1SB Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorSByteSignExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorSByteSignExtendToUInt64 (System.Numerics.Vector&lt;ulong&gt; mask, sbyte* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorSByteSignExtendToUInt64(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, int8* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToUInt64(System.Numerics.Vector{System.UInt64},System.SByte*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorSByteSignExtendToUInt64 : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorSByteSignExtendToUInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorSByteSignExtendToUInt64(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::SByte* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1sb_u64(svbool_t pg, const int8_t *base)</para>
          <para>  LD1SB Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16NonFaultingZeroExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorUInt16NonFaultingZeroExtendToInt32 (ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorUInt16NonFaultingZeroExtendToInt32(unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToInt32(System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16NonFaultingZeroExtendToInt32 : nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorUInt16NonFaultingZeroExtendToInt32(System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svldnf1uh_s32(svbool_t pg, const uint16_t *base)</para>
          <para>  LDNF1H Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16NonFaultingZeroExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorUInt16NonFaultingZeroExtendToInt64 (ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorUInt16NonFaultingZeroExtendToInt64(unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToInt64(System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16NonFaultingZeroExtendToInt64 : nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorUInt16NonFaultingZeroExtendToInt64(System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnf1uh_s64(svbool_t pg, const uint16_t *base)</para>
          <para>  LDNF1H Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16NonFaultingZeroExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorUInt16NonFaultingZeroExtendToUInt32 (ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorUInt16NonFaultingZeroExtendToUInt32(unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToUInt32(System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16NonFaultingZeroExtendToUInt32 : nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToUInt32 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorUInt16NonFaultingZeroExtendToUInt32(System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svldnf1uh_u32(svbool_t pg, const uint16_t *base)</para>
          <para>  LDNF1H Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16NonFaultingZeroExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorUInt16NonFaultingZeroExtendToUInt64 (ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorUInt16NonFaultingZeroExtendToUInt64(unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToUInt64(System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16NonFaultingZeroExtendToUInt64 : nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16NonFaultingZeroExtendToUInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorUInt16NonFaultingZeroExtendToUInt64(System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnf1uh_u64(svbool_t pg, const uint16_t *base)</para>
          <para>  LDNF1H Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;int&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int32},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;uint&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt32},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorUInt16ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorUInt16ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorUInt16ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendToInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; LoadVectorUInt16ZeroExtendToInt32 (System.Numerics.Vector&lt;int&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; LoadVectorUInt16ZeroExtendToInt32(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToInt32(System.Numerics.Vector{System.Int32},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendToInt32 : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; LoadVectorUInt16ZeroExtendToInt32(System::Numerics::Vector&lt;int&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint32_t svld1uh_s32(svbool_t pg, const uint16_t *base)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorUInt16ZeroExtendToInt64 (System.Numerics.Vector&lt;long&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorUInt16ZeroExtendToInt64(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToInt64(System.Numerics.Vector{System.Int64},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendToInt64 : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorUInt16ZeroExtendToInt64(System::Numerics::Vector&lt;long&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1uh_s64(svbool_t pg, const uint16_t *base)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendToUInt32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; LoadVectorUInt16ZeroExtendToUInt32 (System.Numerics.Vector&lt;uint&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; LoadVectorUInt16ZeroExtendToUInt32(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToUInt32(System.Numerics.Vector{System.UInt32},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendToUInt32 : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToUInt32 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; LoadVectorUInt16ZeroExtendToUInt32(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint32_t svld1uh_u32(svbool_t pg, const uint16_t *base)</para>
          <para>  LD1H Zresult.S, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt16ZeroExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorUInt16ZeroExtendToUInt64 (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorUInt16ZeroExtendToUInt64(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToUInt64(System.Numerics.Vector{System.UInt64},System.UInt16*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt16ZeroExtendToUInt64 : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt16ZeroExtendToUInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorUInt16ZeroExtendToUInt64(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1uh_u64(svbool_t pg, const uint16_t *base)</para>
          <para>  LD1H Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt32NonFaultingZeroExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorUInt32NonFaultingZeroExtendToInt64 (uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorUInt32NonFaultingZeroExtendToInt64(unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32NonFaultingZeroExtendToInt64(System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt32NonFaultingZeroExtendToInt64 : nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32NonFaultingZeroExtendToInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorUInt32NonFaultingZeroExtendToInt64(System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svldnf1uw_s64(svbool_t pg, const uint32_t *base)</para>
          <para>  LDNF1W Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt32NonFaultingZeroExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorUInt32NonFaultingZeroExtendToUInt64 (uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorUInt32NonFaultingZeroExtendToUInt64(unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32NonFaultingZeroExtendToUInt64(System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt32NonFaultingZeroExtendToUInt64 : nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32NonFaultingZeroExtendToUInt64 address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorUInt32NonFaultingZeroExtendToUInt64(System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svldnf1uw_u64(svbool_t pg, const uint32_t *base)</para>
          <para>  LDNF1W Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;long&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.Int64},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt32ZeroExtendFirstFaulting">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorUInt32ZeroExtendFirstFaulting (System.Numerics.Vector&lt;ulong&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorUInt32ZeroExtendFirstFaulting(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendFirstFaulting(System.Numerics.Vector{System.UInt64},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt32ZeroExtendFirstFaulting : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendFirstFaulting (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorUInt32ZeroExtendFirstFaulting(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt32ZeroExtendToInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; LoadVectorUInt32ZeroExtendToInt64 (System.Numerics.Vector&lt;long&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; LoadVectorUInt32ZeroExtendToInt64(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendToInt64(System.Numerics.Vector{System.Int64},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt32ZeroExtendToInt64 : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendToInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; LoadVectorUInt32ZeroExtendToInt64(System::Numerics::Vector&lt;long&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svint64_t svld1uw_s64(svbool_t pg, const uint32_t *base)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadVectorUInt32ZeroExtendToUInt64">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; LoadVectorUInt32ZeroExtendToUInt64 (System.Numerics.Vector&lt;ulong&gt; mask, uint* address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; LoadVectorUInt32ZeroExtendToUInt64(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendToUInt64(System.Numerics.Vector{System.UInt64},System.UInt32*)" />
      <MemberSignature Language="F#" Value="static member LoadVectorUInt32ZeroExtendToUInt64 : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.LoadVectorUInt32ZeroExtendToUInt64 (mask, address)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; LoadVectorUInt32ZeroExtendToUInt64(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <summary>
          <para>svuint64_t svld1uw_u64(svbool_t pg, const uint32_t *base)</para>
          <para>  LD1W Zresult.D, Pg/Z, [Xbase, #0, MUL VL]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Max (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Max(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Max(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svmax[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svmax[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svmax[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  UMAX Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  UMAX Ztied2.B, Pg/M, Ztied2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Max (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Max(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Max(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svmax[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmax[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmax[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FMAX Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  FMAX Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Max (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Max(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Max(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svmax[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svmax[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svmax[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  SMAX Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  SMAX Ztied2.H, Pg/M, Ztied2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Max (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Max(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Max(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svmax[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svmax[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svmax[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  SMAX Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  SMAX Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Max (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Max(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Max(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svmax[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svmax[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svmax[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  SMAX Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  SMAX Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Max (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Max(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Max(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svmax[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svmax[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svmax[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  SMAX Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  SMAX Ztied2.B, Pg/M, Ztied2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Max (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Max(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Max(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svmax[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmax[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmax[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FMAX Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  FMAX Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Max (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Max(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Max(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svmax[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svmax[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svmax[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  UMAX Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  UMAX Ztied2.H, Pg/M, Ztied2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Max (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Max(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Max(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svmax[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svmax[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svmax[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  UMAX Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  UMAX Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Max (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Max(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Max(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Max (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Max(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svmax[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svmax[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svmax[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  UMAX Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  UMAX Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; MaxAcross (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; MaxAcross(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint8_t svmaxv[_u8](svbool_t pg, svuint8_t op)</para>
          <para>  UMAXV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MaxAcross (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MaxAcross(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float64_t svmaxv[_f64](svbool_t pg, svfloat64_t op)</para>
          <para>  FMAXV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; MaxAcross (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; MaxAcross(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int16_t svmaxv[_s16](svbool_t pg, svint16_t op)</para>
          <para>  SMAXV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; MaxAcross (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; MaxAcross(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int32_t svmaxv[_s32](svbool_t pg, svint32_t op)</para>
          <para>  SMAXV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; MaxAcross (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; MaxAcross(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svmaxv[_s64](svbool_t pg, svint64_t op)</para>
          <para>  SMAXV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; MaxAcross (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; MaxAcross(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int8_t svmaxv[_s8](svbool_t pg, svint8_t op)</para>
          <para>  SMAXV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MaxAcross (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MaxAcross(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float32_t svmaxv[_f32](svbool_t pg, svfloat32_t op)</para>
          <para>  FMAXV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; MaxAcross (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; MaxAcross(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint16_t svmaxv[_u16](svbool_t pg, svuint16_t op)</para>
          <para>  UMAXV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; MaxAcross (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; MaxAcross(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint32_t svmaxv[_u32](svbool_t pg, svuint32_t op)</para>
          <para>  UMAXV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; MaxAcross (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; MaxAcross(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxAcross(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxAcross (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member MaxAcross : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; MaxAcross(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svmaxv[_u64](svbool_t pg, svuint64_t op)</para>
          <para>  UMAXV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNumber">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MaxNumber (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MaxNumber(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxNumber(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxNumber (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MaxNumber : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxNumber (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MaxNumber(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svmaxnm[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmaxnm[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmaxnm[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FMAXNM Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  FMAXNM Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNumber">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MaxNumber (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MaxNumber(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxNumber(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxNumber (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MaxNumber : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxNumber (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MaxNumber(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svmaxnm[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmaxnm[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmaxnm[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FMAXNM Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  FMAXNM Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNumberAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MaxNumberAcross (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MaxNumberAcross(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxNumberAcross(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxNumberAcross (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MaxNumberAcross : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxNumberAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MaxNumberAcross(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float64_t svmaxnmv[_f64](svbool_t pg, svfloat64_t op)</para>
          <para>  FMAXNMV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNumberAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MaxNumberAcross (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MaxNumberAcross(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MaxNumberAcross(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxNumberAcross (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MaxNumberAcross : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MaxNumberAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MaxNumberAcross(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float32_t svmaxnmv[_f32](svbool_t pg, svfloat32_t op)</para>
          <para>  FMAXNMV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Min (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Min(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Min(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svmin[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svmin[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svmin[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  UMIN Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  UMIN Ztied2.B, Pg/M, Ztied2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Min (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Min(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Min(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svmin[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmin[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmin[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FMIN Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  FMIN Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Min (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Min(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Min(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svmin[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svmin[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svmin[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  SMIN Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  SMIN Ztied2.H, Pg/M, Ztied2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Min (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Min(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Min(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svmin[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svmin[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svmin[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  SMIN Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  SMIN Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Min (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Min(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Min(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svmin[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svmin[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svmin[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  SMIN Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  SMIN Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Min (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Min(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Min(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svmin[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svmin[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svmin[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  SMIN Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  SMIN Ztied2.B, Pg/M, Ztied2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Min (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Min(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Min(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svmin[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmin[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmin[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FMIN Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  FMIN Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Min (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Min(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Min(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svmin[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svmin[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svmin[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  UMIN Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  UMIN Ztied2.H, Pg/M, Ztied2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Min (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Min(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Min(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svmin[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svmin[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svmin[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  UMIN Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  UMIN Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Min (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Min(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Min(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Min (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Min(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svmin[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svmin[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svmin[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  UMIN Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  UMIN Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; MinAcross (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; MinAcross(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint8_t svminv[_u8](svbool_t pg, svuint8_t op)</para>
          <para>  UMINV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MinAcross (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MinAcross(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float64_t svminv[_f64](svbool_t pg, svfloat64_t op)</para>
          <para>  FMINV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; MinAcross (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; MinAcross(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int16_t svminv[_s16](svbool_t pg, svint16_t op)</para>
          <para>  SMINV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; MinAcross (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; MinAcross(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int32_t svminv[_s32](svbool_t pg, svint32_t op)</para>
          <para>  SMINV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; MinAcross (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; MinAcross(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svminv[_s64](svbool_t pg, svint64_t op)</para>
          <para>  SMINV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; MinAcross (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; MinAcross(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int8_t svminv[_s8](svbool_t pg, svint8_t op)</para>
          <para>  SMINV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MinAcross (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MinAcross(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float32_t svminv[_f32](svbool_t pg, svfloat32_t op)</para>
          <para>  FMINV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; MinAcross (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; MinAcross(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint16_t svminv[_u16](svbool_t pg, svuint16_t op)</para>
          <para>  UMINV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; MinAcross (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; MinAcross(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint32_t svminv[_u32](svbool_t pg, svuint32_t op)</para>
          <para>  UMINV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; MinAcross (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; MinAcross(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinAcross(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinAcross (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member MinAcross : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; MinAcross(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svminv[_u64](svbool_t pg, svuint64_t op)</para>
          <para>  UMINV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNumber">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MinNumber (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MinNumber(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinNumber(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinNumber (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MinNumber : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinNumber (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MinNumber(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svminnm[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svminnm[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svminnm[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FMINNM Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  FMINNM Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNumber">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MinNumber (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MinNumber(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinNumber(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinNumber (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MinNumber : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinNumber (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MinNumber(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svminnm[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svminnm[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svminnm[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FMINNM Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  FMINNM Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNumberAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MinNumberAcross (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MinNumberAcross(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinNumberAcross(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinNumberAcross (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MinNumberAcross : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinNumberAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MinNumberAcross(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float64_t svminnmv[_f64](svbool_t pg, svfloat64_t op)</para>
          <para>  FMINNMV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNumberAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MinNumberAcross (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MinNumberAcross(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MinNumberAcross(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinNumberAcross (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MinNumberAcross : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MinNumberAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MinNumberAcross(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>float32_t svminnmv[_f32](svbool_t pg, svfloat32_t op)</para>
          <para>  FMINNMV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Multiply (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Multiply(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Multiply(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svmul[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svmul[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svmul[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  MUL Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  MUL Ztied2.B, Pg/M, Ztied2.B, Zop1.B</para>
          <para>svuint8_t svmul[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Multiply (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Multiply(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Multiply(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svmul[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmul[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmul[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FMUL Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  FMUL Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
          <para>svfloat64_t svmul[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Multiply (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Multiply(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Multiply(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svmul[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svmul[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svmul[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  MUL Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  MUL Ztied2.H, Pg/M, Ztied2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Multiply (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Multiply(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Multiply(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svmul[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svmul[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svmul[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  MUL Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  MUL Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Multiply (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Multiply(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Multiply(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svmul[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svmul[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svmul[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  MUL Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  MUL Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Multiply (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Multiply(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Multiply(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svmul[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svmul[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svmul[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  MUL Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
          <para>  MUL Ztied2.B, Pg/M, Ztied2.B, Zop1.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Multiply (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Multiply(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Multiply(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svmul[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmul[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmul[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FMUL Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  FMUL Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Multiply (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Multiply(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Multiply(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svmul[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svmul[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svmul[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  MUL Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
          <para>  MUL Ztied2.H, Pg/M, Ztied2.H, Zop1.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Multiply (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Multiply(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Multiply(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svmul[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svmul[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svmul[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  MUL Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
          <para>  MUL Ztied2.S, Pg/M, Ztied2.S, Zop1.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Multiply (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Multiply(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Multiply(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Multiply (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Multiply(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svmul[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svmul[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svmul[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  MUL Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
          <para>  MUL Ztied2.D, Pg/M, Ztied2.D, Zop1.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; MultiplyAdd (System.Numerics.Vector&lt;byte&gt; addend, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of Byte), left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; MultiplyAdd(System::Numerics::Vector&lt;System::Byte&gt; addend, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svmla[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2, svuint8_t op3)</para>
          <para>svuint8_t svmla[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2, svuint8_t op3)</para>
          <para>svuint8_t svmla[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2, svuint8_t op3)</para>
          <para>  MLA Ztied1.B, Pg/M, Zop2.B, Zop3.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; MultiplyAdd (System.Numerics.Vector&lt;short&gt; addend, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;int16&gt; addend, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of Short), left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; MultiplyAdd(System::Numerics::Vector&lt;short&gt; addend, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svmla[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2, svint16_t op3)</para>
          <para>svint16_t svmla[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2, svint16_t op3)</para>
          <para>svint16_t svmla[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2, svint16_t op3)</para>
          <para>  MLA Ztied1.H, Pg/M, Zop2.H, Zop3.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; MultiplyAdd (System.Numerics.Vector&lt;int&gt; addend, System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;int32&gt; addend, valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of Integer), left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; MultiplyAdd(System::Numerics::Vector&lt;int&gt; addend, System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svmla[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2, svint32_t op3)</para>
          <para>svint32_t svmla[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2, svint32_t op3)</para>
          <para>svint32_t svmla[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2, svint32_t op3)</para>
          <para>  MLA Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; MultiplyAdd (System.Numerics.Vector&lt;long&gt; addend, System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;int64&gt; addend, valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of Long), left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; MultiplyAdd(System::Numerics::Vector&lt;long&gt; addend, System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svmla[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2, svint64_t op3)</para>
          <para>svint64_t svmla[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2, svint64_t op3)</para>
          <para>svint64_t svmla[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2, svint64_t op3)</para>
          <para>  MLA Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; MultiplyAdd (System.Numerics.Vector&lt;sbyte&gt; addend, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;int8&gt; addend, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of SByte), left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; MultiplyAdd(System::Numerics::Vector&lt;System::SByte&gt; addend, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svmla[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2, svint8_t op3)</para>
          <para>svint8_t svmla[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2, svint8_t op3)</para>
          <para>svint8_t svmla[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2, svint8_t op3)</para>
          <para>  MLA Ztied1.B, Pg/M, Zop2.B, Zop3.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; MultiplyAdd (System.Numerics.Vector&lt;ushort&gt; addend, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of UShort), left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; MultiplyAdd(System::Numerics::Vector&lt;System::UInt16&gt; addend, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svmla[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2, svuint16_t op3)</para>
          <para>svuint16_t svmla[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2, svuint16_t op3)</para>
          <para>svuint16_t svmla[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2, svuint16_t op3)</para>
          <para>  MLA Ztied1.H, Pg/M, Zop2.H, Zop3.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; MultiplyAdd (System.Numerics.Vector&lt;uint&gt; addend, System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of UInteger), left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; MultiplyAdd(System::Numerics::Vector&lt;System::UInt32&gt; addend, System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svmla[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2, svuint32_t op3)</para>
          <para>svuint32_t svmla[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2, svuint32_t op3)</para>
          <para>svuint32_t svmla[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2, svuint32_t op3)</para>
          <para>  MLA Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; MultiplyAdd (System.Numerics.Vector&lt;ulong&gt; addend, System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; MultiplyAdd(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addend, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAdd (addend As Vector(Of ULong), left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member MultiplyAdd : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAdd (addend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; MultiplyAdd(System::Numerics::Vector&lt;System::UInt64&gt; addend, System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svmla[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2, svuint64_t op3)</para>
          <para>svuint64_t svmla[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2, svuint64_t op3)</para>
          <para>svuint64_t svmla[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2, svuint64_t op3)</para>
          <para>  MLA Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAddRotateComplex">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MultiplyAddRotateComplex (System.Numerics.Vector&lt;double&gt; addend, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right, byte rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MultiplyAddRotateComplex(valuetype System.Numerics.Vector`1&lt;float64&gt; addend, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right, unsigned int8 rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAddRotateComplex(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAddRotateComplex (addend As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double), rotation As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MultiplyAddRotateComplex : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAddRotateComplex (addend, left, right, rotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MultiplyAddRotateComplex(System::Numerics::Vector&lt;double&gt; addend, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right, System::Byte rotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="rotation" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=3, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=3, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
          <para>svfloat64_t svcmla[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3, uint64_t imm_rotation)</para>
          <para>svfloat64_t svcmla[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3, uint64_t imm_rotation)</para>
          <para>svfloat64_t svcmla[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2, svfloat64_t op3, uint64_t imm_rotation)</para>
          <para>  FCMLA Ztied1.D, Pg/M, Zop2.D, Zop3.D, #imm_rotation</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAddRotateComplex">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MultiplyAddRotateComplex (System.Numerics.Vector&lt;float&gt; addend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right, byte rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MultiplyAddRotateComplex(valuetype System.Numerics.Vector`1&lt;float32&gt; addend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right, unsigned int8 rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAddRotateComplex(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAddRotateComplex (addend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single), rotation As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MultiplyAddRotateComplex : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAddRotateComplex (addend, left, right, rotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MultiplyAddRotateComplex(System::Numerics::Vector&lt;float&gt; addend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right, System::Byte rotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="rotation" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=3, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=3, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
          <para>svfloat32_t svcmla[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3, uint64_t imm_rotation)</para>
          <para>svfloat32_t svcmla[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3, uint64_t imm_rotation)</para>
          <para>svfloat32_t svcmla[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2, svfloat32_t op3, uint64_t imm_rotation)</para>
          <para>  FCMLA Ztied1.S, Pg/M, Zop2.S, Zop3.S, #imm_rotation</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAddRotateComplexBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MultiplyAddRotateComplexBySelectedScalar (System.Numerics.Vector&lt;float&gt; addend, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right, byte rightIndex, byte rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MultiplyAddRotateComplexBySelectedScalar(valuetype System.Numerics.Vector`1&lt;float32&gt; addend, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right, unsigned int8 rightIndex, unsigned int8 rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyAddRotateComplexBySelectedScalar(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAddRotateComplexBySelectedScalar (addend As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single), rightIndex As Byte, rotation As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MultiplyAddRotateComplexBySelectedScalar : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyAddRotateComplexBySelectedScalar (addend, left, right, rightIndex, rotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MultiplyAddRotateComplexBySelectedScalar(System::Numerics::Vector&lt;float&gt; addend, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right, System::Byte rightIndex, System::Byte rotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addend" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=1, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=1, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="rotation" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=3, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=3, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
          <para>svfloat32_t svcmla_lane[_f32](svfloat32_t op1, svfloat32_t op2, svfloat32_t op3, uint64_t imm_index, uint64_t imm_rotation)</para>
          <para>  FCMLA Ztied1.S, Zop2.S, Zop3.S[imm_index], #imm_rotation</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MultiplyBySelectedScalar (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MultiplyBySelectedScalar(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyBySelectedScalar(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyBySelectedScalar (left As Vector(Of Double), right As Vector(Of Double), rightIndex As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MultiplyBySelectedScalar : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyBySelectedScalar (left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MultiplyBySelectedScalar(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svfloat64_t svmul_lane[_f64](svfloat64_t op1, svfloat64_t op2, uint64_t imm_index)</para>
          <para>  FMUL Zresult.D, Zop1.D, Zop2.D[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyBySelectedScalar">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MultiplyBySelectedScalar (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right, byte rightIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MultiplyBySelectedScalar(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right, unsigned int8 rightIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyBySelectedScalar(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyBySelectedScalar (left As Vector(Of Single), right As Vector(Of Single), rightIndex As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MultiplyBySelectedScalar : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyBySelectedScalar (left, right, rightIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MultiplyBySelectedScalar(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right, System::Byte rightIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="rightIndex" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="rightIndex">To be added.</param>
        <summary>
          <para>svfloat32_t svmul_lane[_f32](svfloat32_t op1, svfloat32_t op2, uint64_t imm_index)</para>
          <para>  FMUL Zresult.S, Zop1.S, Zop2.S[imm_index]</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyExtended">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; MultiplyExtended (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; MultiplyExtended(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyExtended(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyExtended (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member MultiplyExtended : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyExtended (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; MultiplyExtended(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svmulx[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmulx[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svmulx[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FMULX Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyExtended">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; MultiplyExtended (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; MultiplyExtended(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplyExtended(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyExtended (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member MultiplyExtended : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplyExtended (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; MultiplyExtended(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svmulx[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmulx[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svmulx[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FMULX Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; MultiplySubtract (System.Numerics.Vector&lt;byte&gt; minuend, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; minuend, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of Byte), left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; MultiplySubtract(System::Numerics::Vector&lt;System::Byte&gt; minuend, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svmls[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2, svuint8_t op3)</para>
          <para>svuint8_t svmls[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2, svuint8_t op3)</para>
          <para>svuint8_t svmls[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2, svuint8_t op3)</para>
          <para>  MLS Ztied1.B, Pg/M, Zop2.B, Zop3.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; MultiplySubtract (System.Numerics.Vector&lt;short&gt; minuend, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;int16&gt; minuend, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of Short), left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; MultiplySubtract(System::Numerics::Vector&lt;short&gt; minuend, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svmls[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2, svint16_t op3)</para>
          <para>svint16_t svmls[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2, svint16_t op3)</para>
          <para>svint16_t svmls[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2, svint16_t op3)</para>
          <para>  MLS Ztied1.H, Pg/M, Zop2.H, Zop3.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; MultiplySubtract (System.Numerics.Vector&lt;int&gt; minuend, System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;int32&gt; minuend, valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of Integer), left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; MultiplySubtract(System::Numerics::Vector&lt;int&gt; minuend, System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svmls[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2, svint32_t op3)</para>
          <para>svint32_t svmls[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2, svint32_t op3)</para>
          <para>svint32_t svmls[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2, svint32_t op3)</para>
          <para>  MLS Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; MultiplySubtract (System.Numerics.Vector&lt;long&gt; minuend, System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;int64&gt; minuend, valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of Long), left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; MultiplySubtract(System::Numerics::Vector&lt;long&gt; minuend, System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svmls[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2, svint64_t op3)</para>
          <para>svint64_t svmls[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2, svint64_t op3)</para>
          <para>svint64_t svmls[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2, svint64_t op3)</para>
          <para>  MLS Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; MultiplySubtract (System.Numerics.Vector&lt;sbyte&gt; minuend, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;int8&gt; minuend, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of SByte), left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; MultiplySubtract(System::Numerics::Vector&lt;System::SByte&gt; minuend, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svmls[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2, svint8_t op3)</para>
          <para>svint8_t svmls[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2, svint8_t op3)</para>
          <para>svint8_t svmls[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2, svint8_t op3)</para>
          <para>  MLS Ztied1.B, Pg/M, Zop2.B, Zop3.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; MultiplySubtract (System.Numerics.Vector&lt;ushort&gt; minuend, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; minuend, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of UShort), left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; MultiplySubtract(System::Numerics::Vector&lt;System::UInt16&gt; minuend, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svmls[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2, svuint16_t op3)</para>
          <para>svuint16_t svmls[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2, svuint16_t op3)</para>
          <para>svuint16_t svmls[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2, svuint16_t op3)</para>
          <para>  MLS Ztied1.H, Pg/M, Zop2.H, Zop3.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; MultiplySubtract (System.Numerics.Vector&lt;uint&gt; minuend, System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; minuend, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of UInteger), left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; MultiplySubtract(System::Numerics::Vector&lt;System::UInt32&gt; minuend, System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svmls[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2, svuint32_t op3)</para>
          <para>svuint32_t svmls[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2, svuint32_t op3)</para>
          <para>svuint32_t svmls[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2, svuint32_t op3)</para>
          <para>  MLS Ztied1.S, Pg/M, Zop2.S, Zop3.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplySubtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; MultiplySubtract (System.Numerics.Vector&lt;ulong&gt; minuend, System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; MultiplySubtract(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; minuend, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplySubtract (minuend As Vector(Of ULong), left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member MultiplySubtract : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.MultiplySubtract (minuend, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; MultiplySubtract(System::Numerics::Vector&lt;System::UInt64&gt; minuend, System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minuend" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="minuend">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svmls[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2, svuint64_t op3)</para>
          <para>svuint64_t svmls[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2, svuint64_t op3)</para>
          <para>svuint64_t svmls[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2, svuint64_t op3)</para>
          <para>  MLS Ztied1.D, Pg/M, Zop2.D, Zop3.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Negate (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Negate(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Negate(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Negate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Negate(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svneg[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svneg[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svneg[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FNEG Ztied.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Negate (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Negate(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Negate(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Negate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Negate(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svneg[_s16]_m(svint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svint16_t svneg[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svint16_t svneg[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  NEG Ztied.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Negate (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Negate(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Negate(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Negate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Negate(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svneg[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svneg[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svneg[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  NEG Ztied.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Negate (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Negate(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Negate(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Negate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Negate(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svneg[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svneg[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svneg[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  NEG Ztied.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Negate (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Negate(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Negate(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Negate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Negate(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint8_t svneg[_s8]_m(svint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svint8_t svneg[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svint8_t svneg[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>  NEG Ztied.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Negate (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Negate(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Negate(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Negate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Negate(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svneg[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svneg[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svneg[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FNEG Ztied.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Not (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Not(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Not(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svnot[_u8]_m(svuint8_t inactive, svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svnot[_u8]_x(svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svnot[_u8]_z(svbool_t pg, svuint8_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Not (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Not(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Not(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svnot[_s16]_m(svint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svint16_t svnot[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svint16_t svnot[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Not (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Not(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Not(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svnot[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svnot[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svnot[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Not (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Not(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Not(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svnot[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svnot[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svnot[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Not (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Not(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Not(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint8_t svnot[_s8]_m(svint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svint8_t svnot[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svint8_t svnot[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Not (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Not(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Not(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svnot[_u16]_m(svuint16_t inactive, svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svnot[_u16]_x(svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svnot[_u16]_z(svbool_t pg, svuint16_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Not (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Not(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Not(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svnot[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svnot[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svnot[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Not (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Not(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Not(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Not : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Not value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Not(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svnot[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svnot[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svnot[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>svbool_t svnot[_b]_z(svbool_t pg, svbool_t op)</para>
          <para>  NOT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Or (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Or(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Or(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svorr[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svorr[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svorr[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Or (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Or(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Or(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svorr[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svorr[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svorr[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Or (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Or(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Or(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svorr[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svorr[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svorr[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Or (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Or(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Or(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svorr[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svorr[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svorr[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Or (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Or(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Or(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svorr[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svorr[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svorr[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Or (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Or(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Or(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svorr[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svorr[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svorr[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Or (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Or(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Or(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svorr[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svorr[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svorr[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Or (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Or(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Or(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Or : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Or (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Or(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svorr[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svorr[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svorr[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  ORR Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; OrAcross (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; OrAcross(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint8_t svorv[_u8](svbool_t pg, svuint8_t op)</para>
          <para>  ORV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; OrAcross (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; OrAcross(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int16_t svorv[_s16](svbool_t pg, svint16_t op)</para>
          <para>  ORV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; OrAcross (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; OrAcross(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int32_t svorv[_s32](svbool_t pg, svint32_t op)</para>
          <para>  ORV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; OrAcross (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; OrAcross(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t svorv[_s64](svbool_t pg, svint64_t op)</para>
          <para>  ORV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; OrAcross (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; OrAcross(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int8_t svorv[_s8](svbool_t pg, svint8_t op)</para>
          <para>  ORV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; OrAcross (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; OrAcross(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint16_t svorv[_u16](svbool_t pg, svuint16_t op)</para>
          <para>  ORV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; OrAcross (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; OrAcross(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint32_t svorv[_u32](svbool_t pg, svuint32_t op)</para>
          <para>  ORV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; OrAcross (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; OrAcross(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.OrAcross(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAcross (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member OrAcross : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.OrAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; OrAcross(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t svorv[_u64](svbool_t pg, svuint64_t op)</para>
          <para>  ORV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; PopCount (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; PopCount(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; PopCount(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svcnt[_u8]_m(svuint8_t inactive, svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svcnt[_u8]_x(svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svcnt[_u8]_z(svbool_t pg, svuint8_t op)</para>
          <para>  CNT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; PopCount (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; PopCount(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of Double)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; PopCount(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcnt[_f64]_m(svuint64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svuint64_t svcnt[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svuint64_t svcnt[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  CNT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; PopCount (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; PopCount(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of Short)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; PopCount(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svcnt[_s16]_m(svuint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svuint16_t svcnt[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svuint16_t svcnt[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  CNT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; PopCount (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; PopCount(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of Integer)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; PopCount(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcnt[_s32]_m(svuint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svuint32_t svcnt[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svuint32_t svcnt[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  CNT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; PopCount (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; PopCount(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of Long)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; PopCount(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcnt[_s64]_m(svuint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svuint64_t svcnt[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svuint64_t svcnt[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  CNT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; PopCount (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; PopCount(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of SByte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; PopCount(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svcnt[_s8]_m(svuint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svuint8_t svcnt[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svuint8_t svcnt[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>  CNT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; PopCount (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; PopCount(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of Single)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; PopCount(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcnt[_f32]_m(svuint32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svuint32_t svcnt[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svuint32_t svcnt[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  CNT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; PopCount (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; PopCount(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; PopCount(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svcnt[_u16]_m(svuint16_t inactive, svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svcnt[_u16]_x(svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svcnt[_u16]_z(svbool_t pg, svuint16_t op)</para>
          <para>  CNT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; PopCount (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; PopCount(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; PopCount(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svcnt[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svcnt[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svcnt[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  CNT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; PopCount (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; PopCount(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PopCount(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member PopCount : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.PopCount value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; PopCount(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svcnt[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svcnt[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svcnt[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  CNT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchBytes">
      <MemberSignature Language="C#" Value="public static void PrefetchBytes (System.Numerics.Vector&lt;byte&gt; mask, void* address, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrefetchBytes(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, void* address, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PrefetchBytes(System.Numerics.Vector{System.Byte},System.Void*,System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member PrefetchBytes : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;unit&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.PrefetchBytes (mask, address, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrefetchBytes(System::Numerics::Vector&lt;System::Byte&gt; mask, void* address, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfb(svbool_t pg, const void *base, enum svprfop op)</para>
          <para>  PRFB op, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchInt16">
      <MemberSignature Language="C#" Value="public static void PrefetchInt16 (System.Numerics.Vector&lt;ushort&gt; mask, void* address, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrefetchInt16(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, void* address, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PrefetchInt16(System.Numerics.Vector{System.UInt16},System.Void*,System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member PrefetchInt16 : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;unit&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.PrefetchInt16 (mask, address, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrefetchInt16(System::Numerics::Vector&lt;System::UInt16&gt; mask, void* address, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfh(svbool_t pg, const void *base, enum svprfop op)</para>
          <para>  PRFH op, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchInt32">
      <MemberSignature Language="C#" Value="public static void PrefetchInt32 (System.Numerics.Vector&lt;uint&gt; mask, void* address, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrefetchInt32(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, void* address, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PrefetchInt32(System.Numerics.Vector{System.UInt32},System.Void*,System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member PrefetchInt32 : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;unit&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.PrefetchInt32 (mask, address, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrefetchInt32(System::Numerics::Vector&lt;System::UInt32&gt; mask, void* address, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfw(svbool_t pg, const void *base, enum svprfop op)</para>
          <para>  PRFW op, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchInt64">
      <MemberSignature Language="C#" Value="public static void PrefetchInt64 (System.Numerics.Vector&lt;ulong&gt; mask, void* address, System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrefetchInt64(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, void* address, valuetype System.Runtime.Intrinsics.Arm.SvePrefetchType prefetchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.PrefetchInt64(System.Numerics.Vector{System.UInt64},System.Void*,System.Runtime.Intrinsics.Arm.SvePrefetchType)" />
      <MemberSignature Language="F#" Value="static member PrefetchInt64 : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;unit&gt; * System.Runtime.Intrinsics.Arm.SvePrefetchType -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.PrefetchInt64 (mask, address, prefetchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrefetchInt64(System::Numerics::Vector&lt;System::UInt64&gt; mask, void* address, System::Runtime::Intrinsics::Arm::SvePrefetchType prefetchType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Void*" />
        <Parameter Name="prefetchType" Type="System.Runtime.Intrinsics.Arm.SvePrefetchType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="prefetchType">To be added.</param>
        <summary>
          <para>void svprfd(svbool_t pg, const void *base, enum svprfop op)</para>
          <para>  PRFD op, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalEstimate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ReciprocalEstimate (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ReciprocalEstimate(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalEstimate(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalEstimate (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ReciprocalEstimate : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalEstimate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ReciprocalEstimate(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrecpe[_f64](svfloat64_t op)</para>
          <para>  FRECPE Zresult.D, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalEstimate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ReciprocalEstimate (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ReciprocalEstimate(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalEstimate(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalEstimate (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ReciprocalEstimate : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalEstimate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ReciprocalEstimate(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrecpe[_f32](svfloat32_t op)</para>
          <para>  FRECPE Zresult.S, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalExponent">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ReciprocalExponent (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ReciprocalExponent(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalExponent(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalExponent (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ReciprocalExponent : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalExponent value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ReciprocalExponent(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrecpx[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrecpx[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrecpx[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FRECPX Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalExponent">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ReciprocalExponent (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ReciprocalExponent(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalExponent(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalExponent (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ReciprocalExponent : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalExponent value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ReciprocalExponent(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrecpx[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrecpx[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrecpx[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FRECPX Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalSqrtEstimate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ReciprocalSqrtEstimate (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ReciprocalSqrtEstimate(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtEstimate(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalSqrtEstimate (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ReciprocalSqrtEstimate : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtEstimate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ReciprocalSqrtEstimate(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrsqrte[_f64](svfloat64_t op)</para>
          <para>  FRSQRTE Zresult.D, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalSqrtEstimate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ReciprocalSqrtEstimate (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ReciprocalSqrtEstimate(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtEstimate(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalSqrtEstimate (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ReciprocalSqrtEstimate : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtEstimate value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ReciprocalSqrtEstimate(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrsqrte[_f32](svfloat32_t op)</para>
          <para>  FRSQRTE Zresult.S, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalSqrtStep">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ReciprocalSqrtStep (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ReciprocalSqrtStep(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtStep(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalSqrtStep (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ReciprocalSqrtStep : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtStep (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ReciprocalSqrtStep(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svrsqrts[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FRSQRTS Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalSqrtStep">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ReciprocalSqrtStep (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ReciprocalSqrtStep(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtStep(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalSqrtStep (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ReciprocalSqrtStep : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalSqrtStep (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ReciprocalSqrtStep(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svrsqrts[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FRSQRTS Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalStep">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ReciprocalStep (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ReciprocalStep(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalStep(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalStep (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ReciprocalStep : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalStep (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ReciprocalStep(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svrecps[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FRECPS Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReciprocalStep">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ReciprocalStep (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ReciprocalStep(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReciprocalStep(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReciprocalStep (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ReciprocalStep : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReciprocalStep (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ReciprocalStep(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svrecps[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FRECPS Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ReverseBits (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ReverseBits(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svrbit[_u8]_m(svuint8_t inactive, svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svrbit[_u8]_x(svbool_t pg, svuint8_t op)</para>
          <para>svuint8_t svrbit[_u8]_z(svbool_t pg, svuint8_t op)</para>
          <para>  RBIT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ReverseBits (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ReverseBits(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svrbit[_s16]_m(svint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svint16_t svrbit[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svint16_t svrbit[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  RBIT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ReverseBits (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ReverseBits(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svrbit[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svrbit[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svrbit[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  RBIT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ReverseBits (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ReverseBits(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svrbit[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrbit[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrbit[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  RBIT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ReverseBits (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ReverseBits(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint8_t svrbit[_s8]_m(svint8_t inactive, svbool_t pg, svint8_t op)</para>
          <para>svint8_t svrbit[_s8]_x(svbool_t pg, svint8_t op)</para>
          <para>svint8_t svrbit[_s8]_z(svbool_t pg, svint8_t op)</para>
          <para>  RBIT Zresult.B, Pg/M, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ReverseBits (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ReverseBits(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svrbit[_u16]_m(svuint16_t inactive, svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svrbit[_u16]_x(svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svrbit[_u16]_z(svbool_t pg, svuint16_t op)</para>
          <para>  RBIT Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ReverseBits (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ReverseBits(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svrbit[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svrbit[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svrbit[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  RBIT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseBits">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ReverseBits (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ReverseBits(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseBits(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBits (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ReverseBits : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseBits value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ReverseBits(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svrbit[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrbit[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrbit[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  RBIT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ReverseElement (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ReverseElement(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint8_t svrev[_u8](svuint8_t op)</para>
          <para>  REV Zresult.B, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ReverseElement (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ReverseElement(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrev[_f64](svfloat64_t op)</para>
          <para>  REV Zresult.D, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ReverseElement (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ReverseElement(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svrev[_s16](svint16_t op)</para>
          <para>  REV Zresult.H, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ReverseElement (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ReverseElement(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svrev[_s32](svint32_t op)</para>
          <para>  REV Zresult.S, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ReverseElement (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ReverseElement(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svrev[_s64](svint64_t op)</para>
          <para>  REV Zresult.D, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ReverseElement (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ReverseElement(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint8_t svrev[_s8](svint8_t op)</para>
          <para>  REV Zresult.B, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ReverseElement (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ReverseElement(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrev[_f32](svfloat32_t op)</para>
          <para>  REV Zresult.S, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ReverseElement (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ReverseElement(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svrev[_u16](svuint16_t op)</para>
          <para>  REV Zresult.H, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ReverseElement (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ReverseElement(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svrev[_u32](svuint32_t op)</para>
          <para>  REV Zresult.S, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ReverseElement (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ReverseElement(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ReverseElement : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ReverseElement(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svrev[_u64](svuint64_t op)</para>
          <para>  REV Zresult.D, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ReverseElement16 (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ReverseElement16(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement16(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement16 (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ReverseElement16 : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ReverseElement16(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svrevh[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svrevh[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svrevh[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  REVH Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ReverseElement16 (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ReverseElement16(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement16(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement16 (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ReverseElement16 : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ReverseElement16(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svrevh[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrevh[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrevh[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  REVH Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ReverseElement16 (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ReverseElement16(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement16(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement16 (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ReverseElement16 : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ReverseElement16(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svrevh[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svrevh[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svrevh[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  REVH Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ReverseElement16 (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ReverseElement16(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement16(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement16 (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ReverseElement16 : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ReverseElement16(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svrevh[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrevh[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrevh[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  REVH Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ReverseElement32 (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ReverseElement32(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement32(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement32 (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ReverseElement32 : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ReverseElement32(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svrevw[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrevw[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrevw[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  REVW Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ReverseElement32 (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ReverseElement32(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement32(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement32 (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ReverseElement32 : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ReverseElement32(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svrevw[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrevw[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrevw[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  REVW Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ReverseElement8 (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ReverseElement8(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement8(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement8 (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ReverseElement8 : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ReverseElement8(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svrevb[_s16]_m(svint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svint16_t svrevb[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svint16_t svrevb[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  REVB Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ReverseElement8 (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ReverseElement8(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement8(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement8 (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ReverseElement8 : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ReverseElement8(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svrevb[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svrevb[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svrevb[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  REVB Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ReverseElement8 (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ReverseElement8(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement8(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement8 (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ReverseElement8 : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ReverseElement8(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svrevb[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrevb[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svrevb[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  REVB Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ReverseElement8 (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ReverseElement8(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement8(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement8 (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ReverseElement8 : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ReverseElement8(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svrevb[_u16]_m(svuint16_t inactive, svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svrevb[_u16]_x(svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svrevb[_u16]_z(svbool_t pg, svuint16_t op)</para>
          <para>  REVB Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ReverseElement8 (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ReverseElement8(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement8(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement8 (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ReverseElement8 : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ReverseElement8(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svrevb[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svrevb[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svrevb[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  REVB Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseElement8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ReverseElement8 (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ReverseElement8(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ReverseElement8(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseElement8 (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ReverseElement8 : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ReverseElement8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ReverseElement8(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svrevb[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrevb[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svrevb[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  REVB Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundAwayFromZero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; RoundAwayFromZero (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; RoundAwayFromZero(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundAwayFromZero(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundAwayFromZero (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member RoundAwayFromZero : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundAwayFromZero value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; RoundAwayFromZero(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrinta[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrinta[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrinta[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FRINTA Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundAwayFromZero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; RoundAwayFromZero (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; RoundAwayFromZero(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundAwayFromZero(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundAwayFromZero (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member RoundAwayFromZero : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundAwayFromZero value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; RoundAwayFromZero(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrinta[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrinta[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrinta[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FRINTA Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToNearest">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; RoundToNearest (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; RoundToNearest(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToNearest(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToNearest (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member RoundToNearest : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToNearest value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; RoundToNearest(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrintn[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintn[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintn[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FRINTN Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToNearest">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; RoundToNearest (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; RoundToNearest(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToNearest(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToNearest (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member RoundToNearest : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToNearest value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; RoundToNearest(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrintn[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintn[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintn[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FRINTN Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToNegativeInfinity">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; RoundToNegativeInfinity (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; RoundToNegativeInfinity(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToNegativeInfinity(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToNegativeInfinity (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member RoundToNegativeInfinity : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToNegativeInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; RoundToNegativeInfinity(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrintm[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintm[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintm[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FRINTM Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToNegativeInfinity">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; RoundToNegativeInfinity (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; RoundToNegativeInfinity(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToNegativeInfinity(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToNegativeInfinity (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member RoundToNegativeInfinity : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToNegativeInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; RoundToNegativeInfinity(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrintm[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintm[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintm[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FRINTM Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToPositiveInfinity">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; RoundToPositiveInfinity (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; RoundToPositiveInfinity(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToPositiveInfinity(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToPositiveInfinity (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member RoundToPositiveInfinity : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToPositiveInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; RoundToPositiveInfinity(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrintp[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintp[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintp[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FRINTP Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToPositiveInfinity">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; RoundToPositiveInfinity (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; RoundToPositiveInfinity(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToPositiveInfinity(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToPositiveInfinity (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member RoundToPositiveInfinity : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToPositiveInfinity value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; RoundToPositiveInfinity(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrintp[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintp[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintp[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FRINTP Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToZero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; RoundToZero (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; RoundToZero(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToZero(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToZero (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member RoundToZero : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToZero value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; RoundToZero(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svrintz[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintz[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svrintz[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FRINTZ Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundToZero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; RoundToZero (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; RoundToZero(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.RoundToZero(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoundToZero (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member RoundToZero : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.RoundToZero value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; RoundToZero(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svrintz[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintz[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svrintz[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FRINTZ Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingDecrementBy16BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingDecrementBy16BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy16BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy16BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqdech_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECH Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementBy16BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementBy16BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy16BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy16BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqdech_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECH Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SaturatingDecrementBy16BitElementCount (System.Numerics.Vector&lt;short&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SaturatingDecrementBy16BitElementCount(valuetype System.Numerics.Vector`1&lt;int16&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount(System.Numerics.Vector{System.Int16},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy16BitElementCount (value As Vector(Of Short), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy16BitElementCount : System.Numerics.Vector&lt;int16&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svint16_t svqdech_pat[_s16](svint16_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECH Ztied.H, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; SaturatingDecrementBy16BitElementCount (System.Numerics.Vector&lt;ushort&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; SaturatingDecrementBy16BitElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount(System.Numerics.Vector{System.UInt16},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy16BitElementCount (value As Vector(Of UShort), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy16BitElementCount : System.Numerics.Vector&lt;uint16&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svuint16_t svqdech_pat[_u16](svuint16_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECH Ztied.H, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingDecrementBy16BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingDecrementBy16BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy16BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy16BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqdech_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECH Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementBy16BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementBy16BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy16BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy16BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqdech_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECH Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingDecrementBy32BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingDecrementBy32BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy32BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy32BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqdecw_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECW Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementBy32BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementBy32BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy32BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy32BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqdecw_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECW Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SaturatingDecrementBy32BitElementCount (System.Numerics.Vector&lt;int&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SaturatingDecrementBy32BitElementCount(valuetype System.Numerics.Vector`1&lt;int32&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount(System.Numerics.Vector{System.Int32},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy32BitElementCount (value As Vector(Of Integer), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy32BitElementCount : System.Numerics.Vector&lt;int&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svint32_t svqdecw_pat[_s32](svint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECW Ztied.S, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; SaturatingDecrementBy32BitElementCount (System.Numerics.Vector&lt;uint&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; SaturatingDecrementBy32BitElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount(System.Numerics.Vector{System.UInt32},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy32BitElementCount (value As Vector(Of UInteger), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy32BitElementCount : System.Numerics.Vector&lt;uint32&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svuint32_t svqdecw_pat[_u32](svuint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECW Ztied.S, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingDecrementBy32BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingDecrementBy32BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy32BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy32BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqdecw_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECW Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementBy32BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementBy32BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy32BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy32BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqdecw_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECW Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingDecrementBy64BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingDecrementBy64BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy64BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy64BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqdecd_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECD Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementBy64BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementBy64BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy64BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy64BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqdecd_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECD Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SaturatingDecrementBy64BitElementCount (System.Numerics.Vector&lt;long&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SaturatingDecrementBy64BitElementCount(valuetype System.Numerics.Vector`1&lt;int64&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount(System.Numerics.Vector{System.Int64},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy64BitElementCount (value As Vector(Of Long), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy64BitElementCount : System.Numerics.Vector&lt;int64&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svint64_t svqdecd_pat[_s64](svint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECD Ztied.D, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; SaturatingDecrementBy64BitElementCount (System.Numerics.Vector&lt;ulong&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; SaturatingDecrementBy64BitElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount(System.Numerics.Vector{System.UInt64},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy64BitElementCount (value As Vector(Of ULong), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy64BitElementCount : System.Numerics.Vector&lt;uint64&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svuint64_t svqdecd_pat[_u64](svuint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECD Ztied.D, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingDecrementBy64BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingDecrementBy64BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy64BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy64BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqdecd_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECD Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementBy64BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementBy64BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy64BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy64BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqdecd_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECD Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingDecrementBy8BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingDecrementBy8BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy8BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy8BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqdecb_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECB Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementBy8BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementBy8BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy8BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy8BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqdecb_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQDECB Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingDecrementBy8BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingDecrementBy8BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy8BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy8BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqdecb_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECB Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementBy8BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementBy8BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementBy8BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementBy8BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqdecb_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQDECB Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (int value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Integer, from As Vector(Of Byte)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int * System.Numerics.Vector&lt;byte&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqdecp[_n_s32]_b8(int32_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.B, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (int value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Integer, from As Vector(Of UShort)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int * System.Numerics.Vector&lt;uint16&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqdecp[_n_s32]_b16(int32_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.H, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (int value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Integer, from As Vector(Of UInteger)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int * System.Numerics.Vector&lt;uint32&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqdecp[_n_s32]_b32(int32_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.S, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (int value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Integer, from As Vector(Of ULong)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int * System.Numerics.Vector&lt;uint64&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqdecp[_n_s32]_b64(int32_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.D, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (long value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Long, from As Vector(Of Byte)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int64 * System.Numerics.Vector&lt;byte&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqdecp[_n_s64]_b8(int64_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (long value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Long, from As Vector(Of UShort)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int64 * System.Numerics.Vector&lt;uint16&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqdecp[_n_s64]_b16(int64_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (long value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Long, from As Vector(Of UInteger)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int64 * System.Numerics.Vector&lt;uint32&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqdecp[_n_s64]_b32(int64_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingDecrementByActiveElementCount (long value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingDecrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Long, from As Vector(Of ULong)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : int64 * System.Numerics.Vector&lt;uint64&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingDecrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqdecp[_n_s64]_b64(int64_t op, svbool_t pg)</para>
          <para>  SQDECP Xtied, Pg.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SaturatingDecrementByActiveElementCount (System.Numerics.Vector&lt;short&gt; value, System.Numerics.Vector&lt;short&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SaturatingDecrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;int16&gt; value, valuetype System.Numerics.Vector`1&lt;int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Vector(Of Short), from As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; SaturatingDecrementByActiveElementCount(System::Numerics::Vector&lt;short&gt; value, System::Numerics::Vector&lt;short&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svint16_t svqdecp[_s16](svint16_t op, svbool_t pg)</para>
          <para>  SQDECP Ztied.H, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SaturatingDecrementByActiveElementCount (System.Numerics.Vector&lt;int&gt; value, System.Numerics.Vector&lt;int&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SaturatingDecrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;int32&gt; value, valuetype System.Numerics.Vector`1&lt;int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Vector(Of Integer), from As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; SaturatingDecrementByActiveElementCount(System::Numerics::Vector&lt;int&gt; value, System::Numerics::Vector&lt;int&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svint32_t svqdecp[_s32](svint32_t op, svbool_t pg)</para>
          <para>  SQDECP Ztied.S, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SaturatingDecrementByActiveElementCount (System.Numerics.Vector&lt;long&gt; value, System.Numerics.Vector&lt;long&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SaturatingDecrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;int64&gt; value, valuetype System.Numerics.Vector`1&lt;int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Vector(Of Long), from As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SaturatingDecrementByActiveElementCount(System::Numerics::Vector&lt;long&gt; value, System::Numerics::Vector&lt;long&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svint64_t svqdecp[_s64](svint64_t op, svbool_t pg)</para>
          <para>  SQDECP Ztied.D, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; SaturatingDecrementByActiveElementCount (System.Numerics.Vector&lt;ushort&gt; value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; SaturatingDecrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Vector(Of UShort), from As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; SaturatingDecrementByActiveElementCount(System::Numerics::Vector&lt;System::UInt16&gt; value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svuint16_t svqdecp[_u16](svuint16_t op, svbool_t pg)</para>
          <para>  UQDECP Ztied.H, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; SaturatingDecrementByActiveElementCount (System.Numerics.Vector&lt;uint&gt; value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; SaturatingDecrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Vector(Of UInteger), from As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; SaturatingDecrementByActiveElementCount(System::Numerics::Vector&lt;System::UInt32&gt; value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svuint32_t svqdecp[_u32](svuint32_t op, svbool_t pg)</para>
          <para>  UQDECP Ztied.S, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; SaturatingDecrementByActiveElementCount (System.Numerics.Vector&lt;ulong&gt; value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; SaturatingDecrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As Vector(Of ULong), from As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; SaturatingDecrementByActiveElementCount(System::Numerics::Vector&lt;System::UInt64&gt; value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svuint64_t svqdecp[_u64](svuint64_t op, svbool_t pg)</para>
          <para>  UQDECP Ztied.D, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (uint value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As UInteger, from As Vector(Of Byte)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;byte&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqdecp[_n_u32]_b8(uint32_t op, svbool_t pg)</para>
          <para>  UQDECP Wtied, Pg.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (uint value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As UInteger, from As Vector(Of UShort)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;uint16&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqdecp[_n_u32]_b16(uint32_t op, svbool_t pg)</para>
          <para>  UQDECP Wtied, Pg.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (uint value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As UInteger, from As Vector(Of UInteger)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;uint32&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqdecp[_n_u32]_b32(uint32_t op, svbool_t pg)</para>
          <para>  UQDECP Wtied, Pg.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (uint value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As UInteger, from As Vector(Of ULong)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;uint64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqdecp[_n_u32]_b64(uint32_t op, svbool_t pg)</para>
          <para>  UQDECP Wtied, Pg.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As ULong, from As Vector(Of Byte)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;byte&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqdecp[_n_u64]_b8(uint64_t op, svbool_t pg)</para>
          <para>  UQDECP Xtied, Pg.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As ULong, from As Vector(Of UShort)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;uint16&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqdecp[_n_u64]_b16(uint64_t op, svbool_t pg)</para>
          <para>  UQDECP Xtied, Pg.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As ULong, from As Vector(Of UInteger)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;uint32&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqdecp[_n_u64]_b32(uint64_t op, svbool_t pg)</para>
          <para>  UQDECP Xtied, Pg.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingDecrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingDecrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingDecrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingDecrementByActiveElementCount (value As ULong, from As Vector(Of ULong)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingDecrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;uint64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingDecrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingDecrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqdecp[_n_u64]_b64(uint64_t op, svbool_t pg)</para>
          <para>  UQDECP Xtied, Pg.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingIncrementBy16BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingIncrementBy16BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy16BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy16BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqinch_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCH Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementBy16BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementBy16BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy16BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy16BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqinch_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCH Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SaturatingIncrementBy16BitElementCount (System.Numerics.Vector&lt;short&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SaturatingIncrementBy16BitElementCount(valuetype System.Numerics.Vector`1&lt;int16&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount(System.Numerics.Vector{System.Int16},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy16BitElementCount (value As Vector(Of Short), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy16BitElementCount : System.Numerics.Vector&lt;int16&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svint16_t svqinch_pat[_s16](svint16_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCH Ztied.H, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; SaturatingIncrementBy16BitElementCount (System.Numerics.Vector&lt;ushort&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; SaturatingIncrementBy16BitElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount(System.Numerics.Vector{System.UInt16},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy16BitElementCount (value As Vector(Of UShort), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy16BitElementCount : System.Numerics.Vector&lt;uint16&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svuint16_t svqinch_pat[_u16](svuint16_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCH Ztied.H, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingIncrementBy16BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingIncrementBy16BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy16BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy16BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqinch_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCH Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy16BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementBy16BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementBy16BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy16BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy16BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy16BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqinch_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCH Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingIncrementBy32BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingIncrementBy32BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy32BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy32BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqincw_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCW Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementBy32BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementBy32BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy32BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy32BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqincw_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCW Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SaturatingIncrementBy32BitElementCount (System.Numerics.Vector&lt;int&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SaturatingIncrementBy32BitElementCount(valuetype System.Numerics.Vector`1&lt;int32&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount(System.Numerics.Vector{System.Int32},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy32BitElementCount (value As Vector(Of Integer), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy32BitElementCount : System.Numerics.Vector&lt;int&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svint32_t svqincw_pat[_s32](svint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCW Ztied.S, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; SaturatingIncrementBy32BitElementCount (System.Numerics.Vector&lt;uint&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; SaturatingIncrementBy32BitElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount(System.Numerics.Vector{System.UInt32},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy32BitElementCount (value As Vector(Of UInteger), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy32BitElementCount : System.Numerics.Vector&lt;uint32&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svuint32_t svqincw_pat[_u32](svuint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCW Ztied.S, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingIncrementBy32BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingIncrementBy32BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy32BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy32BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqincw_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCW Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy32BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementBy32BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementBy32BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy32BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy32BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy32BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqincw_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCW Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingIncrementBy64BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingIncrementBy64BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy64BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy64BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqincd_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCD Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementBy64BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementBy64BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy64BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy64BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqincd_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCD Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SaturatingIncrementBy64BitElementCount (System.Numerics.Vector&lt;long&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SaturatingIncrementBy64BitElementCount(valuetype System.Numerics.Vector`1&lt;int64&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount(System.Numerics.Vector{System.Int64},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy64BitElementCount (value As Vector(Of Long), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy64BitElementCount : System.Numerics.Vector&lt;int64&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svint64_t svqincd_pat[_s64](svint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCD Ztied.D, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; SaturatingIncrementBy64BitElementCount (System.Numerics.Vector&lt;ulong&gt; value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; SaturatingIncrementBy64BitElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount(System.Numerics.Vector{System.UInt64},System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy64BitElementCount (value As Vector(Of ULong), scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy64BitElementCount : System.Numerics.Vector&lt;uint64&gt; * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>svuint64_t svqincd_pat[_u64](svuint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCD Ztied.D, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingIncrementBy64BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingIncrementBy64BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy64BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy64BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqincd_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCD Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy64BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementBy64BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementBy64BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy64BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy64BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy64BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqincd_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCD Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static int SaturatingIncrementBy8BitElementCount (int value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaturatingIncrementBy8BitElementCount(int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount(System.Int32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy8BitElementCount (value As Integer, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Integer" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy8BitElementCount : int * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int32_t svqincb_pat[_n_s32](int32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCB Xtied, Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementBy8BitElementCount (long value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementBy8BitElementCount(int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount(System.Int64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy8BitElementCount (value As Long, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy8BitElementCount : int64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>int64_t svqincb_pat[_n_s64](int64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  SQINCB Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static uint SaturatingIncrementBy8BitElementCount (uint value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 SaturatingIncrementBy8BitElementCount(unsigned int32 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount(System.UInt32,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy8BitElementCount (value As UInteger, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As UInteger" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy8BitElementCount : uint32 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint32" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint32_t svqincb_pat[_n_u32](uint32_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCB Wtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementBy8BitElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementBy8BitElementCount (ulong value, byte scale, System.Runtime.Intrinsics.Arm.SveMaskPattern pattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementBy8BitElementCount(unsigned int64 value, unsigned int8 scale, valuetype System.Runtime.Intrinsics.Arm.SveMaskPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount(System.UInt64,System.Byte,System.Runtime.Intrinsics.Arm.SveMaskPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementBy8BitElementCount (value As ULong, scale As Byte, Optional pattern As SveMaskPattern = System.Runtime.Intrinsics.Arm.SveMaskPattern.All) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementBy8BitElementCount : uint64 * byte * System.Runtime.Intrinsics.Arm.SveMaskPattern -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementBy8BitElementCount (value, scale, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="scale" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="pattern" Type="System.Runtime.Intrinsics.Arm.SveMaskPattern">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>
          <para>uint64_t svqincb_pat[_n_u64](uint64_t op, enum svpattern pattern, uint64_t imm_factor)</para>
          <para>  UQINCB Xtied, pattern, MUL #imm_factor</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (int value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Integer, from As Vector(Of Byte)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int * System.Numerics.Vector&lt;byte&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqincp[_n_s32]_b8(int32_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.B, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (int value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Integer, from As Vector(Of UShort)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int * System.Numerics.Vector&lt;uint16&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqincp[_n_s32]_b16(int32_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.H, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (int value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Integer, from As Vector(Of UInteger)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int * System.Numerics.Vector&lt;uint32&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqincp[_n_s32]_b32(int32_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.S, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (int value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int32,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Integer, from As Vector(Of ULong)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int * System.Numerics.Vector&lt;uint64&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(int value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int32_t svqincp[_n_s32]_b64(int32_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.D, Wtied</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (long value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Long, from As Vector(Of Byte)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int64 * System.Numerics.Vector&lt;byte&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqincp[_n_s64]_b8(int64_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (long value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Long, from As Vector(Of UShort)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int64 * System.Numerics.Vector&lt;uint16&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqincp[_n_s64]_b16(int64_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (long value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Long, from As Vector(Of UInteger)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int64 * System.Numerics.Vector&lt;uint32&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqincp[_n_s64]_b32(int64_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static long SaturatingIncrementByActiveElementCount (long value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SaturatingIncrementByActiveElementCount(int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Int64,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Long, from As Vector(Of ULong)) As Long" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : int64 * System.Numerics.Vector&lt;uint64&gt; -&gt; int64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SaturatingIncrementByActiveElementCount(long value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>int64_t svqincp[_n_s64]_b64(int64_t op, svbool_t pg)</para>
          <para>  SQINCP Xtied, Pg.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SaturatingIncrementByActiveElementCount (System.Numerics.Vector&lt;short&gt; value, System.Numerics.Vector&lt;short&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SaturatingIncrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;int16&gt; value, valuetype System.Numerics.Vector`1&lt;int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Vector(Of Short), from As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; SaturatingIncrementByActiveElementCount(System::Numerics::Vector&lt;short&gt; value, System::Numerics::Vector&lt;short&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svint16_t svqincp[_s16](svint16_t op, svbool_t pg)</para>
          <para>  SQINCP Ztied.H, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SaturatingIncrementByActiveElementCount (System.Numerics.Vector&lt;int&gt; value, System.Numerics.Vector&lt;int&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SaturatingIncrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;int32&gt; value, valuetype System.Numerics.Vector`1&lt;int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Vector(Of Integer), from As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; SaturatingIncrementByActiveElementCount(System::Numerics::Vector&lt;int&gt; value, System::Numerics::Vector&lt;int&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svint32_t svqincp[_s32](svint32_t op, svbool_t pg)</para>
          <para>  SQINCP Ztied.S, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SaturatingIncrementByActiveElementCount (System.Numerics.Vector&lt;long&gt; value, System.Numerics.Vector&lt;long&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SaturatingIncrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;int64&gt; value, valuetype System.Numerics.Vector`1&lt;int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Vector(Of Long), from As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SaturatingIncrementByActiveElementCount(System::Numerics::Vector&lt;long&gt; value, System::Numerics::Vector&lt;long&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svint64_t svqincp[_s64](svint64_t op, svbool_t pg)</para>
          <para>  SQINCP Ztied.D, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; SaturatingIncrementByActiveElementCount (System.Numerics.Vector&lt;ushort&gt; value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; SaturatingIncrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Vector(Of UShort), from As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; SaturatingIncrementByActiveElementCount(System::Numerics::Vector&lt;System::UInt16&gt; value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svuint16_t svqincp[_u16](svuint16_t op, svbool_t pg)</para>
          <para>  UQINCP Ztied.H, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; SaturatingIncrementByActiveElementCount (System.Numerics.Vector&lt;uint&gt; value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; SaturatingIncrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Vector(Of UInteger), from As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; SaturatingIncrementByActiveElementCount(System::Numerics::Vector&lt;System::UInt32&gt; value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svuint32_t svqincp[_u32](svuint32_t op, svbool_t pg)</para>
          <para>  UQINCP Ztied.S, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; SaturatingIncrementByActiveElementCount (System.Numerics.Vector&lt;ulong&gt; value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; SaturatingIncrementByActiveElementCount(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As Vector(Of ULong), from As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; SaturatingIncrementByActiveElementCount(System::Numerics::Vector&lt;System::UInt64&gt; value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>svuint64_t svqincp[_u64](svuint64_t op, svbool_t pg)</para>
          <para>  UQINCP Ztied.D, Pg</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (uint value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As UInteger, from As Vector(Of Byte)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;byte&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqincp[_n_u32]_b8(uint32_t op, svbool_t pg)</para>
          <para>  UQINCP Wtied, Pg.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (uint value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As UInteger, from As Vector(Of UShort)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;uint16&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqincp[_n_u32]_b16(uint32_t op, svbool_t pg)</para>
          <para>  UQINCP Wtied, Pg.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (uint value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As UInteger, from As Vector(Of UInteger)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;uint32&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqincp[_n_u32]_b32(uint32_t op, svbool_t pg)</para>
          <para>  UQINCP Wtied, Pg.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (uint value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int32 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt32,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As UInteger, from As Vector(Of ULong)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint32 * System.Numerics.Vector&lt;uint64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt32 value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint32_t svqincp[_n_u32]_b64(uint32_t op, svbool_t pg)</para>
          <para>  UQINCP Wtied, Pg.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;byte&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As ULong, from As Vector(Of Byte)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;byte&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::Byte&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqincp[_n_u64]_b8(uint64_t op, svbool_t pg)</para>
          <para>  UQINCP Xtied, Pg.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;ushort&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As ULong, from As Vector(Of UShort)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;uint16&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::UInt16&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqincp[_n_u64]_b16(uint64_t op, svbool_t pg)</para>
          <para>  UQINCP Xtied, Pg.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;uint&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As ULong, from As Vector(Of UInteger)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;uint32&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::UInt32&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqincp[_n_u64]_b32(uint64_t op, svbool_t pg)</para>
          <para>  UQINCP Xtied, Pg.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaturatingIncrementByActiveElementCount">
      <MemberSignature Language="C#" Value="public static ulong SaturatingIncrementByActiveElementCount (ulong value, System.Numerics.Vector&lt;ulong&gt; from);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 SaturatingIncrementByActiveElementCount(unsigned int64 value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount(System.UInt64,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaturatingIncrementByActiveElementCount (value As ULong, from As Vector(Of ULong)) As ULong" />
      <MemberSignature Language="F#" Value="static member SaturatingIncrementByActiveElementCount : uint64 * System.Numerics.Vector&lt;uint64&gt; -&gt; uint64" Usage="System.Runtime.Intrinsics.Arm.Sve.SaturatingIncrementByActiveElementCount (value, from)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 SaturatingIncrementByActiveElementCount(System::UInt64 value, System::Numerics::Vector&lt;System::UInt64&gt; from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="from" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="from">To be added.</param>
        <summary>
          <para>uint64_t svqincp[_n_u64]_b64(uint64_t op, svbool_t pg)</para>
          <para>  UQINCP Xtied, Pg.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Scale (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Scale(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scale(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Scale (left As Vector(Of Double), right As Vector(Of Long)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Scale : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Scale (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Scale(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svscale[_f64]_m(svbool_t pg, svfloat64_t op1, svint64_t op2)</para>
          <para>svfloat64_t svscale[_f64]_x(svbool_t pg, svfloat64_t op1, svint64_t op2)</para>
          <para>svfloat64_t svscale[_f64]_z(svbool_t pg, svfloat64_t op1, svint64_t op2)</para>
          <para>  FSCALE Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Scale (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Scale(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scale(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Scale (left As Vector(Of Single), right As Vector(Of Integer)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Scale : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Scale (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Scale(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svscale[_f32]_m(svbool_t pg, svfloat32_t op1, svint32_t op2)</para>
          <para>svfloat32_t svscale[_f32]_x(svbool_t pg, svfloat32_t op1, svint32_t op2)</para>
          <para>svfloat32_t svscale[_f32]_z(svbool_t pg, svfloat32_t op1, svint32_t op2)</para>
          <para>  FSCALE Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter (mask As Vector(Of Double), addresses As Vector(Of ULong), data As Vector(Of Double))" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;double&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter[_u64base_f64](svbool_t pg, svuint64_t bases, svfloat64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter (mask As Vector(Of Long), addresses As Vector(Of ULong), data As Vector(Of Long))" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter[_u64base_s64](svbool_t pg, svuint64_t bases, svint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter (mask As Vector(Of ULong), addresses As Vector(Of ULong), data As Vector(Of ULong))" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter[_u64base_u64](svbool_t pg, svuint64_t bases, svuint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;long&gt; indicies, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indicies, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;double&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;long&gt; indicies, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[s64]offset[_f64](svbool_t pg, float64_t *base, svint64_t offsets, svfloat64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;ulong&gt; indicies, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indicies, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;double&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;System::UInt64&gt; indicies, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[u64]offset[_f64](svbool_t pg, float64_t *base, svuint64_t offsets, svfloat64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;int&gt; indicies, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indicies, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;int&gt; indicies, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[s32]offset[_s32](svbool_t pg, int32_t *base, svint32_t offsets, svint32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;uint&gt; indicies, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indicies, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt32&gt; indicies, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[u32]offset[_s32](svbool_t pg, int32_t *base, svuint32_t offsets, svint32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;long&gt; indicies, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indicies, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;long&gt; indicies, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[s64]offset[_s64](svbool_t pg, int64_t *base, svint64_t offsets, svint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;ulong&gt; indicies, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indicies, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;System::UInt64&gt; indicies, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[u64]offset[_s64](svbool_t pg, int64_t *base, svuint64_t offsets, svint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;int&gt; indicies, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indicies, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;single&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;int&gt; indicies, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[s32]offset[_f32](svbool_t pg, float32_t *base, svint32_t offsets, svfloat32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;uint&gt; indicies, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indicies, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;single&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;System::UInt32&gt; indicies, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[u32]offset[_f32](svbool_t pg, float32_t *base, svuint32_t offsets, svfloat32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;int&gt; indicies, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; indicies, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;int&gt; indicies, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[s32]offset[_u32](svbool_t pg, uint32_t *base, svint32_t offsets, svuint32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; indicies, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indicies, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; indicies, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[u32]offset[_u32](svbool_t pg, uint32_t *base, svuint32_t offsets, svuint32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;long&gt; indicies, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; indicies, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;long&gt; indicies, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[s64]offset[_u64](svbool_t pg, uint64_t *base, svint64_t offsets, svuint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter">
      <MemberSignature Language="C#" Value="public static void Scatter (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;ulong&gt; indicies, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indicies, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter (mask, address, indicies, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;System::UInt64&gt; indicies, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="indicies" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="indicies">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1_scatter_[u64]offset[_u64](svbool_t pg, uint64_t *base, svuint64_t offsets, svuint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitNarrowing (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitNarrowing(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter16BitNarrowing (mask As Vector(Of Long), addresses As Vector(Of ULong), data As Vector(Of Long))" />
      <MemberSignature Language="F#" Value="static member Scatter16BitNarrowing : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitNarrowing (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitNarrowing(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter[_u64base_s64](svbool_t pg, svuint64_t bases, svint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitNarrowing(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter16BitNarrowing (mask As Vector(Of ULong), addresses As Vector(Of ULong), data As Vector(Of ULong))" />
      <MemberSignature Language="F#" Value="static member Scatter16BitNarrowing : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitNarrowing (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter[_u64base_u64](svbool_t pg, svuint64_t bases, svuint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; offsets, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; offsets, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[s32]offset[_s32](svbool_t pg, int16_t *base, svint32_t offsets, svint32_t data)</para>
          <para>  ST1H Zdata.S, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;uint&gt; offsets, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[u32]offset[_s32](svbool_t pg, int16_t *base, svuint32_t offsets, svint32_t data)</para>
          <para>  ST1H Zdata.S, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; offsets, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; offsets, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[s64]offset[_s64](svbool_t pg, int16_t *base, svint64_t offsets, svint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[u64]offset[_s64](svbool_t pg, int16_t *base, svuint64_t offsets, svint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;int&gt; offsets, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;int&gt; offsets, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[s32]offset[_u32](svbool_t pg, uint16_t *base, svint32_t offsets, svuint32_t data)</para>
          <para>  ST1H Zdata.S, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; offsets, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[u32]offset[_u32](svbool_t pg, uint16_t *base, svuint32_t offsets, svuint32_t data)</para>
          <para>  ST1H Zdata.S, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;long&gt; offsets, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;long&gt; offsets, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[s64]offset[_u64](svbool_t pg, uint16_t *base, svint64_t offsets, svuint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter16BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter16BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter16BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter16BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter16BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter16BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h_scatter_[u64]offset[_u64](svbool_t pg, uint16_t *base, svuint64_t offsets, svuint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter32BitNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter32BitNarrowing (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter32BitNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter32BitNarrowing(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter32BitNarrowing (mask As Vector(Of Long), addresses As Vector(Of ULong), data As Vector(Of Long))" />
      <MemberSignature Language="F#" Value="static member Scatter32BitNarrowing : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter32BitNarrowing (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter32BitNarrowing(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w_scatter[_u64base_s64](svbool_t pg, svuint64_t bases, svint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter32BitNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter32BitNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter32BitNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter32BitNarrowing(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter32BitNarrowing (mask As Vector(Of ULong), addresses As Vector(Of ULong), data As Vector(Of ULong))" />
      <MemberSignature Language="F#" Value="static member Scatter32BitNarrowing : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter32BitNarrowing (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter32BitNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w_scatter[_u64base_u64](svbool_t pg, svuint64_t bases, svuint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter32BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter32BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; offsets, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter32BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter32BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter32BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; offsets, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w_scatter_[s64]offset[_s64](svbool_t pg, int32_t *base, svint64_t offsets, svint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter32BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter32BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter32BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter32BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter32BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w_scatter_[u64]offset[_s64](svbool_t pg, int32_t *base, svuint64_t offsets, svint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter32BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter32BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;long&gt; offsets, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter32BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter32BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter32BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;long&gt; offsets, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w_scatter_[s64]offset[_u64](svbool_t pg, uint32_t *base, svint64_t offsets, svuint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter32BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter32BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter32BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter32BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter32BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter32BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w_scatter_[u64]offset[_u64](svbool_t pg, uint32_t *base, svuint64_t offsets, svuint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitNarrowing (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitNarrowing(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter8BitNarrowing (mask As Vector(Of Long), addresses As Vector(Of ULong), data As Vector(Of Long))" />
      <MemberSignature Language="F#" Value="static member Scatter8BitNarrowing : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitNarrowing (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitNarrowing(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter[_u64base_s64](svbool_t pg, svuint64_t bases, svint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; addresses, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; addresses, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitNarrowing(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Scatter8BitNarrowing (mask As Vector(Of ULong), addresses As Vector(Of ULong), data As Vector(Of ULong))" />
      <MemberSignature Language="F#" Value="static member Scatter8BitNarrowing : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitNarrowing (mask, addresses, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; addresses, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="addresses" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="addresses">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter[_u64base_u64](svbool_t pg, svuint64_t bases, svuint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Zbases.D, #0]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;int&gt; mask, sbyte* address, System.Numerics.Vector&lt;int&gt; offsets, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int32},System.SByte*,System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address, System::Numerics::Vector&lt;int&gt; offsets, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[s32]offset[_s32](svbool_t pg, int8_t *base, svint32_t offsets, svint32_t data)</para>
          <para>  ST1B Zdata.S, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;int&gt; mask, sbyte* address, System.Numerics.Vector&lt;uint&gt; offsets, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int32},System.SByte*,System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[u32]offset[_s32](svbool_t pg, int8_t *base, svuint32_t offsets, svint32_t data)</para>
          <para>  ST1B Zdata.S, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;long&gt; mask, sbyte* address, System.Numerics.Vector&lt;long&gt; offsets, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int64},System.SByte*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address, System::Numerics::Vector&lt;long&gt; offsets, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[s64]offset[_s64](svbool_t pg, int8_t *base, svint64_t offsets, svint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;long&gt; mask, sbyte* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.Int64},System.SByte*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[u64]offset[_s64](svbool_t pg, int8_t *base, svuint64_t offsets, svint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;uint&gt; mask, byte* address, System.Numerics.Vector&lt;int&gt; offsets, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt32},System.Byte*,System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address, System::Numerics::Vector&lt;int&gt; offsets, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[s32]offset[_u32](svbool_t pg, uint8_t *base, svint32_t offsets, svuint32_t data)</para>
          <para>  ST1B Zdata.S, Pg, [Xbase, Zoffsets.S, SXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;uint&gt; mask, byte* address, System.Numerics.Vector&lt;uint&gt; offsets, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt32},System.Byte*,System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt32&gt; offsets, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[u32]offset[_u32](svbool_t pg, uint8_t *base, svuint32_t offsets, svuint32_t data)</para>
          <para>  ST1B Zdata.S, Pg, [Xbase, Zoffsets.S, UXTW]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, byte* address, System.Numerics.Vector&lt;long&gt; offsets, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt64},System.Byte*,System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address, System::Numerics::Vector&lt;long&gt; offsets, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[s64]offset[_u64](svbool_t pg, uint8_t *base, svint64_t offsets, svuint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scatter8BitWithByteOffsetsNarrowing">
      <MemberSignature Language="C#" Value="public static void Scatter8BitWithByteOffsetsNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, byte* address, System.Numerics.Vector&lt;ulong&gt; offsets, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scatter8BitWithByteOffsetsNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; offsets, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing(System.Numerics.Vector{System.UInt64},System.Byte*,System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member Scatter8BitWithByteOffsetsNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.Scatter8BitWithByteOffsetsNarrowing (mask, address, offsets, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Scatter8BitWithByteOffsetsNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt64&gt; offsets, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="offsets" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="offsets">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b_scatter_[u64]offset[_u64](svbool_t pg, uint8_t *base, svuint64_t offsets, svuint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Xbase, Zoffsets.D]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of Byte))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;byte&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of Short))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;int16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of Integer))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of Long))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of SByte))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;sbyte&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of UShort))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;uint16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of UInteger))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFfr">
      <MemberSignature Language="C#" Value="public static void SetFfr (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFfr(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SetFfr(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFfr (value As Vector(Of ULong))" />
      <MemberSignature Language="F#" Value="static member SetFfr : System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.SetFfr value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFfr(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ShiftLeftLogical (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svlsl[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svlsl[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svlsl[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  LSL Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ShiftLeftLogical (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of Byte), right As Vector(Of ULong)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svlsl_wide[_u8]_m(svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>svuint8_t svlsl_wide[_u8]_x(svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.B, Pg/M, Ztied1.B, Zop2.D</para>
          <para>  LSL Zresult.B, Zop1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ShiftLeftLogical (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of Short), right As Vector(Of UShort)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ShiftLeftLogical(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svlsl[_s16]_m(svbool_t pg, svint16_t op1, svuint16_t op2)</para>
          <para>svint16_t svlsl[_s16]_x(svbool_t pg, svint16_t op1, svuint16_t op2)</para>
          <para>svint16_t svlsl[_s16]_z(svbool_t pg, svint16_t op1, svuint16_t op2)</para>
          <para>  LSL Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ShiftLeftLogical (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of Short), right As Vector(Of ULong)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ShiftLeftLogical(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svlsl_wide[_s16]_m(svbool_t pg, svint16_t op1, svuint64_t op2)</para>
          <para>svint16_t svlsl_wide[_s16]_x(svbool_t pg, svint16_t op1, svuint64_t op2)</para>
          <para>svint16_t svlsl_wide[_s16]_z(svbool_t pg, svint16_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.H, Pg/M, Ztied1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ShiftLeftLogical (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of Integer), right As Vector(Of UInteger)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ShiftLeftLogical(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svlsl[_s32]_m(svbool_t pg, svint32_t op1, svuint32_t op2)</para>
          <para>svint32_t svlsl[_s32]_x(svbool_t pg, svint32_t op1, svuint32_t op2)</para>
          <para>svint32_t svlsl[_s32]_z(svbool_t pg, svint32_t op1, svuint32_t op2)</para>
          <para>  LSL Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ShiftLeftLogical (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of Integer), right As Vector(Of ULong)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ShiftLeftLogical(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svlsl_wide[_s32]_m(svbool_t pg, svint32_t op1, svuint64_t op2)</para>
          <para>svint32_t svlsl_wide[_s32]_x(svbool_t pg, svint32_t op1, svuint64_t op2)</para>
          <para>svint32_t svlsl_wide[_s32]_z(svbool_t pg, svint32_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.S, Pg/M, Ztied1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ShiftLeftLogical (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of Long), right As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ShiftLeftLogical(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svlsl[_s64]_m(svbool_t pg, svint64_t op1, svuint64_t op2)</para>
          <para>svint64_t svlsl[_s64]_x(svbool_t pg, svint64_t op1, svuint64_t op2)</para>
          <para>svint64_t svlsl[_s64]_z(svbool_t pg, svint64_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ShiftLeftLogical (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of SByte), right As Vector(Of Byte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svlsl[_s8]_m(svbool_t pg, svint8_t op1, svuint8_t op2)</para>
          <para>svint8_t svlsl[_s8]_x(svbool_t pg, svint8_t op1, svuint8_t op2)</para>
          <para>svint8_t svlsl[_s8]_z(svbool_t pg, svint8_t op1, svuint8_t op2)</para>
          <para>  LSL Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ShiftLeftLogical (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of SByte), right As Vector(Of ULong)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svlsl_wide[_s8]_m(svbool_t pg, svint8_t op1, svuint64_t op2)</para>
          <para>svint8_t svlsl_wide[_s8]_x(svbool_t pg, svint8_t op1, svuint64_t op2)</para>
          <para>svint8_t svlsl_wide[_s8]_z(svbool_t pg, svint8_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.B, Pg/M, Ztied1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ShiftLeftLogical (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svlsl[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svlsl[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svlsl[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  LSL Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ShiftLeftLogical (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of UShort), right As Vector(Of ULong)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svlsl_wide[_u16]_m(svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>svuint16_t svlsl_wide[_u16]_x(svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>svuint16_t svlsl_wide[_u16]_z(svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.H, Pg/M, Ztied1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ShiftLeftLogical (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svlsl[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svlsl[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svlsl[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  LSL Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ShiftLeftLogical (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of UInteger), right As Vector(Of ULong)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svlsl_wide[_u32]_m(svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>svuint32_t svlsl_wide[_u32]_x(svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>svuint32_t svlsl_wide[_u32]_z(svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.S, Pg/M, Ztied1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ShiftLeftLogical (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ShiftLeftLogical(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftLogical (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ShiftLeftLogical : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftLeftLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ShiftLeftLogical(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svlsl[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svlsl[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svlsl[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  LSL Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ShiftRightArithmetic (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ShiftRightArithmetic(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmetic (left As Vector(Of Short), right As Vector(Of UShort)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ShiftRightArithmetic(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svasr[_s16]_m(svbool_t pg, svint16_t op1, svuint16_t op2)</para>
          <para>svint16_t svasr[_s16]_x(svbool_t pg, svint16_t op1, svuint16_t op2)</para>
          <para>svint16_t svasr[_s16]_z(svbool_t pg, svint16_t op1, svuint16_t op2)</para>
          <para>  ASR Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ShiftRightArithmetic (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ShiftRightArithmetic(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmetic (left As Vector(Of Short), right As Vector(Of ULong)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ShiftRightArithmetic(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svasr_wide[_s16]_m(svbool_t pg, svint16_t op1, svuint64_t op2)</para>
          <para>svint16_t svasr_wide[_s16]_x(svbool_t pg, svint16_t op1, svuint64_t op2)</para>
          <para>svint16_t svasr_wide[_s16]_z(svbool_t pg, svint16_t op1, svuint64_t op2)</para>
          <para>  ASR Ztied1.H, Pg/M, Ztied1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ShiftRightArithmetic (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ShiftRightArithmetic(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmetic (left As Vector(Of Integer), right As Vector(Of UInteger)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ShiftRightArithmetic(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svasr[_s32]_m(svbool_t pg, svint32_t op1, svuint32_t op2)</para>
          <para>svint32_t svasr[_s32]_x(svbool_t pg, svint32_t op1, svuint32_t op2)</para>
          <para>svint32_t svasr[_s32]_z(svbool_t pg, svint32_t op1, svuint32_t op2)</para>
          <para>  ASR Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ShiftRightArithmetic (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ShiftRightArithmetic(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmetic (left As Vector(Of Integer), right As Vector(Of ULong)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ShiftRightArithmetic(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svasr_wide[_s32]_m(svbool_t pg, svint32_t op1, svuint64_t op2)</para>
          <para>svint32_t svasr_wide[_s32]_x(svbool_t pg, svint32_t op1, svuint64_t op2)</para>
          <para>svint32_t svasr_wide[_s32]_z(svbool_t pg, svint32_t op1, svuint64_t op2)</para>
          <para>  ASR Ztied1.S, Pg/M, Ztied1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ShiftRightArithmetic (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ShiftRightArithmetic(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmetic (left As Vector(Of Long), right As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ShiftRightArithmetic(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svasr[_s64]_m(svbool_t pg, svint64_t op1, svuint64_t op2)</para>
          <para>svint64_t svasr[_s64]_x(svbool_t pg, svint64_t op1, svuint64_t op2)</para>
          <para>svint64_t svasr[_s64]_z(svbool_t pg, svint64_t op1, svuint64_t op2)</para>
          <para>  ASR Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ShiftRightArithmetic (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ShiftRightArithmetic(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmetic (left As Vector(Of SByte), right As Vector(Of Byte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ShiftRightArithmetic(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svasr[_s8]_m(svbool_t pg, svint8_t op1, svuint8_t op2)</para>
          <para>svint8_t svasr[_s8]_x(svbool_t pg, svint8_t op1, svuint8_t op2)</para>
          <para>svint8_t svasr[_s8]_z(svbool_t pg, svint8_t op1, svuint8_t op2)</para>
          <para>  ASR Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmetic">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ShiftRightArithmetic (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ShiftRightArithmetic(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmetic (left As Vector(Of SByte), right As Vector(Of ULong)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmetic : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmetic (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ShiftRightArithmetic(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svasr_wide[_s8]_m(svbool_t pg, svint8_t op1, svuint64_t op2)</para>
          <para>svint8_t svasr_wide[_s8]_x(svbool_t pg, svint8_t op1, svuint64_t op2)</para>
          <para>svint8_t svasr_wide[_s8]_z(svbool_t pg, svint8_t op1, svuint64_t op2)</para>
          <para>  ASR Ztied1.B, Pg/M, Ztied1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmeticForDivide">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ShiftRightArithmeticForDivide (System.Numerics.Vector&lt;short&gt; value, byte control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ShiftRightArithmeticForDivide(valuetype System.Numerics.Vector`1&lt;int16&gt; value, unsigned int8 control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide(System.Numerics.Vector{System.Int16},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmeticForDivide (value As Vector(Of Short), control As Byte) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmeticForDivide : System.Numerics.Vector&lt;int16&gt; * byte -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide (value, control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ShiftRightArithmeticForDivide(System::Numerics::Vector&lt;short&gt; value, System::Byte control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="control" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=16, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="control">To be added.</param>
        <summary>
          <para>svint16_t svasrd[_n_s16]_m(svbool_t pg, svint16_t op1, uint64_t imm2)</para>
          <para>svint16_t svasrd[_n_s16]_x(svbool_t pg, svint16_t op1, uint64_t imm2)</para>
          <para>svint16_t svasrd[_n_s16]_z(svbool_t pg, svint16_t op1, uint64_t imm2)</para>
          <para>  ASRD Ztied1.H, Pg/M, Ztied1.H, #imm2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmeticForDivide">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ShiftRightArithmeticForDivide (System.Numerics.Vector&lt;int&gt; value, byte control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ShiftRightArithmeticForDivide(valuetype System.Numerics.Vector`1&lt;int32&gt; value, unsigned int8 control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide(System.Numerics.Vector{System.Int32},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmeticForDivide (value As Vector(Of Integer), control As Byte) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmeticForDivide : System.Numerics.Vector&lt;int&gt; * byte -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide (value, control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ShiftRightArithmeticForDivide(System::Numerics::Vector&lt;int&gt; value, System::Byte control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="control" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=32, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=32, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="control">To be added.</param>
        <summary>
          <para>svint32_t svasrd[_n_s32]_m(svbool_t pg, svint32_t op1, uint64_t imm2)</para>
          <para>svint32_t svasrd[_n_s32]_x(svbool_t pg, svint32_t op1, uint64_t imm2)</para>
          <para>svint32_t svasrd[_n_s32]_z(svbool_t pg, svint32_t op1, uint64_t imm2)</para>
          <para>  ASRD Ztied1.S, Pg/M, Ztied1.S, #imm2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmeticForDivide">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ShiftRightArithmeticForDivide (System.Numerics.Vector&lt;long&gt; value, byte control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ShiftRightArithmeticForDivide(valuetype System.Numerics.Vector`1&lt;int64&gt; value, unsigned int8 control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide(System.Numerics.Vector{System.Int64},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmeticForDivide (value As Vector(Of Long), control As Byte) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmeticForDivide : System.Numerics.Vector&lt;int64&gt; * byte -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide (value, control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ShiftRightArithmeticForDivide(System::Numerics::Vector&lt;long&gt; value, System::Byte control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="control" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=64, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=64, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="control">To be added.</param>
        <summary>
          <para>svint64_t svasrd[_n_s64]_m(svbool_t pg, svint64_t op1, uint64_t imm2)</para>
          <para>svint64_t svasrd[_n_s64]_x(svbool_t pg, svint64_t op1, uint64_t imm2)</para>
          <para>svint64_t svasrd[_n_s64]_z(svbool_t pg, svint64_t op1, uint64_t imm2)</para>
          <para>  ASRD Ztied1.D, Pg/M, Ztied1.D, #imm2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightArithmeticForDivide">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ShiftRightArithmeticForDivide (System.Numerics.Vector&lt;sbyte&gt; value, byte control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ShiftRightArithmeticForDivide(valuetype System.Numerics.Vector`1&lt;int8&gt; value, unsigned int8 control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide(System.Numerics.Vector{System.SByte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightArithmeticForDivide (value As Vector(Of SByte), control As Byte) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightArithmeticForDivide : System.Numerics.Vector&lt;sbyte&gt; * byte -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightArithmeticForDivide (value, control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ShiftRightArithmeticForDivide(System::Numerics::Vector&lt;System::SByte&gt; value, System::Byte control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="control" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=8, Min=1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=8, Min=1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="control">To be added.</param>
        <summary>
          <para>svint8_t svasrd[_n_s8]_m(svbool_t pg, svint8_t op1, uint64_t imm2)</para>
          <para>svint8_t svasrd[_n_s8]_x(svbool_t pg, svint8_t op1, uint64_t imm2)</para>
          <para>svint8_t svasrd[_n_s8]_z(svbool_t pg, svint8_t op1, uint64_t imm2)</para>
          <para>  ASRD Ztied1.B, Pg/M, Ztied1.B, #imm2</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ShiftRightLogical (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ShiftRightLogical(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightLogical (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ShiftRightLogical(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svlsr[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svlsr[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svlsr[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  LSR Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ShiftRightLogical (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ShiftRightLogical(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightLogical (left As Vector(Of Byte), right As Vector(Of ULong)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ShiftRightLogical(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svlsr_wide[_u8]_m(svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>svuint8_t svlsr_wide[_u8]_x(svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>svuint8_t svlsr_wide[_u8]_z(svbool_t pg, svuint8_t op1, svuint64_t op2)</para>
          <para>  LSR Ztied1.B, Pg/M, Ztied1.B, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ShiftRightLogical (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ShiftRightLogical(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightLogical (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ShiftRightLogical(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svlsr[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svlsr[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svlsr[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  LSR Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ShiftRightLogical (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ShiftRightLogical(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightLogical (left As Vector(Of UShort), right As Vector(Of ULong)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ShiftRightLogical(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svlsr_wide[_u16]_m(svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>svuint16_t svlsr_wide[_u16]_x(svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>svuint16_t svlsr_wide[_u16]_z(svbool_t pg, svuint16_t op1, svuint64_t op2)</para>
          <para>  LSR Ztied1.H, Pg/M, Ztied1.H, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ShiftRightLogical (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ShiftRightLogical(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightLogical (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ShiftRightLogical(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svlsr[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svlsr[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svlsr[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  LSR Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ShiftRightLogical (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ShiftRightLogical(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightLogical (left As Vector(Of UInteger), right As Vector(Of ULong)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ShiftRightLogical(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svlsr_wide[_u32]_m(svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>svuint32_t svlsr_wide[_u32]_x(svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>svuint32_t svlsr_wide[_u32]_z(svbool_t pg, svuint32_t op1, svuint64_t op2)</para>
          <para>  LSR Ztied1.S, Pg/M, Ztied1.S, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightLogical">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ShiftRightLogical (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ShiftRightLogical(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightLogical (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ShiftRightLogical : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ShiftRightLogical (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ShiftRightLogical(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svlsr[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svlsr[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svlsr[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  LSR Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtend16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SignExtend16 (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SignExtend16(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtend16(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtend16 (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SignExtend16 : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtend16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; SignExtend16(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svexth[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svexth[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svexth[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  SXTH Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtend16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SignExtend16 (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SignExtend16(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtend16(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtend16 (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SignExtend16 : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtend16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SignExtend16(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svexth[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svexth[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svexth[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  SXTH Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtend32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SignExtend32 (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SignExtend32(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtend32(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtend32 (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SignExtend32 : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtend32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SignExtend32(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svextw[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svextw[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svextw[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  SXTW Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtend8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SignExtend8 (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SignExtend8(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtend8(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtend8 (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SignExtend8 : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtend8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; SignExtend8(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svextb[_s16]_m(svint16_t inactive, svbool_t pg, svint16_t op)</para>
          <para>svint16_t svextb[_s16]_x(svbool_t pg, svint16_t op)</para>
          <para>svint16_t svextb[_s16]_z(svbool_t pg, svint16_t op)</para>
          <para>  SXTB Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtend8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SignExtend8 (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SignExtend8(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtend8(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtend8 (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SignExtend8 : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtend8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; SignExtend8(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svextb[_s32]_m(svint32_t inactive, svbool_t pg, svint32_t op)</para>
          <para>svint32_t svextb[_s32]_x(svbool_t pg, svint32_t op)</para>
          <para>svint32_t svextb[_s32]_z(svbool_t pg, svint32_t op)</para>
          <para>  SXTB Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtend8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SignExtend8 (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SignExtend8(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtend8(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtend8 (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SignExtend8 : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtend8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SignExtend8(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svextb[_s64]_m(svint64_t inactive, svbool_t pg, svint64_t op)</para>
          <para>svint64_t svextb[_s64]_x(svbool_t pg, svint64_t op)</para>
          <para>svint64_t svextb[_s64]_z(svbool_t pg, svint64_t op)</para>
          <para>  SXTB Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtendWideningLower">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SignExtendWideningLower (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SignExtendWideningLower(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningLower(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtendWideningLower (value As Vector(Of Short)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SignExtendWideningLower : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningLower value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; SignExtendWideningLower(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svunpklo[_s32](svint16_t op)</para>
          <para>  SUNPKLO Zresult.S, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtendWideningLower">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SignExtendWideningLower (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SignExtendWideningLower(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningLower(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtendWideningLower (value As Vector(Of Integer)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SignExtendWideningLower : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningLower value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SignExtendWideningLower(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svunpklo[_s64](svint32_t op)</para>
          <para>  SUNPKLO Zresult.D, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtendWideningLower">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SignExtendWideningLower (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SignExtendWideningLower(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningLower(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtendWideningLower (value As Vector(Of SByte)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SignExtendWideningLower : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningLower value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; SignExtendWideningLower(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svunpklo[_s16](svint8_t op)</para>
          <para>  SUNPKLO Zresult.H, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtendWideningUpper">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SignExtendWideningUpper (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SignExtendWideningUpper(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningUpper(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtendWideningUpper (value As Vector(Of Short)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SignExtendWideningUpper : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningUpper value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; SignExtendWideningUpper(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint32_t svunpkhi[_s32](svint16_t op)</para>
          <para>  SUNPKHI Zresult.S, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtendWideningUpper">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SignExtendWideningUpper (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SignExtendWideningUpper(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningUpper(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtendWideningUpper (value As Vector(Of Integer)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SignExtendWideningUpper : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningUpper value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SignExtendWideningUpper(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint64_t svunpkhi[_s64](svint32_t op)</para>
          <para>  SUNPKHI Zresult.D, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtendWideningUpper">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SignExtendWideningUpper (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SignExtendWideningUpper(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningUpper(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtendWideningUpper (value As Vector(Of SByte)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SignExtendWideningUpper : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SignExtendWideningUpper value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; SignExtendWideningUpper(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svint16_t svunpkhi[_s16](svint8_t op)</para>
          <para>  SUNPKHI Zresult.H, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Splice (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Splice(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of Byte), left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Splice(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svsplice[_u8](svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  SPLICE Ztied1.B, Pg, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Splice (System.Numerics.Vector&lt;double&gt; mask, System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Splice(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of Double), left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Splice(System::Numerics::Vector&lt;double&gt; mask, System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svsplice[_f64](svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  SPLICE Ztied1.D, Pg, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Splice (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Splice(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of Short), left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Splice(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svsplice[_s16](svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  SPLICE Ztied1.H, Pg, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Splice (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Splice(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of Integer), left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Splice(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svsplice[_s32](svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  SPLICE Ztied1.S, Pg, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Splice (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Splice(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of Long), left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Splice(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svsplice[_s64](svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  SPLICE Ztied1.D, Pg, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Splice (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Splice(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of SByte), left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Splice(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svsplice[_s8](svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  SPLICE Ztied1.B, Pg, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Splice (System.Numerics.Vector&lt;float&gt; mask, System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Splice(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of Single), left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Splice(System::Numerics::Vector&lt;float&gt; mask, System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svsplice[_f32](svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  SPLICE Ztied1.S, Pg, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Splice (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Splice(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of UShort), left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Splice(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svsplice[_u16](svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  SPLICE Ztied1.H, Pg, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Splice (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Splice(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of UInteger), left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Splice(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svsplice[_u32](svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  SPLICE Ztied1.S, Pg, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Splice">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Splice (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Splice(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Splice(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Splice (mask As Vector(Of ULong), left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Splice : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Splice (mask, left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Splice(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svsplice[_u64](svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  SPLICE Ztied1.D, Pg, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Sqrt (System.Numerics.Vector&lt;double&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Sqrt(valuetype System.Numerics.Vector`1&lt;float64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Sqrt(System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (value As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Sqrt : System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Sqrt value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Sqrt(System::Numerics::Vector&lt;double&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat64_t svsqrt[_f64]_m(svfloat64_t inactive, svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svsqrt[_f64]_x(svbool_t pg, svfloat64_t op)</para>
          <para>svfloat64_t svsqrt[_f64]_z(svbool_t pg, svfloat64_t op)</para>
          <para>  FSQRT Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Sqrt (System.Numerics.Vector&lt;float&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Sqrt(valuetype System.Numerics.Vector`1&lt;float32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Sqrt(System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (value As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Sqrt : System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Sqrt value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Sqrt(System::Numerics::Vector&lt;float&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svfloat32_t svsqrt[_f32]_m(svfloat32_t inactive, svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svsqrt[_f32]_x(svbool_t pg, svfloat32_t op)</para>
          <para>svfloat32_t svsqrt[_f32]_z(svbool_t pg, svfloat32_t op)</para>
          <para>  FSQRT Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;byte&gt; mask, byte* address, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Byte},System.Byte*,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_u8](svbool_t pg, uint8_t *base, svuint8_t data)</para>
          <para>  ST1B Zdata.B, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;byte&gt; mask, byte* address, (System.Numerics.Vector&lt;byte&gt; Value1, System.Numerics.Vector&lt;byte&gt; Value2, System.Numerics.Vector&lt;byte&gt; Value3, System.Numerics.Vector&lt;byte&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Byte},System.Byte*,System.ValueTuple{System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; * ValueTuple&lt;System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address, ValueTuple&lt;System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_u8](svbool_t pg, uint8_t *base, svuint8x4_t data)</para>
          <para>  ST4B {Zdata0.B - Zdata3.B}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;byte&gt; mask, byte* address, (System.Numerics.Vector&lt;byte&gt; Value1, System.Numerics.Vector&lt;byte&gt; Value2, System.Numerics.Vector&lt;byte&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Byte},System.Byte*,System.ValueTuple{System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; * ValueTuple&lt;System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address, ValueTuple&lt;System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_u8](svbool_t pg, uint8_t *base, svuint8x3_t data)</para>
          <para>  ST3B {Zdata0.B - Zdata2.B}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;byte&gt; mask, byte* address, (System.Numerics.Vector&lt;byte&gt; Value1, System.Numerics.Vector&lt;byte&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Byte},System.Byte*,System.ValueTuple{System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; * ValueTuple&lt;System.Numerics.Vector&lt;byte&gt;, System.Numerics.Vector&lt;byte&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address, ValueTuple&lt;System::Numerics::Vector&lt;System::Byte&gt;, System::Numerics::Vector&lt;System::Byte&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Byte&gt;,System.Numerics.Vector&lt;System.Byte&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_u8](svbool_t pg, uint8_t *base, svuint8x2_t data)</para>
          <para>  ST2B {Zdata0.B, Zdata1.B}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_f64](svbool_t pg, float64_t *base, svfloat64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;double&gt; mask, double* address, (System.Numerics.Vector&lt;double&gt; Value1, System.Numerics.Vector&lt;double&gt; Value2, System.Numerics.Vector&lt;double&gt; Value3, System.Numerics.Vector&lt;double&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Double},System.Double*,System.ValueTuple{System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * ValueTuple&lt;System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;double&gt; mask, double* address, ValueTuple&lt;System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_f64](svbool_t pg, float64_t *base, svfloat64x4_t data)</para>
          <para>  ST4D {Zdata0.D - Zdata3.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;double&gt; mask, double* address, (System.Numerics.Vector&lt;double&gt; Value1, System.Numerics.Vector&lt;double&gt; Value2, System.Numerics.Vector&lt;double&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Double},System.Double*,System.ValueTuple{System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * ValueTuple&lt;System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;double&gt; mask, double* address, ValueTuple&lt;System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_f64](svbool_t pg, float64_t *base, svfloat64x3_t data)</para>
          <para>  ST3D {Zdata0.D - Zdata2.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;double&gt; mask, double* address, (System.Numerics.Vector&lt;double&gt; Value1, System.Numerics.Vector&lt;double&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;float64&gt;, valuetype System.Numerics.Vector`1&lt;float64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Double},System.Double*,System.ValueTuple{System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * ValueTuple&lt;System.Numerics.Vector&lt;double&gt;, System.Numerics.Vector&lt;double&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;double&gt; mask, double* address, ValueTuple&lt;System::Numerics::Vector&lt;double&gt;, System::Numerics::Vector&lt;double&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Double&gt;,System.Numerics.Vector&lt;System.Double&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_f64](svbool_t pg, float64_t *base, svfloat64x2_t data)</para>
          <para>  ST2D {Zdata0.D, Zdata1.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;short&gt; mask, short* address, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int16},System.Int16*,System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;short&gt; mask, short* address, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_s16](svbool_t pg, int16_t *base, svint16_t data)</para>
          <para>  ST1H Zdata.H, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;short&gt; mask, short* address, (System.Numerics.Vector&lt;short&gt; Value1, System.Numerics.Vector&lt;short&gt; Value2, System.Numerics.Vector&lt;short&gt; Value3, System.Numerics.Vector&lt;short&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int16},System.Int16*,System.ValueTuple{System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;short&gt; mask, short* address, ValueTuple&lt;System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_s16](svbool_t pg, int16_t *base, svint16x4_t data)</para>
          <para>  ST4H {Zdata0.H - Zdata3.H}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;short&gt; mask, short* address, (System.Numerics.Vector&lt;short&gt; Value1, System.Numerics.Vector&lt;short&gt; Value2, System.Numerics.Vector&lt;short&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int16},System.Int16*,System.ValueTuple{System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;short&gt; mask, short* address, ValueTuple&lt;System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_s16](svbool_t pg, int16_t *base, svint16x3_t data)</para>
          <para>  ST3H {Zdata0.H - Zdata2.H}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;short&gt; mask, short* address, (System.Numerics.Vector&lt;short&gt; Value1, System.Numerics.Vector&lt;short&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int16&gt;, valuetype System.Numerics.Vector`1&lt;int16&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int16},System.Int16*,System.ValueTuple{System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int16&gt;, System.Numerics.Vector&lt;int16&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;short&gt; mask, short* address, ValueTuple&lt;System::Numerics::Vector&lt;short&gt;, System::Numerics::Vector&lt;short&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int16&gt;,System.Numerics.Vector&lt;System.Int16&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_s16](svbool_t pg, int16_t *base, svint16x2_t data)</para>
          <para>  ST2H {Zdata0.H, Zdata1.H}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_s32](svbool_t pg, int32_t *base, svint32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;int&gt; mask, int* address, (System.Numerics.Vector&lt;int&gt; Value1, System.Numerics.Vector&lt;int&gt; Value2, System.Numerics.Vector&lt;int&gt; Value3, System.Numerics.Vector&lt;int&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int32},System.Int32*,System.ValueTuple{System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;int&gt; mask, int* address, ValueTuple&lt;System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_s32](svbool_t pg, int32_t *base, svint32x4_t data)</para>
          <para>  ST4W {Zdata0.S - Zdata3.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;int&gt; mask, int* address, (System.Numerics.Vector&lt;int&gt; Value1, System.Numerics.Vector&lt;int&gt; Value2, System.Numerics.Vector&lt;int&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int32},System.Int32*,System.ValueTuple{System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;int&gt; mask, int* address, ValueTuple&lt;System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_s32](svbool_t pg, int32_t *base, svint32x3_t data)</para>
          <para>  ST3W {Zdata0.S - Zdata2.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;int&gt; mask, int* address, (System.Numerics.Vector&lt;int&gt; Value1, System.Numerics.Vector&lt;int&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int32&gt;, valuetype System.Numerics.Vector`1&lt;int32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int32},System.Int32*,System.ValueTuple{System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int&gt;, System.Numerics.Vector&lt;int&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;int&gt; mask, int* address, ValueTuple&lt;System::Numerics::Vector&lt;int&gt;, System::Numerics::Vector&lt;int&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int32&gt;,System.Numerics.Vector&lt;System.Int32&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_s32](svbool_t pg, int32_t *base, svint32x2_t data)</para>
          <para>  ST2W {Zdata0.S, Zdata1.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_s64](svbool_t pg, int64_t *base, svint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;long&gt; mask, long* address, (System.Numerics.Vector&lt;long&gt; Value1, System.Numerics.Vector&lt;long&gt; Value2, System.Numerics.Vector&lt;long&gt; Value3, System.Numerics.Vector&lt;long&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int64},System.Int64*,System.ValueTuple{System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;long&gt; mask, long* address, ValueTuple&lt;System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_s64](svbool_t pg, int64_t *base, svint64x4_t data)</para>
          <para>  ST4D {Zdata0.D - Zdata3.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;long&gt; mask, long* address, (System.Numerics.Vector&lt;long&gt; Value1, System.Numerics.Vector&lt;long&gt; Value2, System.Numerics.Vector&lt;long&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int64},System.Int64*,System.ValueTuple{System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;long&gt; mask, long* address, ValueTuple&lt;System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_s64](svbool_t pg, int64_t *base, svint64x3_t data)</para>
          <para>  ST3D {Zdata0.D - Zdata2.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;long&gt; mask, long* address, (System.Numerics.Vector&lt;long&gt; Value1, System.Numerics.Vector&lt;long&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int64&gt;, valuetype System.Numerics.Vector`1&lt;int64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Int64},System.Int64*,System.ValueTuple{System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * ValueTuple&lt;System.Numerics.Vector&lt;int64&gt;, System.Numerics.Vector&lt;int64&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;long&gt; mask, long* address, ValueTuple&lt;System::Numerics::Vector&lt;long&gt;, System::Numerics::Vector&lt;long&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Int64&gt;,System.Numerics.Vector&lt;System.Int64&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_s64](svbool_t pg, int64_t *base, svint64x2_t data)</para>
          <para>  ST2D {Zdata0.D, Zdata1.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.SByte},System.SByte*,System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_s8](svbool_t pg, int8_t *base, svint8_t data)</para>
          <para>  ST1B Zdata.B, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address, (System.Numerics.Vector&lt;sbyte&gt; Value1, System.Numerics.Vector&lt;sbyte&gt; Value2, System.Numerics.Vector&lt;sbyte&gt; Value3, System.Numerics.Vector&lt;sbyte&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.SByte},System.SByte*,System.ValueTuple{System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; * ValueTuple&lt;System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address, ValueTuple&lt;System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_s8](svbool_t pg, int8_t *base, svint8x4_t data)</para>
          <para>  ST4B {Zdata0.B - Zdata3.B}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address, (System.Numerics.Vector&lt;sbyte&gt; Value1, System.Numerics.Vector&lt;sbyte&gt; Value2, System.Numerics.Vector&lt;sbyte&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.SByte},System.SByte*,System.ValueTuple{System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; * ValueTuple&lt;System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address, ValueTuple&lt;System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_s8](svbool_t pg, int8_t *base, svint8x3_t data)</para>
          <para>  ST3B {Zdata0.B - Zdata2.B}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address, (System.Numerics.Vector&lt;sbyte&gt; Value1, System.Numerics.Vector&lt;sbyte&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;int8&gt;, valuetype System.Numerics.Vector`1&lt;int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.SByte},System.SByte*,System.ValueTuple{System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; * ValueTuple&lt;System.Numerics.Vector&lt;sbyte&gt;, System.Numerics.Vector&lt;sbyte&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address, ValueTuple&lt;System::Numerics::Vector&lt;System::SByte&gt;, System::Numerics::Vector&lt;System::SByte&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.SByte&gt;,System.Numerics.Vector&lt;System.SByte&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_s8](svbool_t pg, int8_t *base, svint8x2_t data)</para>
          <para>  ST2B {Zdata0.B, Zdata1.B}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_f32](svbool_t pg, float32_t *base, svfloat32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;float&gt; mask, float* address, (System.Numerics.Vector&lt;float&gt; Value1, System.Numerics.Vector&lt;float&gt; Value2, System.Numerics.Vector&lt;float&gt; Value3, System.Numerics.Vector&lt;float&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Single},System.Single*,System.ValueTuple{System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * ValueTuple&lt;System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;float&gt; mask, float* address, ValueTuple&lt;System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_f32](svbool_t pg, float32_t *base, svfloat32x4_t data)</para>
          <para>  ST4W {Zdata0.S - Zdata3.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;float&gt; mask, float* address, (System.Numerics.Vector&lt;float&gt; Value1, System.Numerics.Vector&lt;float&gt; Value2, System.Numerics.Vector&lt;float&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Single},System.Single*,System.ValueTuple{System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * ValueTuple&lt;System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;float&gt; mask, float* address, ValueTuple&lt;System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_f32](svbool_t pg, float32_t *base, svfloat32x3_t data)</para>
          <para>  ST3W {Zdata0.S - Zdata2.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;float&gt; mask, float* address, (System.Numerics.Vector&lt;float&gt; Value1, System.Numerics.Vector&lt;float&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;float32&gt;, valuetype System.Numerics.Vector`1&lt;float32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.Single},System.Single*,System.ValueTuple{System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * ValueTuple&lt;System.Numerics.Vector&lt;single&gt;, System.Numerics.Vector&lt;single&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;float&gt; mask, float* address, ValueTuple&lt;System::Numerics::Vector&lt;float&gt;, System::Numerics::Vector&lt;float&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.Single&gt;,System.Numerics.Vector&lt;System.Single&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_f32](svbool_t pg, float32_t *base, svfloat32x2_t data)</para>
          <para>  ST2W {Zdata0.S, Zdata1.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt16},System.UInt16*,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_u16](svbool_t pg, uint16_t *base, svuint16_t data)</para>
          <para>  ST1H Zdata.H, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address, (System.Numerics.Vector&lt;ushort&gt; Value1, System.Numerics.Vector&lt;ushort&gt; Value2, System.Numerics.Vector&lt;ushort&gt; Value3, System.Numerics.Vector&lt;ushort&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt16},System.UInt16*,System.ValueTuple{System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_u16](svbool_t pg, uint16_t *base, svuint16x4_t data)</para>
          <para>  ST4H {Zdata0.H - Zdata3.H}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address, (System.Numerics.Vector&lt;ushort&gt; Value1, System.Numerics.Vector&lt;ushort&gt; Value2, System.Numerics.Vector&lt;ushort&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt16},System.UInt16*,System.ValueTuple{System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_u16](svbool_t pg, uint16_t *base, svuint16x3_t data)</para>
          <para>  ST3H {Zdata0.H - Zdata2.H}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address, (System.Numerics.Vector&lt;ushort&gt; Value1, System.Numerics.Vector&lt;ushort&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt16},System.UInt16*,System.ValueTuple{System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint16&gt;, System.Numerics.Vector&lt;uint16&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt16&gt;, System::Numerics::Vector&lt;System::UInt16&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt16&gt;,System.Numerics.Vector&lt;System.UInt16&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_u16](svbool_t pg, uint16_t *base, svuint16x2_t data)</para>
          <para>  ST2H {Zdata0.H, Zdata1.H}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_u32](svbool_t pg, uint32_t *base, svuint32_t data)</para>
          <para>  ST1W Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;uint&gt; mask, uint* address, (System.Numerics.Vector&lt;uint&gt; Value1, System.Numerics.Vector&lt;uint&gt; Value2, System.Numerics.Vector&lt;uint&gt; Value3, System.Numerics.Vector&lt;uint&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt32},System.UInt32*,System.ValueTuple{System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_u32](svbool_t pg, uint32_t *base, svuint32x4_t data)</para>
          <para>  ST4W {Zdata0.S - Zdata3.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;uint&gt; mask, uint* address, (System.Numerics.Vector&lt;uint&gt; Value1, System.Numerics.Vector&lt;uint&gt; Value2, System.Numerics.Vector&lt;uint&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt32},System.UInt32*,System.ValueTuple{System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_u32](svbool_t pg, uint32_t *base, svuint32x3_t data)</para>
          <para>  ST3W {Zdata0.S - Zdata2.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;uint&gt; mask, uint* address, (System.Numerics.Vector&lt;uint&gt; Value1, System.Numerics.Vector&lt;uint&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt32},System.UInt32*,System.ValueTuple{System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint32&gt;, System.Numerics.Vector&lt;uint32&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt32&gt;, System::Numerics::Vector&lt;System::UInt32&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt32&gt;,System.Numerics.Vector&lt;System.UInt32&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_u32](svbool_t pg, uint32_t *base, svuint32x2_t data)</para>
          <para>  ST2W {Zdata0.S, Zdata1.S}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1[_u64](svbool_t pg, uint64_t *base, svuint64_t data)</para>
          <para>  ST1D Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, (System.Numerics.Vector&lt;ulong&gt; Value1, System.Numerics.Vector&lt;ulong&gt; Value2, System.Numerics.Vector&lt;ulong&gt; Value3, System.Numerics.Vector&lt;ulong&gt; Value4) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.ValueTuple`4&lt;valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt64},System.UInt64*,System.ValueTuple{System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3", "Value4" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst4[_u64](svbool_t pg, uint64_t *base, svuint64x4_t data)</para>
          <para>  ST4D {Zdata0.D - Zdata3.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, (System.Numerics.Vector&lt;ulong&gt; Value1, System.Numerics.Vector&lt;ulong&gt; Value2, System.Numerics.Vector&lt;ulong&gt; Value3) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.ValueTuple`3&lt;valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt64},System.UInt64*,System.ValueTuple{System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2", "Value3" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst3[_u64](svbool_t pg, uint64_t *base, svuint64x3_t data)</para>
          <para>  ST3D {Zdata0.D - Zdata2.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreAndZip">
      <MemberSignature Language="C#" Value="public static void StoreAndZip (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, (System.Numerics.Vector&lt;ulong&gt; Value1, System.Numerics.Vector&lt;ulong&gt; Value2) data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreAndZip(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.ValueTuple`2&lt;valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreAndZip(System.Numerics.Vector{System.UInt64},System.UInt64*,System.ValueTuple{System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64}})" />
      <MemberSignature Language="F#" Value="static member StoreAndZip : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * ValueTuple&lt;System.Numerics.Vector&lt;uint64&gt;, System.Numerics.Vector&lt;uint64&gt;&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreAndZip (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreAndZip(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, ValueTuple&lt;System::Numerics::Vector&lt;System::UInt64&gt;, System::Numerics::Vector&lt;System::UInt64&gt;&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="data" Type="System.ValueTuple&lt;System.Numerics.Vector&lt;System.UInt64&gt;,System.Numerics.Vector&lt;System.UInt64&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value1", "Value2" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst2[_u64](svbool_t pg, uint64_t *base, svuint64x2_t data)</para>
          <para>  ST2D {Zdata0.D, Zdata1.D}, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;short&gt; mask, sbyte* address, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.Int16},System.SByte*,System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;short&gt; mask, System::SByte* address, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b[_s16](svbool_t pg, int8_t *base, svint16_t data)</para>
          <para>  ST1B Zdata.H, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;int&gt; mask, short* address, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.Int32},System.Int16*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;int&gt; mask, short* address, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h[_s32](svbool_t pg, int16_t *base, svint32_t data)</para>
          <para>  ST1H Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;int&gt; mask, sbyte* address, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.Int32},System.SByte*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;int&gt; mask, System::SByte* address, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b[_s32](svbool_t pg, int8_t *base, svint32_t data)</para>
          <para>  ST1B Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;long&gt; mask, short* address, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.Int64},System.Int16*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;long&gt; mask, short* address, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h[_s64](svbool_t pg, int16_t *base, svint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;long&gt; mask, int* address, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.Int64},System.Int32*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;long&gt; mask, int* address, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w[_s64](svbool_t pg, int32_t *base, svint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;long&gt; mask, sbyte* address, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.Int64},System.SByte*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;long&gt; mask, System::SByte* address, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b[_s64](svbool_t pg, int8_t *base, svint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;ushort&gt; mask, byte* address, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.UInt16},System.Byte*,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b[_u16](svbool_t pg, uint8_t *base, svuint16_t data)</para>
          <para>  ST1B Zdata.H, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;uint&gt; mask, byte* address, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.UInt32},System.Byte*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b[_u32](svbool_t pg, uint8_t *base, svuint32_t data)</para>
          <para>  ST1B Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;uint&gt; mask, ushort* address, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.UInt32},System.UInt16*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h[_u32](svbool_t pg, uint16_t *base, svuint32_t data)</para>
          <para>  ST1H Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, byte* address, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.UInt64},System.Byte*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1b[_u64](svbool_t pg, uint8_t *base, svuint64_t data)</para>
          <para>  ST1B Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, ushort* address, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.UInt64},System.UInt16*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1h[_u64](svbool_t pg, uint16_t *base, svuint64_t data)</para>
          <para>  ST1H Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNarrowing">
      <MemberSignature Language="C#" Value="public static void StoreNarrowing (System.Numerics.Vector&lt;ulong&gt; mask, uint* address, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNarrowing(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing(System.Numerics.Vector{System.UInt64},System.UInt32*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member StoreNarrowing : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNarrowing (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNarrowing(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svst1w[_u64](svbool_t pg, uint32_t *base, svuint64_t data)</para>
          <para>  ST1W Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;byte&gt; mask, byte* address, System.Numerics.Vector&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, unsigned int8* address, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.Byte},System.Byte*,System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;byte&gt; * nativeptr&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Byte* address, System::Numerics::Vector&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="address" Type="System.Byte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_u8](svbool_t pg, uint8_t *base, svuint8_t data)</para>
          <para>  STNT1B Zdata.B, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;double&gt; mask, double* address, System.Numerics.Vector&lt;double&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;float64&gt; mask, float64* address, valuetype System.Numerics.Vector`1&lt;float64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.Double},System.Double*,System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;double&gt; * nativeptr&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;double&gt; mask, double* address, System::Numerics::Vector&lt;double&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="address" Type="System.Double*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_f64](svbool_t pg, float64_t *base, svfloat64_t data)</para>
          <para>  STNT1D Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;short&gt; mask, short* address, System.Numerics.Vector&lt;short&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, int16* address, valuetype System.Numerics.Vector`1&lt;int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.Int16},System.Int16*,System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;int16&gt; * nativeptr&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;short&gt; mask, short* address, System::Numerics::Vector&lt;short&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="address" Type="System.Int16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_s16](svbool_t pg, int16_t *base, svint16_t data)</para>
          <para>  STNT1H Zdata.H, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;int&gt; mask, int* address, System.Numerics.Vector&lt;int&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, int32* address, valuetype System.Numerics.Vector`1&lt;int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.Int32},System.Int32*,System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;int&gt; * nativeptr&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;int&gt; mask, int* address, System::Numerics::Vector&lt;int&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="address" Type="System.Int32*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_s32](svbool_t pg, int32_t *base, svint32_t data)</para>
          <para>  STNT1W Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;long&gt; mask, long* address, System.Numerics.Vector&lt;long&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, int64* address, valuetype System.Numerics.Vector`1&lt;int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.Int64},System.Int64*,System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;int64&gt; * nativeptr&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;long&gt; mask, long* address, System::Numerics::Vector&lt;long&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="address" Type="System.Int64*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_s64](svbool_t pg, int64_t *base, svint64_t data)</para>
          <para>  STNT1D Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;sbyte&gt; mask, sbyte* address, System.Numerics.Vector&lt;sbyte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, int8* address, valuetype System.Numerics.Vector`1&lt;int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.SByte},System.SByte*,System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;sbyte&gt; * nativeptr&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;System::SByte&gt; mask, System::SByte* address, System::Numerics::Vector&lt;System::SByte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="address" Type="System.SByte*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_s8](svbool_t pg, int8_t *base, svint8_t data)</para>
          <para>  STNT1B Zdata.B, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;float&gt; mask, float* address, System.Numerics.Vector&lt;float&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;float32&gt; mask, float32* address, valuetype System.Numerics.Vector`1&lt;float32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.Single},System.Single*,System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;single&gt; * nativeptr&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;float&gt; mask, float* address, System::Numerics::Vector&lt;float&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="address" Type="System.Single*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_f32](svbool_t pg, float32_t *base, svfloat32_t data)</para>
          <para>  STNT1W Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;ushort&gt; mask, ushort* address, System.Numerics.Vector&lt;ushort&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, unsigned int16* address, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.UInt16},System.UInt16*,System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;uint16&gt; * nativeptr&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::UInt16* address, System::Numerics::Vector&lt;System::UInt16&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="address" Type="System.UInt16*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_u16](svbool_t pg, uint16_t *base, svuint16_t data)</para>
          <para>  STNT1H Zdata.H, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;uint&gt; mask, uint* address, System.Numerics.Vector&lt;uint&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, unsigned int32* address, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.UInt32},System.UInt32*,System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;uint32&gt; * nativeptr&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::UInt32* address, System::Numerics::Vector&lt;System::UInt32&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="address" Type="System.UInt32*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_u32](svbool_t pg, uint32_t *base, svuint32_t data)</para>
          <para>  STNT1W Zdata.S, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreNonTemporal">
      <MemberSignature Language="C#" Value="public static void StoreNonTemporal (System.Numerics.Vector&lt;ulong&gt; mask, ulong* address, System.Numerics.Vector&lt;ulong&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoreNonTemporal(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, unsigned int64* address, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal(System.Numerics.Vector{System.UInt64},System.UInt64*,System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="F#" Value="static member StoreNonTemporal : System.Numerics.Vector&lt;uint64&gt; * nativeptr&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; unit" Usage="System.Runtime.Intrinsics.Arm.Sve.StoreNonTemporal (mask, address, data)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StoreNonTemporal(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::UInt64* address, System::Numerics::Vector&lt;System::UInt64&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="address" Type="System.UInt64*" />
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="address">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
          <para>void svstnt1[_u64](svbool_t pg, uint64_t *base, svuint64_t data)</para>
          <para>  STNT1D Zdata.D, Pg, [Xbase, #0, MUL VL]</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Subtract (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Subtract(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Subtract(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svsub[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svsub[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t svsub[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  SUB Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; Subtract (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; Subtract(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; Subtract(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svsub[_f64]_m(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svsub[_f64]_x(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>svfloat64_t svsub[_f64]_z(svbool_t pg, svfloat64_t op1, svfloat64_t op2)</para>
          <para>  FSUB Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Subtract (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Subtract(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Subtract(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svsub[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svsub[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t svsub[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  SUB Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Subtract (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Subtract(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Subtract(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svsub[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svsub[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t svsub[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  SUB Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Subtract (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Subtract(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Subtract(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svsub[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svsub[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t svsub[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  SUB Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Subtract (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Subtract(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Subtract(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svsub[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svsub[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t svsub[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  SUB Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; Subtract (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; Subtract(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; Subtract(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svsub[_f32]_m(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svsub[_f32]_x(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>svfloat32_t svsub[_f32]_z(svbool_t pg, svfloat32_t op1, svfloat32_t op2)</para>
          <para>  FSUB Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Subtract (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Subtract(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Subtract(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svsub[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svsub[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t svsub[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  SUB Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Subtract (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Subtract(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Subtract(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svsub[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svsub[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t svsub[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  SUB Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Subtract (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Subtract(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Subtract(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Subtract (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Subtract(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svsub[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svsub[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t svsub[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  SUB Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; SubtractSaturate (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; SubtractSaturate(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svqsub[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>  UQSUB Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; SubtractSaturate (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; SubtractSaturate(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svqsub[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  SQSUB Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; SubtractSaturate (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; SubtractSaturate(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svqsub[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  SQSUB Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; SubtractSaturate (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; SubtractSaturate(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svqsub[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  SQSUB Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; SubtractSaturate (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; SubtractSaturate(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svqsub[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  SQSUB Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; SubtractSaturate (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; SubtractSaturate(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svqsub[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  UQSUB Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; SubtractSaturate (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; SubtractSaturate(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svqsub[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  UQSUB Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractSaturate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; SubtractSaturate (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; SubtractSaturate(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractSaturate (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member SubtractSaturate : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.SubtractSaturate (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; SubtractSaturate(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svqsub[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  UQSUB Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of Byte), srcMask As Vector(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of Short), srcMask As Vector(Of Short)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of Integer), srcMask As Vector(Of Integer)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of Long), srcMask As Vector(Of Long)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of SByte), srcMask As Vector(Of SByte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of UShort), srcMask As Vector(Of UShort)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of UInteger), srcMask As Vector(Of UInteger)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestAnyTrue">
      <MemberSignature Language="C#" Value="public static bool TestAnyTrue (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestAnyTrue(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestAnyTrue (mask As Vector(Of ULong), srcMask As Vector(Of ULong)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestAnyTrue : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestAnyTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestAnyTrue(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_any(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of Byte), srcMask As Vector(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of Short), srcMask As Vector(Of Short)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of Integer), srcMask As Vector(Of Integer)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of Long), srcMask As Vector(Of Long)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of SByte), srcMask As Vector(Of SByte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of UShort), srcMask As Vector(Of UShort)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of UInteger), srcMask As Vector(Of UInteger)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFirstTrue">
      <MemberSignature Language="C#" Value="public static bool TestFirstTrue (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestFirstTrue(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestFirstTrue (mask As Vector(Of ULong), srcMask As Vector(Of ULong)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestFirstTrue : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestFirstTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestFirstTrue(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_first(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;byte&gt; mask, System.Numerics.Vector&lt;byte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of Byte), srcMask As Vector(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;System::Byte&gt; mask, System::Numerics::Vector&lt;System::Byte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;short&gt; mask, System.Numerics.Vector&lt;short&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;int16&gt; mask, valuetype System.Numerics.Vector`1&lt;int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of Short), srcMask As Vector(Of Short)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;short&gt; mask, System::Numerics::Vector&lt;short&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;int&gt; mask, System.Numerics.Vector&lt;int&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;int32&gt; mask, valuetype System.Numerics.Vector`1&lt;int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of Integer), srcMask As Vector(Of Integer)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;int&gt; mask, System::Numerics::Vector&lt;int&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;long&gt; mask, System.Numerics.Vector&lt;long&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;int64&gt; mask, valuetype System.Numerics.Vector`1&lt;int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of Long), srcMask As Vector(Of Long)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;long&gt; mask, System::Numerics::Vector&lt;long&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;sbyte&gt; mask, System.Numerics.Vector&lt;sbyte&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;int8&gt; mask, valuetype System.Numerics.Vector`1&lt;int8&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of SByte), srcMask As Vector(Of SByte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;System::SByte&gt; mask, System::Numerics::Vector&lt;System::SByte&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;ushort&gt; mask, System.Numerics.Vector&lt;ushort&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of UShort), srcMask As Vector(Of UShort)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;System::UInt16&gt; mask, System::Numerics::Vector&lt;System::UInt16&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;uint&gt; mask, System.Numerics.Vector&lt;uint&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of UInteger), srcMask As Vector(Of UInteger)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;System::UInt32&gt; mask, System::Numerics::Vector&lt;System::UInt32&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestLastTrue">
      <MemberSignature Language="C#" Value="public static bool TestLastTrue (System.Numerics.Vector&lt;ulong&gt; mask, System.Numerics.Vector&lt;ulong&gt; srcMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TestLastTrue(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; mask, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; srcMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TestLastTrue(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TestLastTrue (mask As Vector(Of ULong), srcMask As Vector(Of ULong)) As Boolean" />
      <MemberSignature Language="F#" Value="static member TestLastTrue : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; bool" Usage="System.Runtime.Intrinsics.Arm.Sve.TestLastTrue (mask, srcMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TestLastTrue(System::Numerics::Vector&lt;System::UInt64&gt; mask, System::Numerics::Vector&lt;System::UInt64&gt; srcMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="srcMask" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="srcMask">To be added.</param>
        <summary>
          <para>bool svptest_last(svbool_t pg, svbool_t op)</para>
          <para>  PTEST</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; TransposeEven (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; TransposeEven(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svtrn1[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>  TRN1 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; TransposeEven (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; TransposeEven(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svtrn1[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  TRN1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; TransposeEven (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; TransposeEven(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svtrn1[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  TRN1 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; TransposeEven (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; TransposeEven(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svtrn1[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  TRN1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; TransposeEven (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; TransposeEven(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svtrn1[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  TRN1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; TransposeEven (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; TransposeEven(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svtrn1[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  TRN1 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; TransposeEven (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; TransposeEven(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svtrn1[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  TRN1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; TransposeEven (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; TransposeEven(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svtrn1[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  TRN1 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; TransposeEven (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; TransposeEven(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svtrn1[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  TRN1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; TransposeEven (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; TransposeEven(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeEven(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeEven (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member TransposeEven : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; TransposeEven(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svtrn1[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  TRN1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; TransposeOdd (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; TransposeOdd(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svtrn2[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>  TRN2 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; TransposeOdd (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; TransposeOdd(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svtrn2[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  TRN2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; TransposeOdd (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; TransposeOdd(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svtrn2[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  TRN2 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; TransposeOdd (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; TransposeOdd(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svtrn2[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  TRN2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; TransposeOdd (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; TransposeOdd(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svtrn2[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  TRN2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; TransposeOdd (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; TransposeOdd(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svtrn2[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  TRN2 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; TransposeOdd (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; TransposeOdd(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svtrn2[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  TRN2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; TransposeOdd (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; TransposeOdd(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svtrn2[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  TRN2 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; TransposeOdd (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; TransposeOdd(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svtrn2[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  TRN2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransposeOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; TransposeOdd (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; TransposeOdd(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TransposeOdd(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransposeOdd (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member TransposeOdd : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TransposeOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; TransposeOdd(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svtrn2[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  TRN2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrigonometricMultiplyAddCoefficient">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; TrigonometricMultiplyAddCoefficient (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right, byte control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; TrigonometricMultiplyAddCoefficient(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right, unsigned int8 control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TrigonometricMultiplyAddCoefficient(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrigonometricMultiplyAddCoefficient (left As Vector(Of Double), right As Vector(Of Double), control As Byte) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member TrigonometricMultiplyAddCoefficient : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; * byte -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TrigonometricMultiplyAddCoefficient (left, right, control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; TrigonometricMultiplyAddCoefficient(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right, System::Byte control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="control" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="control">To be added.</param>
        <summary>
          <para>svfloat64_t svtmad[_f64](svfloat64_t op1, svfloat64_t op2, uint64_t imm3)</para>
          <para>  FTMAD Ztied1.D, Ztied1.D, Zop2.D, #imm3</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrigonometricMultiplyAddCoefficient">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; TrigonometricMultiplyAddCoefficient (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right, byte control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; TrigonometricMultiplyAddCoefficient(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right, unsigned int8 control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TrigonometricMultiplyAddCoefficient(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrigonometricMultiplyAddCoefficient (left As Vector(Of Single), right As Vector(Of Single), control As Byte) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member TrigonometricMultiplyAddCoefficient : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; * byte -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TrigonometricMultiplyAddCoefficient (left, right, control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; TrigonometricMultiplyAddCoefficient(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right, System::Byte control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="control" Type="System.Byte">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.ConstantExpected(Max=7, Min=0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="control">To be added.</param>
        <summary>
          <para>svfloat32_t svtmad[_f32](svfloat32_t op1, svfloat32_t op2, uint64_t imm3)</para>
          <para>  FTMAD Ztied1.S, Ztied1.S, Zop2.S, #imm3</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrigonometricSelectCoefficient">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; TrigonometricSelectCoefficient (System.Numerics.Vector&lt;double&gt; value, System.Numerics.Vector&lt;ulong&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; TrigonometricSelectCoefficient(valuetype System.Numerics.Vector`1&lt;float64&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TrigonometricSelectCoefficient(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrigonometricSelectCoefficient (value As Vector(Of Double), selector As Vector(Of ULong)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member TrigonometricSelectCoefficient : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TrigonometricSelectCoefficient (value, selector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; TrigonometricSelectCoefficient(System::Numerics::Vector&lt;double&gt; value, System::Numerics::Vector&lt;System::UInt64&gt; selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="selector" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="selector">To be added.</param>
        <summary>
          <para>svfloat64_t svtssel[_f64](svfloat64_t op1, svuint64_t op2)</para>
          <para>  FTSSEL Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrigonometricSelectCoefficient">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; TrigonometricSelectCoefficient (System.Numerics.Vector&lt;float&gt; value, System.Numerics.Vector&lt;uint&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; TrigonometricSelectCoefficient(valuetype System.Numerics.Vector`1&lt;float32&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TrigonometricSelectCoefficient(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrigonometricSelectCoefficient (value As Vector(Of Single), selector As Vector(Of UInteger)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member TrigonometricSelectCoefficient : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TrigonometricSelectCoefficient (value, selector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; TrigonometricSelectCoefficient(System::Numerics::Vector&lt;float&gt; value, System::Numerics::Vector&lt;System::UInt32&gt; selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="selector" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="selector">To be added.</param>
        <summary>
          <para>svfloat32_t svtssel[_f32](svfloat32_t op1, svuint32_t op2)</para>
          <para>  FTSSEL Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrigonometricStartingValue">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; TrigonometricStartingValue (System.Numerics.Vector&lt;double&gt; value, System.Numerics.Vector&lt;ulong&gt; sign);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; TrigonometricStartingValue(valuetype System.Numerics.Vector`1&lt;float64&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; sign) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TrigonometricStartingValue(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrigonometricStartingValue (value As Vector(Of Double), sign As Vector(Of ULong)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member TrigonometricStartingValue : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TrigonometricStartingValue (value, sign)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; TrigonometricStartingValue(System::Numerics::Vector&lt;double&gt; value, System::Numerics::Vector&lt;System::UInt64&gt; sign);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="sign" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="sign">To be added.</param>
        <summary>
          <para>svfloat64_t svtsmul[_f64](svfloat64_t op1, svuint64_t op2)</para>
          <para>  FTSMUL Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrigonometricStartingValue">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; TrigonometricStartingValue (System.Numerics.Vector&lt;float&gt; value, System.Numerics.Vector&lt;uint&gt; sign);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; TrigonometricStartingValue(valuetype System.Numerics.Vector`1&lt;float32&gt; value, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; sign) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.TrigonometricStartingValue(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrigonometricStartingValue (value As Vector(Of Single), sign As Vector(Of UInteger)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member TrigonometricStartingValue : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.TrigonometricStartingValue (value, sign)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; TrigonometricStartingValue(System::Numerics::Vector&lt;float&gt; value, System::Numerics::Vector&lt;System::UInt32&gt; sign);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="sign" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="sign">To be added.</param>
        <summary>
          <para>svfloat32_t svtsmul[_f32](svfloat32_t op1, svuint32_t op2)</para>
          <para>  FTSMUL Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; UnzipEven (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; UnzipEven(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svuzp1[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>svbool_t svuzp1_b8(svbool_t op1, svbool_t op2)</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; UnzipEven (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; UnzipEven(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svuzp1[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  UZP1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; UnzipEven (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; UnzipEven(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svuzp1[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  UZP1 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; UnzipEven (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; UnzipEven(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svuzp1[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  UZP1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; UnzipEven (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; UnzipEven(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svuzp1[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  UZP1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; UnzipEven (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; UnzipEven(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svuzp1[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  UZP1 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; UnzipEven (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; UnzipEven(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svuzp1[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  UZP1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; UnzipEven (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; UnzipEven(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svuzp1[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  UZP1 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; UnzipEven (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; UnzipEven(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svuzp1[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  UZP1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipEven">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; UnzipEven (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; UnzipEven(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipEven(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipEven (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member UnzipEven : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipEven (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; UnzipEven(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svuzp1[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  UZP1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; UnzipOdd (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; UnzipOdd(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svuzp2[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>  UZP2 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; UnzipOdd (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; UnzipOdd(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svuzp2[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  UZP2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; UnzipOdd (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; UnzipOdd(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svuzp2[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  UZP2 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; UnzipOdd (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; UnzipOdd(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svuzp2[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  UZP2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; UnzipOdd (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; UnzipOdd(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svuzp2[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  UZP2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; UnzipOdd (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; UnzipOdd(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svuzp2[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  UZP2 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; UnzipOdd (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; UnzipOdd(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svuzp2[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  UZP2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; UnzipOdd (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; UnzipOdd(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svuzp2[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  UZP2 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; UnzipOdd (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; UnzipOdd(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svuzp2[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  UZP2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnzipOdd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; UnzipOdd (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; UnzipOdd(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.UnzipOdd(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnzipOdd (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member UnzipOdd : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.UnzipOdd (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; UnzipOdd(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svuzp2[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  UZP2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; VectorTableLookup (System.Numerics.Vector&lt;byte&gt; data, System.Numerics.Vector&lt;byte&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of Byte), indices As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; VectorTableLookup(System::Numerics::Vector&lt;System::Byte&gt; data, System::Numerics::Vector&lt;System::Byte&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint8_t svtbl[_u8](svuint8_t data, svuint8_t indices)</para>
          <para>  TBL Zresult.B, {Zdata.B}, Zindices.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; VectorTableLookup (System.Numerics.Vector&lt;double&gt; data, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;float64&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of Double), indices As Vector(Of ULong)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; VectorTableLookup(System::Numerics::Vector&lt;double&gt; data, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svfloat64_t svtbl[_f64](svfloat64_t data, svuint64_t indices)</para>
          <para>  TBL Zresult.D, {Zdata.D}, Zindices.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; VectorTableLookup (System.Numerics.Vector&lt;short&gt; data, System.Numerics.Vector&lt;ushort&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;int16&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of Short), indices As Vector(Of UShort)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; VectorTableLookup(System::Numerics::Vector&lt;short&gt; data, System::Numerics::Vector&lt;System::UInt16&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint16_t svtbl[_s16](svint16_t data, svuint16_t indices)</para>
          <para>  TBL Zresult.H, {Zdata.H}, Zindices.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; VectorTableLookup (System.Numerics.Vector&lt;int&gt; data, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;int32&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of Integer), indices As Vector(Of UInteger)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; VectorTableLookup(System::Numerics::Vector&lt;int&gt; data, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint32_t svtbl[_s32](svint32_t data, svuint32_t indices)</para>
          <para>  TBL Zresult.S, {Zdata.S}, Zindices.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; VectorTableLookup (System.Numerics.Vector&lt;long&gt; data, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;int64&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of Long), indices As Vector(Of ULong)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; VectorTableLookup(System::Numerics::Vector&lt;long&gt; data, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint64_t svtbl[_s64](svint64_t data, svuint64_t indices)</para>
          <para>  TBL Zresult.D, {Zdata.D}, Zindices.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; VectorTableLookup (System.Numerics.Vector&lt;sbyte&gt; data, System.Numerics.Vector&lt;byte&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;int8&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of SByte), indices As Vector(Of Byte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; VectorTableLookup(System::Numerics::Vector&lt;System::SByte&gt; data, System::Numerics::Vector&lt;System::Byte&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svint8_t svtbl[_s8](svint8_t data, svuint8_t indices)</para>
          <para>  TBL Zresult.B, {Zdata.B}, Zindices.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; VectorTableLookup (System.Numerics.Vector&lt;float&gt; data, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;float32&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of Single), indices As Vector(Of UInteger)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; VectorTableLookup(System::Numerics::Vector&lt;float&gt; data, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svfloat32_t svtbl[_f32](svfloat32_t data, svuint32_t indices)</para>
          <para>  TBL Zresult.S, {Zdata.S}, Zindices.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; VectorTableLookup (System.Numerics.Vector&lt;ushort&gt; data, System.Numerics.Vector&lt;ushort&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of UShort), indices As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; VectorTableLookup(System::Numerics::Vector&lt;System::UInt16&gt; data, System::Numerics::Vector&lt;System::UInt16&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint16_t svtbl[_u16](svuint16_t data, svuint16_t indices)</para>
          <para>  TBL Zresult.H, {Zdata.H}, Zindices.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; VectorTableLookup (System.Numerics.Vector&lt;uint&gt; data, System.Numerics.Vector&lt;uint&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of UInteger), indices As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; VectorTableLookup(System::Numerics::Vector&lt;System::UInt32&gt; data, System::Numerics::Vector&lt;System::UInt32&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint32_t svtbl[_u32](svuint32_t data, svuint32_t indices)</para>
          <para>  TBL Zresult.S, {Zdata.S}, Zindices.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTableLookup">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; VectorTableLookup (System.Numerics.Vector&lt;ulong&gt; data, System.Numerics.Vector&lt;ulong&gt; indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; VectorTableLookup(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; data, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VectorTableLookup (data As Vector(Of ULong), indices As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member VectorTableLookup : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.VectorTableLookup (data, indices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; VectorTableLookup(System::Numerics::Vector&lt;System::UInt64&gt; data, System::Numerics::Vector&lt;System::UInt64&gt; indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="indices" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="indices">To be added.</param>
        <summary>
          <para>svuint64_t svtbl[_u64](svuint64_t data, svuint64_t indices)</para>
          <para>  TBL Zresult.D, {Zdata.D}, Zindices.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; Xor (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; Xor(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; Xor(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t sveor[_u8]_m(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t sveor[_u8]_x(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>svuint8_t sveor[_u8]_z(svbool_t pg, svuint8_t op1, svuint8_t op2)</para>
          <para>  EOR Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; Xor (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; Xor(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; Xor(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t sveor[_s16]_m(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t sveor[_s16]_x(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>svint16_t sveor[_s16]_z(svbool_t pg, svint16_t op1, svint16_t op2)</para>
          <para>  EOR Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; Xor (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; Xor(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; Xor(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t sveor[_s32]_m(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t sveor[_s32]_x(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>svint32_t sveor[_s32]_z(svbool_t pg, svint32_t op1, svint32_t op2)</para>
          <para>  EOR Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; Xor (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; Xor(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; Xor(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t sveor[_s64]_m(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t sveor[_s64]_x(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>svint64_t sveor[_s64]_z(svbool_t pg, svint64_t op1, svint64_t op2)</para>
          <para>  EOR Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; Xor (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; Xor(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; Xor(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t sveor[_s8]_m(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t sveor[_s8]_x(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>svint8_t sveor[_s8]_z(svbool_t pg, svint8_t op1, svint8_t op2)</para>
          <para>  EOR Ztied1.B, Pg/M, Ztied1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; Xor (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; Xor(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; Xor(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t sveor[_u16]_m(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t sveor[_u16]_x(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>svuint16_t sveor[_u16]_z(svbool_t pg, svuint16_t op1, svuint16_t op2)</para>
          <para>  EOR Ztied1.H, Pg/M, Ztied1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; Xor (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; Xor(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; Xor(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t sveor[_u32]_m(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t sveor[_u32]_x(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>svuint32_t sveor[_u32]_z(svbool_t pg, svuint32_t op1, svuint32_t op2)</para>
          <para>  EOR Ztied1.S, Pg/M, Ztied1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; Xor (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; Xor(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.Xor(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Xor (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member Xor : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.Xor (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; Xor(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t sveor[_u64]_m(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t sveor[_u64]_x(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>svuint64_t sveor[_u64]_z(svbool_t pg, svuint64_t op1, svuint64_t op2)</para>
          <para>  EOR Ztied1.D, Pg/M, Ztied1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; XorAcross (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; XorAcross(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint8_t sveorv[_u8](svbool_t pg, svuint8_t op)</para>
          <para>  EORV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; XorAcross (System.Numerics.Vector&lt;short&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; XorAcross(System::Numerics::Vector&lt;short&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int16_t sveorv[_s16](svbool_t pg, svint16_t op)</para>
          <para>  EORV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; XorAcross (System.Numerics.Vector&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; XorAcross(System::Numerics::Vector&lt;int&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int32_t sveorv[_s32](svbool_t pg, svint32_t op)</para>
          <para>  EORV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; XorAcross (System.Numerics.Vector&lt;long&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; XorAcross(System::Numerics::Vector&lt;long&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int64_t sveorv[_s64](svbool_t pg, svint64_t op)</para>
          <para>  EORV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; XorAcross (System.Numerics.Vector&lt;sbyte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; XorAcross(System::Numerics::Vector&lt;System::SByte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>int8_t sveorv[_s8](svbool_t pg, svint8_t op)</para>
          <para>  EORV Bresult, Pg, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; XorAcross (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; XorAcross(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint16_t sveorv[_u16](svbool_t pg, svuint16_t op)</para>
          <para>  EORV Hresult, Pg, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; XorAcross (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; XorAcross(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint32_t sveorv[_u32](svbool_t pg, svuint32_t op)</para>
          <para>  EORV Sresult, Pg, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XorAcross">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; XorAcross (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; XorAcross(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.XorAcross(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorAcross (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member XorAcross : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.XorAcross value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; XorAcross(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>uint64_t sveorv[_u64](svbool_t pg, svuint64_t op)</para>
          <para>  EORV Dresult, Pg, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtend16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ZeroExtend16 (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ZeroExtend16(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtend16(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtend16 (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ZeroExtend16 : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtend16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ZeroExtend16(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svexth[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svexth[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svexth[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  UXTH Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtend16">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ZeroExtend16 (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ZeroExtend16(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtend16(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtend16 (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ZeroExtend16 : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtend16 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ZeroExtend16(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svexth[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svexth[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svexth[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  UXTH Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtend32">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ZeroExtend32 (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ZeroExtend32(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtend32(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtend32 (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ZeroExtend32 : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtend32 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ZeroExtend32(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svextw[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svextw[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svextw[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  UXTW Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtend8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ZeroExtend8 (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ZeroExtend8(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtend8(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtend8 (value As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ZeroExtend8 : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtend8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ZeroExtend8(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svextb[_u16]_m(svuint16_t inactive, svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svextb[_u16]_x(svbool_t pg, svuint16_t op)</para>
          <para>svuint16_t svextb[_u16]_z(svbool_t pg, svuint16_t op)</para>
          <para>  UXTB Zresult.H, Pg/M, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtend8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ZeroExtend8 (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ZeroExtend8(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtend8(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtend8 (value As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ZeroExtend8 : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtend8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ZeroExtend8(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svextb[_u32]_m(svuint32_t inactive, svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svextb[_u32]_x(svbool_t pg, svuint32_t op)</para>
          <para>svuint32_t svextb[_u32]_z(svbool_t pg, svuint32_t op)</para>
          <para>  UXTB Zresult.S, Pg/M, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtend8">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ZeroExtend8 (System.Numerics.Vector&lt;ulong&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ZeroExtend8(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtend8(System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtend8 (value As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ZeroExtend8 : System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtend8 value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ZeroExtend8(System::Numerics::Vector&lt;System::UInt64&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svextb[_u64]_m(svuint64_t inactive, svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svextb[_u64]_x(svbool_t pg, svuint64_t op)</para>
          <para>svuint64_t svextb[_u64]_z(svbool_t pg, svuint64_t op)</para>
          <para>  UXTB Zresult.D, Pg/M, Zop.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtendWideningLower">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ZeroExtendWideningLower (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ZeroExtendWideningLower(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningLower(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtendWideningLower (value As Vector(Of Byte)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ZeroExtendWideningLower : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningLower value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ZeroExtendWideningLower(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svunpklo[_u16](svuint8_t op)</para>
          <para>  UUNPKLO Zresult.H, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtendWideningLower">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ZeroExtendWideningLower (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ZeroExtendWideningLower(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningLower(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtendWideningLower (value As Vector(Of UShort)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ZeroExtendWideningLower : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningLower value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ZeroExtendWideningLower(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svunpklo[_u32](svuint16_t op)</para>
          <para>  UUNPKLO Zresult.S, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtendWideningLower">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ZeroExtendWideningLower (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ZeroExtendWideningLower(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningLower(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtendWideningLower (value As Vector(Of UInteger)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ZeroExtendWideningLower : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningLower value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ZeroExtendWideningLower(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svunpklo[_u64](svuint32_t op)</para>
          <para>  UUNPKLO Zresult.D, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtendWideningUpper">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ZeroExtendWideningUpper (System.Numerics.Vector&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ZeroExtendWideningUpper(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningUpper(System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtendWideningUpper (value As Vector(Of Byte)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ZeroExtendWideningUpper : System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningUpper value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ZeroExtendWideningUpper(System::Numerics::Vector&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint16_t svunpkhi[_u16](svuint8_t op)</para>
          <para>  UUNPKHI Zresult.H, Zop.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtendWideningUpper">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ZeroExtendWideningUpper (System.Numerics.Vector&lt;ushort&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ZeroExtendWideningUpper(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningUpper(System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtendWideningUpper (value As Vector(Of UShort)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ZeroExtendWideningUpper : System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningUpper value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ZeroExtendWideningUpper(System::Numerics::Vector&lt;System::UInt16&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint32_t svunpkhi[_u32](svuint16_t op)</para>
          <para>  UUNPKHI Zresult.S, Zop.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroExtendWideningUpper">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ZeroExtendWideningUpper (System.Numerics.Vector&lt;uint&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ZeroExtendWideningUpper(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningUpper(System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroExtendWideningUpper (value As Vector(Of UInteger)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ZeroExtendWideningUpper : System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZeroExtendWideningUpper value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ZeroExtendWideningUpper(System::Numerics::Vector&lt;System::UInt32&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
          <para>svuint64_t svunpkhi[_u64](svuint32_t op)</para>
          <para>  UUNPKHI Zresult.D, Zop.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ZipHigh (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ZipHigh(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svzip2[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>  ZIP2 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ZipHigh (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ZipHigh(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svzip2[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  ZIP2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ZipHigh (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ZipHigh(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svzip2[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  ZIP2 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ZipHigh (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ZipHigh(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svzip2[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  ZIP2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ZipHigh (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ZipHigh(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svzip2[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  ZIP2 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ZipHigh (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ZipHigh(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svzip2[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  ZIP2 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ZipHigh (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ZipHigh(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svzip2[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  ZIP2 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ZipHigh (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ZipHigh(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svzip2[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  ZIP2 Zresult.H, Zop1.H, Zop2.H</para>
          <para>svbool_t svzip2_b16(svbool_t op1, svbool_t op2)</para>
          <para>  ZIP2 Presult.H, Pop1.H, Pop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ZipHigh (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ZipHigh(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svzip2[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  ZIP2 Zresult.S, Zop1.S, Zop2.S</para>
          <para>svbool_t svzip2_b32(svbool_t op1, svbool_t op2)</para>
          <para>  ZIP2 Presult.S, Pop1.S, Pop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipHigh">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ZipHigh (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ZipHigh(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipHigh(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipHigh (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ZipHigh : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipHigh (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ZipHigh(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svzip2[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  ZIP2 Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svzip2_b64(svbool_t op1, svbool_t op2)</para>
          <para>  ZIP2 Presult.D, Pop1.D, Pop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;byte&gt; ZipLow (System.Numerics.Vector&lt;byte&gt; left, System.Numerics.Vector&lt;byte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of Byte), right As Vector(Of Byte)) As Vector(Of Byte)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;byte&gt; * System.Numerics.Vector&lt;byte&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::Byte&gt; ZipLow(System::Numerics::Vector&lt;System::Byte&gt; left, System::Numerics::Vector&lt;System::Byte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint8_t svzip1[_u8](svuint8_t op1, svuint8_t op2)</para>
          <para>  ZIP1 Zresult.B, Zop1.B, Zop2.B</para>
          <para>svbool_t svzip1_b8(svbool_t op1, svbool_t op2)</para>
          <para>  ZIP1 Presult.B, Pop1.B, Pop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;double&gt; ZipLow (System.Numerics.Vector&lt;double&gt; left, System.Numerics.Vector&lt;double&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float64&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;float64&gt; left, valuetype System.Numerics.Vector`1&lt;float64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of Double), right As Vector(Of Double)) As Vector(Of Double)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;double&gt; * System.Numerics.Vector&lt;double&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;double&gt; ZipLow(System::Numerics::Vector&lt;double&gt; left, System::Numerics::Vector&lt;double&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Double&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat64_t svzip1[_f64](svfloat64_t op1, svfloat64_t op2)</para>
          <para>  ZIP1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;short&gt; ZipLow (System.Numerics.Vector&lt;short&gt; left, System.Numerics.Vector&lt;short&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int16&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;int16&gt; left, valuetype System.Numerics.Vector`1&lt;int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of Short), right As Vector(Of Short)) As Vector(Of Short)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;int16&gt; * System.Numerics.Vector&lt;int16&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;short&gt; ZipLow(System::Numerics::Vector&lt;short&gt; left, System::Numerics::Vector&lt;short&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint16_t svzip1[_s16](svint16_t op1, svint16_t op2)</para>
          <para>  ZIP1 Zresult.H, Zop1.H, Zop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;int&gt; ZipLow (System.Numerics.Vector&lt;int&gt; left, System.Numerics.Vector&lt;int&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int32&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;int32&gt; left, valuetype System.Numerics.Vector`1&lt;int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of Integer), right As Vector(Of Integer)) As Vector(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;int&gt; * System.Numerics.Vector&lt;int&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;int&gt; ZipLow(System::Numerics::Vector&lt;int&gt; left, System::Numerics::Vector&lt;int&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint32_t svzip1[_s32](svint32_t op1, svint32_t op2)</para>
          <para>  ZIP1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;long&gt; ZipLow (System.Numerics.Vector&lt;long&gt; left, System.Numerics.Vector&lt;long&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int64&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;int64&gt; left, valuetype System.Numerics.Vector`1&lt;int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of Long), right As Vector(Of Long)) As Vector(Of Long)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;int64&gt; * System.Numerics.Vector&lt;int64&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;long&gt; ZipLow(System::Numerics::Vector&lt;long&gt; left, System::Numerics::Vector&lt;long&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint64_t svzip1[_s64](svint64_t op1, svint64_t op2)</para>
          <para>  ZIP1 Zresult.D, Zop1.D, Zop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;sbyte&gt; ZipLow (System.Numerics.Vector&lt;sbyte&gt; left, System.Numerics.Vector&lt;sbyte&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;int8&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;int8&gt; left, valuetype System.Numerics.Vector`1&lt;int8&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.SByte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of SByte), right As Vector(Of SByte)) As Vector(Of SByte)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;sbyte&gt; * System.Numerics.Vector&lt;sbyte&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::SByte&gt; ZipLow(System::Numerics::Vector&lt;System::SByte&gt; left, System::Numerics::Vector&lt;System::SByte&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.SByte&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svint8_t svzip1[_s8](svint8_t op1, svint8_t op2)</para>
          <para>  ZIP1 Zresult.B, Zop1.B, Zop2.B</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;float&gt; ZipLow (System.Numerics.Vector&lt;float&gt; left, System.Numerics.Vector&lt;float&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;float32&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;float32&gt; left, valuetype System.Numerics.Vector`1&lt;float32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of Single), right As Vector(Of Single)) As Vector(Of Single)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;single&gt; * System.Numerics.Vector&lt;single&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;float&gt; ZipLow(System::Numerics::Vector&lt;float&gt; left, System::Numerics::Vector&lt;float&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.Single&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svfloat32_t svzip1[_f32](svfloat32_t op1, svfloat32_t op2)</para>
          <para>  ZIP1 Zresult.S, Zop1.S, Zop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ushort&gt; ZipLow (System.Numerics.Vector&lt;ushort&gt; left, System.Numerics.Vector&lt;ushort&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of UShort), right As Vector(Of UShort)) As Vector(Of UShort)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;uint16&gt; * System.Numerics.Vector&lt;uint16&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt16&gt; ZipLow(System::Numerics::Vector&lt;System::UInt16&gt; left, System::Numerics::Vector&lt;System::UInt16&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint16_t svzip1[_u16](svuint16_t op1, svuint16_t op2)</para>
          <para>  ZIP1 Zresult.H, Zop1.H, Zop2.H</para>
          <para>svbool_t svzip1_b16(svbool_t op1, svbool_t op2)</para>
          <para>  ZIP1 Presult.H, Pop1.H, Pop2.H</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;uint&gt; ZipLow (System.Numerics.Vector&lt;uint&gt; left, System.Numerics.Vector&lt;uint&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of UInteger), right As Vector(Of UInteger)) As Vector(Of UInteger)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;uint32&gt; * System.Numerics.Vector&lt;uint32&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt32&gt; ZipLow(System::Numerics::Vector&lt;System::UInt32&gt; left, System::Numerics::Vector&lt;System::UInt32&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt32&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint32_t svzip1[_u32](svuint32_t op1, svuint32_t op2)</para>
          <para>  ZIP1 Zresult.S, Zop1.S, Zop2.S</para>
          <para>svbool_t svzip1_b32(svbool_t op1, svbool_t op2)</para>
          <para>  ZIP1 Presult.S, Pop1.S, Pop2.S</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZipLow">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;ulong&gt; ZipLow (System.Numerics.Vector&lt;ulong&gt; left, System.Numerics.Vector&lt;ulong&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; ZipLow(valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; left, valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Intrinsics.Arm.Sve.ZipLow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZipLow (left As Vector(Of ULong), right As Vector(Of ULong)) As Vector(Of ULong)" />
      <MemberSignature Language="F#" Value="static member ZipLow : System.Numerics.Vector&lt;uint64&gt; * System.Numerics.Vector&lt;uint64&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Runtime.Intrinsics.Arm.Sve.ZipLow (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;System::UInt64&gt; ZipLow(System::Numerics::Vector&lt;System::UInt64&gt; left, System::Numerics::Vector&lt;System::UInt64&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;System.UInt64&gt;" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
          <para>svuint64_t svzip1[_u64](svuint64_t op1, svuint64_t op2)</para>
          <para>  ZIP1 Zresult.D, Zop1.D, Zop2.D</para>
          <para>svbool_t svzip1_b64(svbool_t op1, svbool_t op2)</para>
          <para>  ZIP1 Presult.D, Pop1.D, Pop2.D</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MeasurementHandlers" FullName="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers">
  <TypeSignature Language="C#" Value="public class MeasurementHandlers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MeasurementHandlers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers" />
  <TypeSignature Language="VB.NET" Value="Public Class MeasurementHandlers" />
  <TypeSignature Language="F#" Value="type MeasurementHandlers = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class MeasurementHandlers" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A set of supported measurement types. If a listener does not support a given type, the measurement will be skipped.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MeasurementHandlers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MeasurementHandlers();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteHandler">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.MeasurementCallback&lt;byte&gt;? ByteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.MeasurementCallback`1&lt;unsigned int8&gt; ByteHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.ByteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ByteHandler As MeasurementCallback(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.ByteHandler : System.Diagnostics.Metrics.MeasurementCallback&lt;byte&gt; with get, set" Usage="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.ByteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::MeasurementCallback&lt;System::Byte&gt; ^ ByteHandler { System::Diagnostics::Metrics::MeasurementCallback&lt;System::Byte&gt; ^ get(); void set(System::Diagnostics::Metrics::MeasurementCallback&lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.MeasurementCallback&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" /> for <see cref="T:System.Byte" />. If null, byte measurements will be skipped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalHandler">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.MeasurementCallback&lt;decimal&gt;? DecimalHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.MeasurementCallback`1&lt;valuetype System.Decimal&gt; DecimalHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.DecimalHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalHandler As MeasurementCallback(Of Decimal)" />
      <MemberSignature Language="F#" Value="member this.DecimalHandler : System.Diagnostics.Metrics.MeasurementCallback&lt;decimal&gt; with get, set" Usage="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.DecimalHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::MeasurementCallback&lt;System::Decimal&gt; ^ DecimalHandler { System::Diagnostics::Metrics::MeasurementCallback&lt;System::Decimal&gt; ^ get(); void set(System::Diagnostics::Metrics::MeasurementCallback&lt;System::Decimal&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.MeasurementCallback&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" /> for <see cref="T:System.Decimal" />. If null, decimal measurements will be skipped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleHandler">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.MeasurementCallback&lt;double&gt;? DoubleHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.MeasurementCallback`1&lt;float64&gt; DoubleHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.DoubleHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property DoubleHandler As MeasurementCallback(Of Double)" />
      <MemberSignature Language="F#" Value="member this.DoubleHandler : System.Diagnostics.Metrics.MeasurementCallback&lt;double&gt; with get, set" Usage="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.DoubleHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::MeasurementCallback&lt;double&gt; ^ DoubleHandler { System::Diagnostics::Metrics::MeasurementCallback&lt;double&gt; ^ get(); void set(System::Diagnostics::Metrics::MeasurementCallback&lt;double&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.MeasurementCallback&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" /> for <see cref="T:System.Double" />. If null, double measurements will be skipped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatHandler">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.MeasurementCallback&lt;float&gt;? FloatHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.MeasurementCallback`1&lt;float32&gt; FloatHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.FloatHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property FloatHandler As MeasurementCallback(Of Single)" />
      <MemberSignature Language="F#" Value="member this.FloatHandler : System.Diagnostics.Metrics.MeasurementCallback&lt;single&gt; with get, set" Usage="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.FloatHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::MeasurementCallback&lt;float&gt; ^ FloatHandler { System::Diagnostics::Metrics::MeasurementCallback&lt;float&gt; ^ get(); void set(System::Diagnostics::Metrics::MeasurementCallback&lt;float&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.MeasurementCallback&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" /> for <see cref="T:System.Single" />. If null, float measurements will be skipped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntHandler">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.MeasurementCallback&lt;int&gt;? IntHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.MeasurementCallback`1&lt;int32&gt; IntHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.IntHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property IntHandler As MeasurementCallback(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.IntHandler : System.Diagnostics.Metrics.MeasurementCallback&lt;int&gt; with get, set" Usage="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.IntHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::MeasurementCallback&lt;int&gt; ^ IntHandler { System::Diagnostics::Metrics::MeasurementCallback&lt;int&gt; ^ get(); void set(System::Diagnostics::Metrics::MeasurementCallback&lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.MeasurementCallback&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" /> for <see cref="T:System.Int32" />. If null, int measurements will be skipped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LongHandler">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.MeasurementCallback&lt;long&gt;? LongHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.MeasurementCallback`1&lt;int64&gt; LongHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.LongHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property LongHandler As MeasurementCallback(Of Long)" />
      <MemberSignature Language="F#" Value="member this.LongHandler : System.Diagnostics.Metrics.MeasurementCallback&lt;int64&gt; with get, set" Usage="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.LongHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::MeasurementCallback&lt;long&gt; ^ LongHandler { System::Diagnostics::Metrics::MeasurementCallback&lt;long&gt; ^ get(); void set(System::Diagnostics::Metrics::MeasurementCallback&lt;long&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.MeasurementCallback&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" /> for <see cref="T:System.Int64" />. If null, long measurements will be skipped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortHandler">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Metrics.MeasurementCallback&lt;short&gt;? ShortHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Metrics.MeasurementCallback`1&lt;int16&gt; ShortHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.ShortHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortHandler As MeasurementCallback(Of Short)" />
      <MemberSignature Language="F#" Value="member this.ShortHandler : System.Diagnostics.Metrics.MeasurementCallback&lt;int16&gt; with get, set" Usage="Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers.ShortHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Metrics::MeasurementCallback&lt;short&gt; ^ ShortHandler { System::Diagnostics::Metrics::MeasurementCallback&lt;short&gt; ^ get(); void set(System::Diagnostics::Metrics::MeasurementCallback&lt;short&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Metrics.MeasurementCallback&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" /> for <see cref="T:System.Int16" />. If null, short measurements will be skipped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

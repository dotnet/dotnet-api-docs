<Type Name="InstrumentRule" FullName="Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule">
  <TypeSignature Language="C#" Value="public class InstrumentRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstrumentRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule" />
  <TypeSignature Language="VB.NET" Value="Public Class InstrumentRule" />
  <TypeSignature Language="F#" Value="type InstrumentRule = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstrumentRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp;net-9.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="meterName">The <see cref="P:System.Diagnostics.Metrics.Meter.Name">Meter.Name</see> or prefix.</param>
    <param name="instrumentName">The <see cref="P:System.Diagnostics.Metrics.Instrument.Name">Instrument.Name</see>.</param>
    <param name="listenerName">The <see cref="P:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Name">IMetricsListener.Name</see>.</param>
    <param name="scopes">A bitwise combination of the enumeration values that specifies the scopes to consider.</param>
    <param name="enable">
      <see langword="true" /> to enable the matched instrument for this listener; otherwise, <see langword="false" />.</param>
    <summary>
            Contains a set of parameters used to determine which instruments are enabled for which listeners. Unspecified
            parameters match anything.
            </summary>
    <remarks>
      <para>The most specific rule that matches a given instrument will be used. The priority of parameters is as follows:</para>
      <para>- MeterName, either an exact match, or the longest prefix match. See <see cref="P:System.Diagnostics.Metrics.Meter.Name">Meter.Name</see>.</para>
      <para>- InstrumentName, an exact match. <see cref="P:System.Diagnostics.Metrics.Instrument.Name">Instrument.Name</see>.</para>
      <para>- ListenerName, an exact match. <see cref="P:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Name">IMetricsListener.Name</see>.</para>
      <para>- Scopes</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstrumentRule (string? meterName, string? instrumentName, string? listenerName, Microsoft.Extensions.Diagnostics.Metrics.MeterScope scopes, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string meterName, string instrumentName, string listenerName, valuetype Microsoft.Extensions.Diagnostics.Metrics.MeterScope scopes, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.#ctor(System.String,System.String,System.String,Microsoft.Extensions.Diagnostics.Metrics.MeterScope,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (meterName As String, instrumentName As String, listenerName As String, scopes As MeterScope, enable As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule : string * string * string * Microsoft.Extensions.Diagnostics.Metrics.MeterScope * bool -&gt; Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule" Usage="new Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule (meterName, instrumentName, listenerName, scopes, enable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstrumentRule(System::String ^ meterName, System::String ^ instrumentName, System::String ^ listenerName, Microsoft::Extensions::Diagnostics::Metrics::MeterScope scopes, bool enable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="meterName" Type="System.String" />
        <Parameter Name="instrumentName" Type="System.String" />
        <Parameter Name="listenerName" Type="System.String" />
        <Parameter Name="scopes" Type="Microsoft.Extensions.Diagnostics.Metrics.MeterScope" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="meterName">The <see cref="P:System.Diagnostics.Metrics.Meter.Name">Meter.Name</see> or prefix.</param>
        <param name="instrumentName">The <see cref="P:System.Diagnostics.Metrics.Instrument.Name">Instrument.Name</see>.</param>
        <param name="listenerName">The <see cref="P:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Name">IMetricsListener.Name</see>.</param>
        <param name="scopes">A bitwise combination of the enumeration values that specifies the scopes to consider.</param>
        <param name="enable">
          <see langword="true" /> to enable the matched instrument for this listener; otherwise, <see langword="false" />.</param>
        <summary>
            Contains a set of parameters used to determine which instruments are enabled for which listeners. Unspecified
            parameters match anything.
            </summary>
        <remarks>
          <para>The most specific rule that matches a given instrument will be used. The priority of parameters is as follows:</para>
          <para>- MeterName, either an exact match, or the longest prefix match. See <see cref="P:System.Diagnostics.Metrics.Meter.Name">Meter.Name</see>.</para>
          <para>- InstrumentName, an exact match. <see cref="P:System.Diagnostics.Metrics.Instrument.Name">Instrument.Name</see>.</para>
          <para>- ListenerName, an exact match. <see cref="P:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Name">IMetricsListener.Name</see>.</para>
          <para>- Scopes</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public bool Enable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.Enable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Enable As Boolean" />
      <MemberSignature Language="F#" Value="member this.Enable : bool" Usage="Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.Enable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the instrument should be enabled for the listener.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstrumentName">
      <MemberSignature Language="C#" Value="public string? InstrumentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstrumentName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.InstrumentName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstrumentName As String" />
      <MemberSignature Language="F#" Value="member this.InstrumentName : string" Usage="Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.InstrumentName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InstrumentName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:System.Diagnostics.Metrics.Instrument.Name">Instrument.Name</see>, an exact match.
            </summary>
        <value>
            The instrument name. If <see langword="null" />, all instruments for the meter are matched.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenerName">
      <MemberSignature Language="C#" Value="public string? ListenerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListenerName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.ListenerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListenerName As String" />
      <MemberSignature Language="F#" Value="member this.ListenerName : string" Usage="Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.ListenerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListenerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Name">IMetricsListener.Name</see>, an exact match.
            </summary>
        <value>
            The listener name. If <see langword="null" />, all listeners are matched.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeterName">
      <MemberSignature Language="C#" Value="public string? MeterName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MeterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.MeterName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeterName As String" />
      <MemberSignature Language="F#" Value="member this.MeterName : string" Usage="Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.MeterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MeterName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:System.Diagnostics.Metrics.Meter.Name">Meter.Name</see>, either an exact match or the longest prefix match. Only full segment matches are considered.
            </summary>
        <value>
            The meter name. If <see langword="null" />, all meters are matched.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scopes">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.Metrics.MeterScope Scopes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Diagnostics.Metrics.MeterScope Scopes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.Scopes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scopes As MeterScope" />
      <MemberSignature Language="F#" Value="member this.Scopes : Microsoft.Extensions.Diagnostics.Metrics.MeterScope" Usage="Microsoft.Extensions.Diagnostics.Metrics.InstrumentRule.Scopes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Diagnostics::Metrics::MeterScope Scopes { Microsoft::Extensions::Diagnostics::Metrics::MeterScope get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.Metrics.MeterScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.MeterScope" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property is used to distinguish between meters created via <see cref="T:System.Diagnostics.Metrics.Meter" /> constructors (<see cref="F:Microsoft.Extensions.Diagnostics.Metrics.MeterScope.Global" />)
            and those created via Dependency Injection with <see cref="M:System.Diagnostics.Metrics.IMeterFactory.Create(System.Diagnostics.Metrics.MeterOptions)" /> (<see cref="F:Microsoft.Extensions.Diagnostics.Metrics.MeterScope.Local" />).
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

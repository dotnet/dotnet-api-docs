<Type Name="IMetricsListener" FullName="Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener">
  <TypeSignature Language="C#" Value="public interface IMetricsListener" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IMetricsListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMetricsListener" />
  <TypeSignature Language="F#" Value="type IMetricsListener = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMetricsListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0;net-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a type used to listen to metrics emitted from the system.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMeasurementHandlers">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers GetMeasurementHandlers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers GetMeasurementHandlers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.GetMeasurementHandlers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMeasurementHandlers () As MeasurementHandlers" />
      <MemberSignature Language="F#" Value="abstract member GetMeasurementHandlers : unit -&gt; Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers" Usage="iMetricsListener.GetMeasurementHandlers " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Diagnostics::Metrics::MeasurementHandlers ^ GetMeasurementHandlers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called once to get the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers" /> that will be used to process measurements.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.MeasurementHandlers" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Extensions.Diagnostics.Metrics.IObservableInstrumentsSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Extensions.Diagnostics.Metrics.IObservableInstrumentsSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Initialize(Microsoft.Extensions.Diagnostics.Metrics.IObservableInstrumentsSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (source As IObservableInstrumentsSource)" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Extensions.Diagnostics.Metrics.IObservableInstrumentsSource -&gt; unit" Usage="iMetricsListener.Initialize source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(Microsoft::Extensions::Diagnostics::Metrics::IObservableInstrumentsSource ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Extensions.Diagnostics.Metrics.IObservableInstrumentsSource" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.IObservableInstrumentsSource" /> that can be called to request current metrics.</param>
        <summary>
            Called once by the runtime to provide a <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.IObservableInstrumentsSource" /> used to pull for fresh metrics data.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstrumentPublished">
      <MemberSignature Language="C#" Value="public bool InstrumentPublished (System.Diagnostics.Metrics.Instrument instrument, out object? userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstrumentPublished(class System.Diagnostics.Metrics.Instrument instrument, [out] object&amp; userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.InstrumentPublished(System.Diagnostics.Metrics.Instrument,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstrumentPublished (instrument As Instrument, ByRef userState As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member InstrumentPublished : System.Diagnostics.Metrics.Instrument * obj -&gt; bool" Usage="iMetricsListener.InstrumentPublished (instrument, userState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstrumentPublished(System::Diagnostics::Metrics::Instrument ^ instrument, [Runtime::InteropServices::Out] System::Object ^ % userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instrument" Type="System.Diagnostics.Metrics.Instrument" />
        <Parameter Name="userState" Type="System.Object" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instrument">The new <see cref="T:System.Diagnostics.Metrics.Instrument" />.</param>
        <param name="userState">Listener state associated with this instrument. This will be returned to <see cref="T:System.Diagnostics.Metrics.MeasurementCallback`1" />
            and <see cref="M:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.MeasurementsCompleted(System.Diagnostics.Metrics.Instrument,System.Object)" />.</param>
        <summary>
            Called when a new instrument is created and enabled by a matching rule.
            </summary>
        <returns>Returns true if the listener wants to subscribe to this instrument, otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementsCompleted">
      <MemberSignature Language="C#" Value="public void MeasurementsCompleted (System.Diagnostics.Metrics.Instrument instrument, object? userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MeasurementsCompleted(class System.Diagnostics.Metrics.Instrument instrument, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.MeasurementsCompleted(System.Diagnostics.Metrics.Instrument,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MeasurementsCompleted (instrument As Instrument, userState As Object)" />
      <MemberSignature Language="F#" Value="abstract member MeasurementsCompleted : System.Diagnostics.Metrics.Instrument * obj -&gt; unit" Usage="iMetricsListener.MeasurementsCompleted (instrument, userState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MeasurementsCompleted(System::Diagnostics::Metrics::Instrument ^ instrument, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instrument" Type="System.Diagnostics.Metrics.Instrument" />
        <Parameter Name="userState" Type="System.Object">
          <Attributes>
            <Attribute FrameworkAlternate="net-8.0;net-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instrument">The <see cref="T:System.Diagnostics.Metrics.Instrument" /> being disabled.</param>
        <param name="userState">The original listener state returned by <see cref="M:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.InstrumentPublished(System.Diagnostics.Metrics.Instrument,System.Object@)" />.</param>
        <summary>
            Called when a instrument is disabled by the producer or a rules change.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Extensions.Diagnostics.Metrics.IMetricsListener.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Diagnostics.Abstractions</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the listener. This is used to identify the listener in the rules configuration.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

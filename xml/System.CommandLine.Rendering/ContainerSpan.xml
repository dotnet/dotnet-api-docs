<Type Name="ContainerSpan" FullName="System.CommandLine.Rendering.ContainerSpan">
  <TypeSignature Language="C#" Value="public class ContainerSpan : System.CommandLine.Rendering.TextSpan, System.Collections.Generic.IEnumerable&lt;System.CommandLine.Rendering.TextSpan&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.CommandLine.Rendering.TextSpan&gt;, System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Rendering.TextSpan&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerSpan extends System.CommandLine.Rendering.TextSpan implements class System.Collections.Generic.IEnumerable`1&lt;class System.CommandLine.Rendering.TextSpan&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;class System.CommandLine.Rendering.TextSpan&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;class System.CommandLine.Rendering.TextSpan&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Rendering.ContainerSpan" />
  <TypeSignature Language="VB.NET" Value="Public Class ContainerSpan&#xA;Inherits TextSpan&#xA;Implements IEnumerable(Of TextSpan), IReadOnlyCollection(Of TextSpan), IReadOnlyList(Of TextSpan)" />
  <TypeSignature Language="F#" Value="type ContainerSpan = class&#xA;    inherit TextSpan&#xA;    interface IReadOnlyList&lt;TextSpan&gt;&#xA;    interface seq&lt;TextSpan&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;TextSpan&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContainerSpan : System::CommandLine::Rendering::TextSpan, System::Collections::Generic::IEnumerable&lt;System::CommandLine::Rendering::TextSpan ^&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::CommandLine::Rendering::TextSpan ^&gt;, System::Collections::Generic::IReadOnlyList&lt;System::CommandLine::Rendering::TextSpan ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.Rendering</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CommandLine.Rendering.TextSpan</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.CommandLine.Rendering.TextSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.CommandLine.Rendering.TextSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;System.CommandLine.Rendering.TextSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerSpan (params System.CommandLine.Rendering.TextSpan[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CommandLine.Rendering.TextSpan[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.ContainerSpan.#ctor(System.CommandLine.Rendering.TextSpan[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray children As TextSpan())" />
      <MemberSignature Language="F#" Value="new System.CommandLine.Rendering.ContainerSpan : System.CommandLine.Rendering.TextSpan[] -&gt; System.CommandLine.Rendering.ContainerSpan" Usage="new System.CommandLine.Rendering.ContainerSpan children" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContainerSpan(... cli::array &lt;System::CommandLine::Rendering::TextSpan ^&gt; ^ children);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="children" Type="System.CommandLine.Rendering.TextSpan[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="children">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.CommandLine.Rendering.TextSpan child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.CommandLine.Rendering.TextSpan child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.ContainerSpan.Add(System.CommandLine.Rendering.TextSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TextSpan)" />
      <MemberSignature Language="F#" Value="member this.Add : System.CommandLine.Rendering.TextSpan -&gt; unit" Usage="containerSpan.Add child" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::CommandLine::Rendering::TextSpan ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.CommandLine.Rendering.TextSpan" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.ContainerSpan.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (text As String)" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; unit" Usage="containerSpan.Add text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Rendering.ContainerSpan.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.CommandLine.Rendering.ContainerSpan.ContentLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ContentLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Rendering.ContainerSpan.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.CommandLine.Rendering.ContainerSpan.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.CommandLine.Rendering.TextSpan&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.CommandLine.Rendering.TextSpan&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.ContainerSpan.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TextSpan)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.CommandLine.Rendering.TextSpan&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.CommandLine.Rendering.TextSpan&gt;" Usage="containerSpan.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::CommandLine::Rendering::TextSpan ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.CommandLine.Rendering.TextSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CommandLine.Rendering.TextSpan this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CommandLine.Rendering.TextSpan Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CommandLine.Rendering.ContainerSpan.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TextSpan" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.CommandLine.Rendering.TextSpan" Usage="System.CommandLine.Rendering.ContainerSpan.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CommandLine::Rendering::TextSpan ^ default[int] { System::CommandLine::Rendering::TextSpan ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Rendering.TextSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.ContainerSpan.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="containerSpan.System.Collections.IEnumerable.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.IO.TextWriter writer, System.CommandLine.Rendering.OutputMode outputMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.IO.TextWriter writer, valuetype System.CommandLine.Rendering.OutputMode outputMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.ContainerSpan.WriteTo(System.IO.TextWriter,System.CommandLine.Rendering.OutputMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As TextWriter, outputMode As OutputMode)" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.IO.TextWriter * System.CommandLine.Rendering.OutputMode -&gt; unit" Usage="containerSpan.WriteTo (writer, outputMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::IO::TextWriter ^ writer, System::CommandLine::Rendering::OutputMode outputMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="outputMode" Type="System.CommandLine.Rendering.OutputMode" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="outputMode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

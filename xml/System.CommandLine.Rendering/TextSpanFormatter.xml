<Type Name="TextSpanFormatter" FullName="System.CommandLine.Rendering.TextSpanFormatter">
  <TypeSignature Language="C#" Value="public class TextSpanFormatter : ICustomFormatter, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextSpanFormatter extends System.Object implements class System.ICustomFormatter, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.CommandLine.Rendering.TextSpanFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class TextSpanFormatter&#xA;Implements ICustomFormatter, IFormatProvider" />
  <TypeSignature Language="F#" Value="type TextSpanFormatter = class&#xA;    interface ICustomFormatter&#xA;    interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSpanFormatter : ICustomFormatter, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.CommandLine.Rendering</AssemblyName>
    <AssemblyVersion>0.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICustomFormatter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextSpanFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.TextSpanFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextSpanFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFormatter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddFormatter&lt;T&gt; (Func&lt;T,System.CommandLine.Rendering.TextSpan&gt; format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFormatter&lt;T&gt;(class System.Func`2&lt;!!T, class System.CommandLine.Rendering.TextSpan&gt; format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.TextSpanFormatter.AddFormatter``1(System.Func{``0,System.CommandLine.Rendering.TextSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFormatter(Of T) (format As Func(Of T, TextSpan))" />
      <MemberSignature Language="F#" Value="member this.AddFormatter : Func&lt;'T, System.CommandLine.Rendering.TextSpan&gt; -&gt; unit" Usage="textSpanFormatter.AddFormatter format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AddFormatter(Func&lt;T, System::CommandLine::Rendering::TextSpan ^&gt; ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="format" Type="System.Func&lt;T,System.CommandLine.Rendering.TextSpan&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFormatter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddFormatter&lt;T&gt; (Func&lt;T,FormattableString&gt; format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFormatter&lt;T&gt;(class System.Func`2&lt;!!T, class System.FormattableString&gt; format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.TextSpanFormatter.AddFormatter``1(System.Func{``0,System.FormattableString})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFormatter(Of T) (format As Func(Of T, FormattableString))" />
      <MemberSignature Language="F#" Value="member this.AddFormatter : Func&lt;'T, FormattableString&gt; -&gt; unit" Usage="textSpanFormatter.AddFormatter format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AddFormatter(Func&lt;T, FormattableString ^&gt; ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="format" Type="System.Func&lt;T,System.FormattableString&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.CommandLine.Rendering.TextSpan Format (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CommandLine.Rendering.TextSpan Format(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.TextSpanFormatter.Format(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (value As Object) As TextSpan" />
      <MemberSignature Language="F#" Value="member this.Format : obj -&gt; System.CommandLine.Rendering.TextSpan" Usage="textSpanFormatter.Format value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CommandLine::Rendering::TextSpan ^ Format(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Rendering.TextSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseToSpan">
      <MemberSignature Language="C#" Value="public System.CommandLine.Rendering.TextSpan ParseToSpan (FormattableString formattableString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CommandLine.Rendering.TextSpan ParseToSpan(class System.FormattableString formattableString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.TextSpanFormatter.ParseToSpan(System.FormattableString)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseToSpan (formattableString As FormattableString) As TextSpan" />
      <MemberSignature Language="F#" Value="member this.ParseToSpan : FormattableString -&gt; System.CommandLine.Rendering.TextSpan" Usage="textSpanFormatter.ParseToSpan formattableString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CommandLine::Rendering::TextSpan ^ ParseToSpan(FormattableString ^ formattableString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CommandLine.Rendering.TextSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattableString" Type="System.FormattableString" />
      </Parameters>
      <Docs>
        <param name="formattableString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICustomFormatter.Format">
      <MemberSignature Language="C#" Value="string ICustomFormatter.Format (string format, object arg, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ICustomFormatter.Format(string format, object arg, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.TextSpanFormatter.System#ICustomFormatter#Format(System.String,System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function Format (format As String, arg As Object, formatProvider As IFormatProvider) As String Implements ICustomFormatter.Format" />
      <MemberSignature Language="F#" Value="abstract member System.ICustomFormatter.Format : string * obj * IFormatProvider -&gt; string&#xA;override this.System.ICustomFormatter.Format : string * obj * IFormatProvider -&gt; string" Usage="textSpanFormatter.System.ICustomFormatter.Format (format, arg, formatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ICustomFormatter.Format(System::String ^ format, System::Object ^ arg, IFormatProvider ^ formatProvider) = ICustomFormatter::Format;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="arg">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormatProvider.GetFormat">
      <MemberSignature Language="C#" Value="object IFormatProvider.GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IFormatProvider.GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CommandLine.Rendering.TextSpanFormatter.System#IFormatProvider#GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormat (formatType As Type) As Object Implements IFormatProvider.GetFormat" />
      <MemberSignature Language="F#" Value="abstract member System.IFormatProvider.GetFormat : Type -&gt; obj&#xA;override this.System.IFormatProvider.GetFormat : Type -&gt; obj" Usage="textSpanFormatter.System.IFormatProvider.GetFormat formatType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IFormatProvider.GetFormat(Type ^ formatType) = IFormatProvider::GetFormat;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.CommandLine.Rendering</AssemblyName>
        <AssemblyVersion>0.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

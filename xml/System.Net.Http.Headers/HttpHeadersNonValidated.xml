<Type Name="HttpHeadersNonValidated" FullName="System.Net.Http.Headers.HttpHeadersNonValidated">
  <TypeSignature Language="C#" Value="public readonly struct HttpHeadersNonValidated : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Net.Http.Headers.HeaderStringValues&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Net.Http.Headers.HeaderStringValues&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;string,System.Net.Http.Headers.HeaderStringValues&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HttpHeadersNonValidated extends System.ValueType implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype System.Net.Http.Headers.HeaderStringValues&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype System.Net.Http.Headers.HeaderStringValues&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, valuetype System.Net.Http.Headers.HeaderStringValues&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.Headers.HttpHeadersNonValidated" />
  <TypeSignature Language="VB.NET" Value="Public Structure HttpHeadersNonValidated&#xA;Implements IEnumerable(Of KeyValuePair(Of String, HeaderStringValues)), IReadOnlyCollection(Of KeyValuePair(Of String, HeaderStringValues)), IReadOnlyDictionary(Of String, HeaderStringValues)" />
  <TypeSignature Language="F#" Value="type HttpHeadersNonValidated = struct&#xA;    interface seq&lt;KeyValuePair&lt;string, HeaderStringValues&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;string, HeaderStringValues&gt;&gt;&#xA;    interface IReadOnlyDictionary&lt;string, HeaderStringValues&gt;" />
  <TypeSignature Language="C++ CLI" Value="public value class HttpHeadersNonValidated : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Net::Http::Headers::HeaderStringValues&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Net::Http::Headers::HeaderStringValues&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Net::Http::Headers::HeaderStringValues&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a view on top of a <see cref="T:System.Net.Http.Headers.HttpHeaders" /> collection that avoids forcing validation or parsing on its contents.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

The view surfaces data as it's stored in the headers collection.  Any header values that have not yet been parsed / validated won't be
            as part of any accesses from this view, e.g. a raw header value of "one, two" that hasn't yet been parsed due to other operations
            on the <xref:System.Net.Http.Headers.HttpHeaders> will be surfaced as a single header value rather than two.  For any header values that have already
            been parsed and validated, that value will be converted to a string to be returned from operations on this view.

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string headerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string headerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Headers.HttpHeadersNonValidated.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (headerName As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="httpHeadersNonValidated.Contains headerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ headerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="headerName">The name of the header.</param>
        <summary>Gets whether the collection contains the specified header.</summary>
        <returns>
          <see langword="true" /> if the collection contains the header; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Headers.HttpHeadersNonValidated.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Http.Headers.HttpHeadersNonValidated.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of headers stored in the collection.</summary>
        <value>The number of elements in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Multiple header values associated with the same header name are considered to be one header as far as this count is concerned.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpHeadersNonValidated.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Net.Http.Headers.HttpHeadersNonValidated/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Headers.HttpHeadersNonValidated.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As HttpHeadersNonValidated.Enumerator" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Net.Http.Headers.HttpHeadersNonValidated.Enumerator" Usage="httpHeadersNonValidated.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::Headers::HttpHeadersNonValidated::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpHeadersNonValidated+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an enumerator that iterates through the <see cref="T:System.Net.Http.Headers.HttpHeadersNonValidated" />.</summary>
        <returns>An enumerator that iterates through the <see cref="T:System.Net.Http.Headers.HttpHeadersNonValidated" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HeaderStringValues this[string headerName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.Headers.HeaderStringValues Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Headers.HttpHeadersNonValidated.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(headerName As String) As HeaderStringValues" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Net.Http.Headers.HeaderStringValues" Usage="System.Net.Http.Headers.HttpHeadersNonValidated.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HeaderStringValues default[System::String ^] { System::Net::Http::Headers::HeaderStringValues get(System::String ^ headerName); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HeaderStringValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="headerName">The name of the header.</param>
        <summary>Gets the values for the specified header name.</summary>
        <value>The values for the specified header.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">The header was not contained in the collection.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Net.Http.Headers.HeaderStringValues&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,HeaderStringValues&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype System.Net.Http.Headers.HeaderStringValues&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Headers.HttpHeadersNonValidated.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Net#Http#Headers#HeaderStringValues&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, HeaderStringValues)) Implements IEnumerable(Of KeyValuePair(Of String, HeaderStringValues)).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Net.Http.Headers.HeaderStringValues&gt;&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Net.Http.Headers.HeaderStringValues&gt;&gt;" Usage="httpHeadersNonValidated.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Net::Http::Headers::HeaderStringValues&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Net::Http::Headers::HeaderStringValues&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.ContainsKey">
      <MemberSignature Language="C#" Value="bool IReadOnlyDictionary&lt;string,HeaderStringValues&gt;.ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Headers.HttpHeadersNonValidated.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,System#Net#Http#Headers#HeaderStringValues&gt;#ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function ContainsKey (key As String) As Boolean Implements IReadOnlyDictionary(Of String, HeaderStringValues).ContainsKey" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.ContainsKey : string -&gt; bool&#xA;override this.System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.ContainsKey : string -&gt; bool" Usage="httpHeadersNonValidated.System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.ContainsKey key" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.ContainsKey(System::String ^ key) = System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Net::Http::Headers::HeaderStringValues&gt;::ContainsKey;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key to locate.</param>
        <summary>Determines whether the read-only dictionary contains an element that has the specified key.</summary>
        <returns>
          <see langword="true" /> if the read-only dictionary contains an element that has the specified key; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;string&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Headers.HttpHeadersNonValidated.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,System#Net#Http#Headers#HeaderStringValues&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of String) Implements IReadOnlyDictionary(Of String, HeaderStringValues).Keys" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Keys : seq&lt;string&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;System::String,System::Net::Http::Headers::HeaderStringValues&gt;::Keys { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary>
        <value>An enumerable collection that contains the keys in the read-only dictionary.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.TryGetValue">
      <MemberSignature Language="C#" Value="bool IReadOnlyDictionary&lt;string,HeaderStringValues&gt;.TryGetValue (string key, out System.Net.Http.Headers.HeaderStringValues value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.TryGetValue(string key, [out] valuetype System.Net.Http.Headers.HeaderStringValues&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Headers.HttpHeadersNonValidated.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,System#Net#Http#Headers#HeaderStringValues&gt;#TryGetValue(System.String,System.Net.Http.Headers.HeaderStringValues@)" />
      <MemberSignature Language="VB.NET" Value="Function TryGetValue (key As String, ByRef value As HeaderStringValues) As Boolean Implements IReadOnlyDictionary(Of String, HeaderStringValues).TryGetValue" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.TryGetValue : string * HeaderStringValues -&gt; bool&#xA;override this.System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.TryGetValue : string * HeaderStringValues -&gt; bool" Usage="httpHeadersNonValidated.System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.TryGetValue (key, value)" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Net::Http::Headers::HeaderStringValues % value) = System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Net::Http::Headers::HeaderStringValues&gt;::TryGetValue;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Net.Http.Headers.HeaderStringValues" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">The key to locate.</param>
        <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, contains the default value of <see cref="T:System.Net.Http.Headers.HeaderStringValues" />. This parameter is passed uninitialized.</param>
        <summary>Gets the value that is associated with the specified key.</summary>
        <returns>
          <see langword="true" /> if the collection contains the specified header; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Headers.HeaderStringValues&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Net.Http.Headers.HeaderStringValues&gt; System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.Headers.HttpHeadersNonValidated.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,System#Net#Http#Headers#HeaderStringValues&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of HeaderStringValues) Implements IReadOnlyDictionary(Of String, HeaderStringValues).Values" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Values : seq&lt;System.Net.Http.Headers.HeaderStringValues&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Net.Http.Headers.HeaderStringValues&gt;.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;System::Net::Http::Headers::HeaderStringValues&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;System::String,System::Net::Http::Headers::HeaderStringValues&gt;::Values { System::Collections::Generic::IEnumerable&lt;System::Net::Http::Headers::HeaderStringValues&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Net.Http.Headers.HeaderStringValues&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary>
        <value>An enumerable collection that contains the values in the read-only dictionary.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Headers.HttpHeadersNonValidated.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpHeadersNonValidated.System.Collections.IEnumerable.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

This member is an explicit interface member implementation. It can be used only when the <xref:System.Net.Http.Headers.HttpHeadersNonValidated> instance is cast to an <xref:System.Collections.IEnumerable> interface.

          ]]></format>
        </remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryGetValues">
      <MemberSignature Language="C#" Value="public bool TryGetValues (string headerName, out System.Net.Http.Headers.HeaderStringValues values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValues(string headerName, [out] valuetype System.Net.Http.Headers.HeaderStringValues&amp; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Headers.HttpHeadersNonValidated.TryGetValues(System.String,System.Net.Http.Headers.HeaderStringValues@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValues (headerName As String, ByRef values As HeaderStringValues) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetValues : string * HeaderStringValues -&gt; bool" Usage="httpHeadersNonValidated.TryGetValues (headerName, values)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValues(System::String ^ headerName, [Runtime::InteropServices::Out] System::Net::Http::Headers::HeaderStringValues % values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="values" Type="System.Net.Http.Headers.HeaderStringValues" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName">The name of the header.</param>
        <param name="values">The retrieved header values.</param>
        <summary>Attempts to retrieve the values associated with the specified header name.</summary>
        <returns>
          <see langword="true" /> if the collection contains the specified header; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

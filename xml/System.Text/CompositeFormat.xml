<Type Name="CompositeFormat" FullName="System.Text.CompositeFormat">
  <TypeSignature Language="C#" Value="public sealed class CompositeFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositeFormat extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.CompositeFormat" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositeFormat" />
  <TypeSignature Language="F#" Value="type CompositeFormat = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeFormat sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Text.CompositeFormat.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As String" />
      <MemberSignature Language="F#" Value="member this.Format : string" Usage="System.Text.CompositeFormat.Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumArgumentCount">
      <MemberSignature Language="C#" Value="public int MinimumArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.CompositeFormat.MinimumArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumArgumentCount As Integer" />
      <MemberSignature Language="F#" Value="member this.MinimumArgumentCount : int" Usage="System.Text.CompositeFormat.MinimumArgumentCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumArgumentCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.CompositeFormat Parse (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.CompositeFormat Parse(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CompositeFormat.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (format As String) As CompositeFormat" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Text.CompositeFormat" Usage="System.Text.CompositeFormat.Parse format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::CompositeFormat ^ Parse(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.CompositeFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.StringSyntax("CompositeFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.StringSyntax("CompositeFormat")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

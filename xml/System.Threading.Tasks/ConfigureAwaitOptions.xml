<Type Name="ConfigureAwaitOptions" FullName="System.Threading.Tasks.ConfigureAwaitOptions">
  <TypeSignature Language="C#" Value="public enum ConfigureAwaitOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConfigureAwaitOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ConfigureAwaitOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConfigureAwaitOptions" />
  <TypeSignature Language="F#" Value="type ConfigureAwaitOptions = " />
  <TypeSignature Language="C++ CLI" Value="public enum class ConfigureAwaitOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Options to control behavior when awaiting.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContinueOnCapturedContext">
      <MemberSignature Language="C#" Value="ContinueOnCapturedContext" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.ConfigureAwaitOptions ContinueOnCapturedContext = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.ConfigureAwaitOptions.ContinueOnCapturedContext" />
      <MemberSignature Language="VB.NET" Value="ContinueOnCapturedContext" />
      <MemberSignature Language="F#" Value="ContinueOnCapturedContext = 1" Usage="System.Threading.Tasks.ConfigureAwaitOptions.ContinueOnCapturedContext" />
      <MemberSignature Language="C++ CLI" Value="ContinueOnCapturedContext" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ConfigureAwaitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Attempts to marshal the continuation back to the original <see cref="T:System.Threading.SynchronizationContext" /> or <see cref="T:System.Threading.Tasks.TaskScheduler" /> present on the originating thread at the time of the await.</summary>
      </Docs>
    </Member>
    <Member MemberName="ForceYielding">
      <MemberSignature Language="C#" Value="ForceYielding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.ConfigureAwaitOptions ForceYielding = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.ConfigureAwaitOptions.ForceYielding" />
      <MemberSignature Language="VB.NET" Value="ForceYielding" />
      <MemberSignature Language="F#" Value="ForceYielding = 4" Usage="System.Threading.Tasks.ConfigureAwaitOptions.ForceYielding" />
      <MemberSignature Language="C++ CLI" Value="ForceYielding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ConfigureAwaitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Forces an await on an already completed <see cref="T:System.Threading.Tasks.Task" /> to behave as if the <see cref="T:System.Threading.Tasks.Task" /> wasn't yet completed, such that the current asynchronous method will be forced to yield its execution.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.ConfigureAwaitOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.ConfigureAwaitOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Threading.Tasks.ConfigureAwaitOptions.None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ConfigureAwaitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>No options specified.</summary>
      </Docs>
    </Member>
    <Member MemberName="SuppressThrowing">
      <MemberSignature Language="C#" Value="SuppressThrowing" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.ConfigureAwaitOptions SuppressThrowing = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.ConfigureAwaitOptions.SuppressThrowing" />
      <MemberSignature Language="VB.NET" Value="SuppressThrowing" />
      <MemberSignature Language="F#" Value="SuppressThrowing = 2" Usage="System.Threading.Tasks.ConfigureAwaitOptions.SuppressThrowing" />
      <MemberSignature Language="C++ CLI" Value="SuppressThrowing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ConfigureAwaitOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Avoids throwing an exception at the completion of awaiting a <see cref="T:System.Threading.Tasks.Task" /> that ends in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</summary>
      </Docs>
    </Member>
  </Members>
</Type>

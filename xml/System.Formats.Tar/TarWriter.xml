<Type Name="TarWriter" FullName="System.Formats.Tar.TarWriter">
  <TypeSignature Language="C#" Value="public sealed class TarWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TarWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Tar.TarWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TarWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type TarWriter = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TarWriter sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Tar</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Writes a tar archive into a stream.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TarWriter (System.IO.Stream archiveStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream archiveStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Tar.TarWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (archiveStream As Stream)" />
      <MemberSignature Language="F#" Value="new System.Formats.Tar.TarWriter : System.IO.Stream -&gt; System.Formats.Tar.TarWriter" Usage="new System.Formats.Tar.TarWriter archiveStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TarWriter(System::IO::Stream ^ archiveStream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="archiveStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="archiveStream">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TarWriter (System.IO.Stream archiveStream, bool leaveOpen = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream archiveStream, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Tar.TarWriter.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (archiveStream As Stream, Optional leaveOpen As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Formats.Tar.TarWriter : System.IO.Stream * bool -&gt; System.Formats.Tar.TarWriter" Usage="new System.Formats.Tar.TarWriter (archiveStream, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="archiveStream" Type="System.IO.Stream" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="archiveStream">To be added.</param>
        <param name="leaveOpen">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TarWriter (System.IO.Stream archiveStream, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt;? globalExtendedAttributes = default, bool leaveOpen = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream archiveStream, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; globalExtendedAttributes, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Tar.TarWriter.#ctor(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (archiveStream As Stream, Optional globalExtendedAttributes As IEnumerable(Of KeyValuePair(Of String, String)) = Nothing, Optional leaveOpen As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Formats.Tar.TarWriter : System.IO.Stream * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; * bool -&gt; System.Formats.Tar.TarWriter" Usage="new System.Formats.Tar.TarWriter (archiveStream, globalExtendedAttributes, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="archiveStream" Type="System.IO.Stream" />
        <Parameter Name="globalExtendedAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="archiveStream">The stream to write to.</param>
        <param name="globalExtendedAttributes">An optional enumeration of string key-value pairs that represent Global Extended Attributes metadata that should apply to all subsequent entries. If <see langword="null" />, then no Global Extended Attributes entry is written. If an empty instance is passed, a Global Extended Attributes entry is written with default values.</param>
        <param name="leaveOpen">
          <see langword="false" /> to dispose the <paramref name="archiveStream" /> when this instance is disposed; <see langword="true" /> to leave the stream open.</param>
        <summary>Initializes a <see cref="T:System.Formats.Tar.TarWriter" /> instance that can write tar entries to the specified stream, optionally leave the stream open upon disposal of this instance, and optionally add a Global Extended Attributes entry at the beginning of the archive.</summary>
        <remarks>When using this constructor, the format of the resulting archive is <see cref="F:System.Formats.Tar.TarEntryFormat.Pax" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TarWriter (System.IO.Stream archiveStream, System.Formats.Tar.TarEntryFormat format = System.Formats.Tar.TarEntryFormat.Pax, bool leaveOpen = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream archiveStream, valuetype System.Formats.Tar.TarEntryFormat format, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Tar.TarWriter.#ctor(System.IO.Stream,System.Formats.Tar.TarEntryFormat,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (archiveStream As Stream, Optional format As TarEntryFormat = System.Formats.Tar.TarEntryFormat.Pax, Optional leaveOpen As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Formats.Tar.TarWriter : System.IO.Stream * System.Formats.Tar.TarEntryFormat * bool -&gt; System.Formats.Tar.TarWriter" Usage="new System.Formats.Tar.TarWriter (archiveStream, format, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="archiveStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Formats.Tar.TarEntryFormat" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="archiveStream">The stream to write to.</param>
        <param name="archiveFormat">The format of the archive.</param>
        <param name="leaveOpen">
          <see langword="false" /> to dispose the <paramref name="archiveStream" /> when this instance is disposed; <see langword="true" /> to leave the stream open.</param>
        <summary>Initializes a <see cref="T:System.Formats.Tar.TarWriter" /> instance that can write tar entries to the specified stream, optionally leave the stream open upon disposal of this instance, and specify the format of the underlying archive.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

The recommended format is <xref:System.Formats.Tar.TarEntryFormat.Pax> for its flexibility.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="archiveStream" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="archiveStream" /> is unwritable.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="archiveFormat" /> is either <see cref="F:System.Formats.Tar.TarEntryFormat.Unknown" />, or not one of the other enum values.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Tar.TarWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tarWriter.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the current <see cref="T:System.Formats.Tar.TarWriter" /> instance, and closes the archive stream if the <c>leaveOpen</c> argument was set to <see langword="false" /> in the constructor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Formats.Tar.TarEntryFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Tar.TarEntryFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Tar.TarWriter.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As TarEntryFormat" />
      <MemberSignature Language="F#" Value="member this.Format : System.Formats.Tar.TarEntryFormat" Usage="System.Formats.Tar.TarWriter.Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Formats::Tar::TarEntryFormat Format { System::Formats::Tar::TarEntryFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Tar.TarEntryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The format of the archive.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (System.Formats.Tar.TarEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(class System.Formats.Tar.TarEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Tar.TarWriter.WriteEntry(System.Formats.Tar.TarEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (entry As TarEntry)" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : System.Formats.Tar.TarEntry -&gt; unit" Usage="tarWriter.WriteEntry entry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::Formats::Tar::TarEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Formats.Tar.TarEntry" />
      </Parameters>
      <Docs>
        <param name="entry">The tar entry to write.</param>
        <summary>Writes the specified entry into the archive stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Before writing an entry to the archive, if you wrote data into the entry's <xref:System.Formats.Tar.TarEntry.DataStream>, make sure to rewind it to the desired start position.

These are the entry types supported for writing on each format:

- <xref:System.Formats.Tar.TarEntryFormat.V7>

   - <xref:System.Formats.Tar.TarEntryType.Directory>
   - <xref:System.Formats.Tar.TarEntryType.HardLink>
   - <xref:System.Formats.Tar.TarEntryType.SymbolicLink>
   - <xref:System.Formats.Tar.TarEntryType.V7RegularFile>

- <xref:System.Formats.Tar.TarEntryFormat.Ustar>, <xref:System.Formats.Tar.TarEntryFormat.Pax>, and <xref:System.Formats.Tar.TarEntryFormat.Gnu>

   - <xref:System.Formats.Tar.TarEntryType.BlockDevice>
   - <xref:System.Formats.Tar.TarEntryType.CharacterDevice>
   - <xref:System.Formats.Tar.TarEntryType.Directory>
   - <xref:System.Formats.Tar.TarEntryType.Fifo>
   - <xref:System.Formats.Tar.TarEntryType.HardLink>
   - <xref:System.Formats.Tar.TarEntryType.RegularFile>
   - <xref:System.Formats.Tar.TarEntryType.SymbolicLink>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The archive stream is disposed.</exception>
        <exception cref="T:System.InvalidOperationException">The entry type of the <paramref name="entry" /> is not supported for writing.</exception>
        <exception cref="T:System.IO.IOException">An I/O problem ocurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string fileName, string? entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string fileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Tar.TarWriter.WriteEntry(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (fileName As String, entryName As String)" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * string -&gt; unit" Usage="tarWriter.WriteEntry (fileName, entryName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ fileName, System::String ^ entryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The path to the file to write to the archive.</param>
        <param name="entryName">The name of the file as it should be represented in the archive. It should include the optional relative path and the filename.</param>
        <summary>Writes the specified file into the archive stream as a tar entry.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">The archive stream is disposed.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> or <paramref name="entryName" /> is <see langword="null" /> or empty.</exception>
        <exception cref="T:System.IO.IOException">An I/O problem ocurred.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

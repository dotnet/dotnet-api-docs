<Type Name="PosixTarEntry" FullName="System.Formats.Tar.PosixTarEntry">
  <TypeSignature Language="C#" Value="public abstract class PosixTarEntry : System.Formats.Tar.TarEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PosixTarEntry extends System.Formats.Tar.TarEntry" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Tar.PosixTarEntry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PosixTarEntry&#xA;Inherits TarEntry" />
  <TypeSignature Language="F#" Value="type PosixTarEntry = class&#xA;    inherit TarEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class PosixTarEntry abstract : System::Formats::Tar::TarEntry" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Tar</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Formats.Tar.TarEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines the core behavior of a tar entry from an archive of a format that is based on the POSIX IEEE P1003.1 standard from 1988. This includes the formats <see cref="F:System.Formats.Tar.TarEntryFormat.Ustar" /> (represented by the <see cref="T:System.Formats.Tar.UstarTarEntry" /> class), <see cref="F:System.Formats.Tar.TarEntryFormat.Pax" /> (represented by the <see cref="T:System.Formats.Tar.PaxTarEntry" /> class), and <see cref="F:System.Formats.Tar.TarEntryFormat.Gnu" /> (represented by the <see cref="T:System.Formats.Tar.GnuTarEntry" /> class).</summary>
    <remarks>
      <para>Formats that implement the POSIX IEEE P1003.1 standard from 1988 support the following header fields: <c>devmajor</c>, <c>devminor</c>, <c>gname</c>, and <c>uname</c>.</para>
      <para>Even though the <see cref="F:System.Formats.Tar.TarEntryFormat.Gnu" /> format is not POSIX compatible, it implements and supports the Unix-specific fields that were defined in that POSIX standard.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DeviceMajor">
      <MemberSignature Language="C#" Value="public int DeviceMajor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeviceMajor" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Tar.PosixTarEntry.DeviceMajor" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceMajor As Integer" />
      <MemberSignature Language="F#" Value="member this.DeviceMajor : int with get, set" Usage="System.Formats.Tar.PosixTarEntry.DeviceMajor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DeviceMajor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the device's major number. When the current entry represents a character device or a block device, the major number identifies the driver associated with the device.</summary>
        <value>To be added.</value>
        <remarks>Character and block devices are Unix-specific entry types.</remarks>
        <exception cref="T:System.InvalidOperationException">The entry does not represent a block device or a character device.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is negative, or larger than 2097151.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeviceMinor">
      <MemberSignature Language="C#" Value="public int DeviceMinor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeviceMinor" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Tar.PosixTarEntry.DeviceMinor" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceMinor As Integer" />
      <MemberSignature Language="F#" Value="member this.DeviceMinor : int with get, set" Usage="System.Formats.Tar.PosixTarEntry.DeviceMinor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DeviceMinor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the device's minor number. When the current entry represents a character device or a block device, the minor number is used by the driver to distinguish individual devices it controls.</summary>
        <value>To be added.</value>
        <remarks>Character and block devices are Unix-specific entry types.</remarks>
        <exception cref="T:System.InvalidOperationException">The entry does not represent a block device or a character device.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The value is negative, or larger than 2097151.</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Tar.PosixTarEntry.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Formats.Tar.PosixTarEntry.GroupName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the group that owns this entry.</summary>
        <value>To be added.</value>
        <remarks>
          <see cref="P:System.Formats.Tar.PosixTarEntry.GroupName" /> is only used in Unix platforms.</remarks>
        <exception cref="T:System.ArgumentNullException">The group name is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Tar.PosixTarEntry.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Formats.Tar.PosixTarEntry.UserName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Tar</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the user that owns this entry.</summary>
        <value>To be added.</value>
        <remarks>
          <see cref="P:System.Formats.Tar.PosixTarEntry.UserName" /> is only used in Unix platforms.</remarks>
        <exception cref="T:System.ArgumentNullException">The user name is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

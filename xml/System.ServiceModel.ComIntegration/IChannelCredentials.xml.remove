<Type Name="IChannelCredentials" FullName="System.ServiceModel.ComIntegration.IChannelCredentials">
  <TypeSignature Language="C#" Value="public interface IChannelCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelCredentials" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ComIntegration.IChannelCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelCredentials" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelCredentials" />
  <TypeSignature Language="F#" Value="type IChannelCredentials = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("181b448c-c17c-4b17-ac6d-06699b93198f")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An interface that allows the setting of certain security features on a service proxy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unmanaged clients use the "service" moniker to access Windows Communication Foundation (WCF) services. These clients are subject to the WCF security model rather than the COM security model. The <xref:System.ServiceModel.ComIntegration.IChannelCredentials> interface is provided to specify channel credentials. This is required because the COM moniker cannot access the managed WCF security object model.  
  
 It is not legal to call methods on the `IChannelCredentials` interface after the channel is created. This is because Windows Communication Foundation (WCF) does not support changing security settings on an already opened channel. When the service moniker client obtains a proxy, the channel is not yet created. Thus, the client must call `IChannelCredentials` methods prior to invoking the service method. If the client calls an `IChannelCredentials` method after the service method is invoked, the exception RPC_E_TOO_LATE is thrown.  
  
   
  
## Examples  
  
```  
monString = "service:mexAddress=http://localhost:8000/ServiceModelSamples/Service?wsdl"  
    monString = monString + ", address=http://localhost:8000/ServiceModelSamples/Service"  
    monString = monString + ", binding=BasicHttpBinding_ICalculator, bindingNamespace=http://Microsoft.ServiceModel.Samples"  
    monString = monString + ", contract=ICalculator, contractNamespace=http://Microsoft.ServiceModel.Samples"  
  
    Set monikerProxy = GetObject(monString)  
  
    'Set the Service Certificate.  
    monikerProxy.ChannelCredentials.SetServiceCertificateAuthentication "CurrentUser", "NoCheck", "PeerOrChainTrust"  
    monikerProxy.ChannelCredentials.SetDefaultServiceCertificateFromStore "CurrentUser", "TrustedPeople", "FindBySubjectName", "localhost"  
  
    'Set the Client Certificate.  
    monikerProxy.ChannelCredentials.SetClientCertificateFromStoreByName "CN=client.com", "CurrentUser", "My"  
    MsgBox monikerProxy.Add(3, 4)  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetClientCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">File name that contains the certificate.</param>
        <param name="password">Password required for the file.</param>
        <param name="keyStorageFlags">Storage flags for the certificate.</param>
        <summary>Retrieves a certificate from a file and adds it to the client credentials.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Certificate store location.</param>
        <param name="storeName">Certificate store name.</param>
        <param name="findType">Search type.</param>
        <param name="findValue">Search value.</param>
        <summary>Retrieves a certificate from a certificate store and adds it to the client credentials.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">Certificate subject name.</param>
        <param name="storeLocation">Certificate store location.</param>
        <param name="storeName">Certificate store name.</param>
        <summary>Retrieves a certificate from a certificate store by name and adds it to the client credentials.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Certificate file name.</param>
        <param name="password">Password for certificate file.</param>
        <param name="keyStorageFlags">Storage flags for certificate.</param>
        <summary>Retrieves a certificate from a file and adds it to the service credentials as the default certificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Certificate store location.</param>
        <param name="storeName">Certificate store name.</param>
        <param name="findType">Search type.</param>
        <param name="findValue">Search value.</param>
        <summary>Retrieves a certificate from a certificate store and adds it to the service credentials as the default certificate.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">Certificate subject name.</param>
        <param name="storeLocation">Certificate store location.</param>
        <param name="storeName">Certificate store name.</param>
        <summary>Retrieves a certificate from a certificate store by name and adds it to the service credentials as the default certificate</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIssuedToken">
      <MemberSignature Language="C#" Value="public void SetIssuedToken (string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIssuedToken(string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIssuedToken (localIssuerAddres As String, localIssuerBindingType As String, localIssuerBinding As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIssuedToken(System::String ^ localIssuerAddres, System::String ^ localIssuerBindingType, System::String ^ localIssuerBinding);" />
      <MemberSignature Language="F#" Value="abstract member SetIssuedToken : string * string * string -&gt; unit" Usage="iChannelCredentials.SetIssuedToken (localIssuerAddres, localIssuerBindingType, localIssuerBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localIssuerAddres" Type="System.String" />
        <Parameter Name="localIssuerBindingType" Type="System.String" />
        <Parameter Name="localIssuerBinding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localIssuerAddres">Endpoint address.</param>
        <param name="localIssuerBindingType">Binding type.</param>
        <param name="localIssuerBinding">Binding name.</param>
        <summary>Sets parameters for the issued token.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetServiceCertificateAuthentication">
      <MemberSignature Language="C#" Value="public void SetServiceCertificateAuthentication (string storeLocation, string revocationMode, string certificationValidationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetServiceCertificateAuthentication(string storeLocation, string revocationMode, string certificationValidationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceCertificateAuthentication (storeLocation As String, revocationMode As String, certificationValidationMode As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceCertificateAuthentication(System::String ^ storeLocation, System::String ^ revocationMode, System::String ^ certificationValidationMode);" />
      <MemberSignature Language="F#" Value="abstract member SetServiceCertificateAuthentication : string * string * string -&gt; unit" Usage="iChannelCredentials.SetServiceCertificateAuthentication (storeLocation, revocationMode, certificationValidationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="revocationMode" Type="System.String" />
        <Parameter Name="certificationValidationMode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Store location.</param>
        <param name="revocationMode">Revocation mode.</param>
        <param name="certificationValidationMode">Certification validation mode.</param>
        <summary>Sets the service certificate authentication parameters.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNameCredential">
      <MemberSignature Language="C#" Value="public void SetUserNameCredential (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserNameCredential(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserNameCredential (userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserNameCredential(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member SetUserNameCredential : string * string -&gt; unit" Usage="iChannelCredentials.SetUserNameCredential (userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">User name.</param>
        <param name="password">Password.</param>
        <summary>Sets the user name credentials.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowsCredential">
      <MemberSignature Language="C#" Value="public void SetWindowsCredential (string domain, string userName, string password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowsCredential(string domain, string userName, string password, int32 impersonationLevel, bool allowNtlm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWindowsCredential (domain As String, userName As String, password As String, impersonationLevel As Integer, allowNtlm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWindowsCredential(System::String ^ domain, System::String ^ userName, System::String ^ password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="F#" Value="abstract member SetWindowsCredential : string * string * string * int * bool -&gt; unit" Usage="iChannelCredentials.SetWindowsCredential (domain, userName, password, impersonationLevel, allowNtlm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="impersonationLevel" Type="System.Int32" />
        <Parameter Name="allowNtlm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="domain">Domain.</param>
        <param name="userName">User name.</param>
        <param name="password">Password.</param>
        <param name="impersonationLevel">Impersonation level.</param>
        <param name="allowNtlm">Allow NTLM authentication scheme.</param>
        <summary>Sets the Windows credentials.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

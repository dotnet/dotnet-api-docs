<Type Name="LoggingOptions" FullName="Microsoft.Extensions.Telemetry.Logging.LoggingOptions">
  <TypeSignature Language="C#" Value="public class LoggingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoggingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Telemetry.Logging.LoggingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class LoggingOptions" />
  <TypeSignature Language="F#" Value="type LoggingOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggingOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for logger.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoggingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Telemetry.Logging.LoggingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoggingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeScopes">
      <MemberSignature Language="C#" Value="public bool IncludeScopes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeScopes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Logging.LoggingOptions.IncludeScopes" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeScopes As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeScopes : bool with get, set" Usage="Microsoft.Extensions.Telemetry.Logging.LoggingOptions.IncludeScopes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeScopes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether to include log scopes in
            captured log state.
            </summary>
        <value>To be added.</value>
        <remarks>
            Default set to <see langword="false" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeStackTrace">
      <MemberSignature Language="C#" Value="public bool IncludeStackTrace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStackTrace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Logging.LoggingOptions.IncludeStackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStackTrace As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeStackTrace : bool with get, set" Usage="Microsoft.Extensions.Telemetry.Logging.LoggingOptions.IncludeStackTrace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStackTrace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value indicating whether to include stack trace when exception is logged.
             </summary>
        <value>To be added.</value>
        <remarks>
             When set to <see langword="true" /> and exceptions are logged, the logger will add exception stack trace
             with inner exception as a separate key-value pair with key 'stackTrace'. The max length of the column
             defaults to 4096 characters and can be modified by setting the <see cref="P:Microsoft.Extensions.Telemetry.Logging.LoggingOptions.MaxStackTraceLength" /> property.
             Stack trace beyond the current limit will be truncated.
            
             Default set to <see langword="false" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStackTraceLength">
      <MemberSignature Language="C#" Value="public int MaxStackTraceLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxStackTraceLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Logging.LoggingOptions.MaxStackTraceLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxStackTraceLength As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxStackTraceLength : int with get, set" Usage="Microsoft.Extensions.Telemetry.Logging.LoggingOptions.MaxStackTraceLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxStackTraceLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DataAnnotations.Range(2048, 32768, ErrorMessage="Maximum stack trace length should be between 2kb and 32kb")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DataAnnotations.Range(2048, 32768, ErrorMessage="Maximum stack trace length should be between 2kb and 32kb")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value indicating maximum stack trace length configured by the user.
             </summary>
        <value>To be added.</value>
        <remarks>
             When set to a value less than 2kb or greater than 32kb, an exception will be thrown.
            
             Default set to 4096.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFormattedMessage">
      <MemberSignature Language="C#" Value="public bool UseFormattedMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFormattedMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Telemetry.Logging.LoggingOptions.UseFormattedMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFormattedMessage As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseFormattedMessage : bool with get, set" Usage="Microsoft.Extensions.Telemetry.Logging.LoggingOptions.UseFormattedMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseFormattedMessage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Telemetry</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value indicating whether to format the message included in captured log state.
             </summary>
        <value>To be added.</value>
        <remarks>
             When set to <see langword="true" /> the placeholders in the message will be replaced by the actual values
             otherwise the message template will be included as-is without replacements.
            
             Default set to <see langword="false" />.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="Compensator" FullName="System.EnterpriseServices.CompensatingResourceManager.Compensator">
  <TypeSignature Language="C#" Value="public class Compensator : System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Compensator extends System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" />
  <TypeSignature Language="VB.NET" Value="Public Class Compensator&#xA;Inherits ServicedComponent" />
  <TypeSignature Language="F#" Value="type Compensator = class&#xA;    inherit ServicedComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class Compensator : System::EnterpriseServices::ServicedComponent" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EnterpriseServices.ServicedComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the base class for all Compensating Resource Manager (CRM) Compensators.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The user should extend from this object in order to write a custom transaction Compensator.  
  
 A Compensator must always have a public constructor; otherwise, the recovery engine cannot create it.  
  
 For more information, see [How to: Create a Compensating Resource Manager (CRM)](https://msdn.microsoft.com/library/0a8a024b-0be1-4519-a659-076577278029).  
  
   
  
## Examples  
 The following code example demonstrates the use of this class.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet20":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet20":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet20":::  
  
 This compensator is used by the following worker class.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet10":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet10":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet10":::  
  
 The following code example demonstrates a client that exercises this compensator and worker.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmclient.cpp" id="Snippet30":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmclient.cs" id="Snippet30":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmclient.vb" id="Snippet30":::  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Compensator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Compensator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortRecord">
      <MemberSignature Language="C#" Value="public virtual bool AbortRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AbortRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbortRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AbortRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.AbortRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.AbortRecord rec" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AbortRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">The log record to be delivered.</param>
        <summary>Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.</summary>
        <returns>
          <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet28":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet28":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet28":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAbort">
      <MemberSignature Language="C#" Value="public virtual void BeginAbort (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAbort(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginAbort (fRecovery As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member BeginAbort : bool -&gt; unit&#xA;override this.BeginAbort : bool -&gt; unit" Usage="compensator.BeginAbort fRecovery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAbort(bool fRecovery);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">
          <see langword="true" /> to begin abort phase; otherwise, <see langword="false" />.</param>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet27":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet27":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet27":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public virtual void BeginCommit (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginCommit(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginCommit (fRecovery As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member BeginCommit : bool -&gt; unit&#xA;override this.BeginCommit : bool -&gt; unit" Usage="compensator.BeginCommit fRecovery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginCommit(bool fRecovery);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery">
          <see langword="true" /> to begin commit phase; otherwise, <see langword="false" />.</param>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet24":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet24":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet24":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrepare">
      <MemberSignature Language="C#" Value="public virtual void BeginPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginPrepare ()" />
      <MemberSignature Language="F#" Value="abstract member BeginPrepare : unit -&gt; unit&#xA;override this.BeginPrepare : unit -&gt; unit" Usage="compensator.BeginPrepare " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginPrepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet21":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet21":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet21":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clerk">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clerk As Clerk" />
      <MemberSignature Language="F#" Value="member this.Clerk : System.EnterpriseServices.CompensatingResourceManager.Clerk" Usage="System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::CompensatingResourceManager::Clerk ^ Clerk { System::EnterpriseServices::CompensatingResourceManager::Clerk ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.CompensatingResourceManager.Clerk</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value representing the Compensating Resource Manager (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</summary>
        <value>The <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitRecord">
      <MemberSignature Language="C#" Value="public virtual bool CommitRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommitRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CommitRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.CommitRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.CommitRecord rec" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CommitRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">The log record to forward.</param>
        <summary>Delivers a log record in forward order during the commit phase.</summary>
        <returns>
          <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet25":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet25":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet25":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAbort">
      <MemberSignature Language="C#" Value="public virtual void EndAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAbort ()" />
      <MemberSignature Language="F#" Value="abstract member EndAbort : unit -&gt; unit&#xA;override this.EndAbort : unit -&gt; unit" Usage="compensator.EndAbort " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet29":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet29":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet29":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public virtual void EndCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndCommit ()" />
      <MemberSignature Language="F#" Value="abstract member EndCommit : unit -&gt; unit&#xA;override this.EndCommit : unit -&gt; unit" Usage="compensator.EndCommit " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndCommit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet26":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet26":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet26":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPrepare">
      <MemberSignature Language="C#" Value="public virtual bool EndPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndPrepare () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EndPrepare : unit -&gt; bool&#xA;override this.EndPrepare : unit -&gt; bool" Usage="compensator.EndPrepare " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndPrepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.</summary>
        <returns>
          <see langword="true" /> if successful; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet23":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet23":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet23":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareRecord">
      <MemberSignature Language="C#" Value="public virtual bool PrepareRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrepareRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrepareRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member PrepareRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.PrepareRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.PrepareRecord rec" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PrepareRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec">The log record to forward.</param>
        <summary>Delivers a log record in forward order during the prepare phase.</summary>
        <returns>
          <see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates the implementation of this method.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp" id="Snippet22":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs" id="Snippet22":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb" id="Snippet22":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
